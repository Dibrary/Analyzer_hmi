/**
 * File: OpCodes.h
 * Autogenerated on Fri Mar 23 13:38:29 EDT 2018 based on
 * OpCodes.java
 * for the Java class
 * com/oceanoptics/omnidriver/constants/OpCodes
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef OPCODES_H
#define OPCODES_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED OpCodes : public BaseJavaClass // CPPClass.tag001
{
public: 
	OpCodes();
	~OpCodes();
	// No public Java copy constructor; creating one:
	OpCodes(const OpCodes &that);
	// Creating assignment operator declaration:
	OpCodes &operator=(const OpCodes &that);
	signed char OP_INIT;
	signed char OP_ITIME;
	signed char OP_STROBE;
	signed char OP_POWERDOWN;
	signed char OP_GETINFO;
	signed char OP_PUTINFO;
	signed char OP_REQUESTSPEC;
	signed char OP_SETTRIGMODE;
	signed char OP_PLUGINCOUNT;
	signed char OP_PLUGIN;
	signed char OP_PLUGINDETECT;
	signed char OP_STOPSPEC;
	signed char OP_STATUS;
	signed char OP_I2CREAD;
	signed char OP_I2CWRITE;
	signed char OP_SPIREAD;
	signed char OP_SPIWRITE;
	signed char OP_FPGAWRITE;
	signed char OP_FPGAREAD;
	signed char OP_READTEMP;
	signed char OP_GETIRCAL;
	signed char OP_SETIRCAL;
	signed char OP_PSOCREAD;
	signed char OP_PSOCREAD_NIR;
	signed char OP_PSOCWRITE;
	signed char OP_PSOCWRITE_NIR;
	signed char OP_IRTE;
	signed char OP_HIGHGAIN;
	signed char OP_FANON;
	signed char OP_DACINIT;
	signed char OP_DACREAD;
	signed char OP_DACWRITE;
	signed char OP_ADCRATE;
	signed char OP_SETMCLK_ADC;
	signed char OP_SETMCLK_2000;
	signed char OP_FANENABLE_QE;
	signed char OP_TECENABLE_QE;
	signed char OP_READTEC_QE;
	signed char OP_TECSETTEMP_QE;
	signed char OP_SETCHANNEL;
	signed char OP_CONTSTROBE;
	signed char OP_LS450_GETTEMP;
	signed char OP_LS450_SETLEDMODE;
	signed char OP_LS450_PUTINFO;
	signed char OP_LS450_GETINFO;
	signed char OP_LS450_SETDAVALUE;
	signed char OP_LS450_LOADINFO;
	signed char OP_LS450_SAVEINFO;
	signed char OP_D2SETR;
	signed char OP_D2WRITEDCP;
	signed char OP_D2READR;
	signed char OP_BADPIX_READ;
	signed char OP_BADPIX_WRITE;
	signed char OP_JAZ_GET_NUMBER_OF_CHANNELS;
	signed char OP_JAZ_SET_SELECTED_CHANNEL;
	signed char OP_QUERY_PIXEL_INFO;
	signed char OP_JAZ_READ_INFO_SLOT;
	signed char CUV_OPCODE_FLAME_EEP_ADDR;
	signed char CUV_OPCODE_FLAME_DAC_ADDR;
	signed char CUV_OPCODE_SET_LED_INTENSITY;
	signed char CUV_OPCODE_SET_LAMP_INTENSITY;
	signed char CUV_OPCODE_SET_BOTH_INTENSITY;
	int FVN_MAX;
	int FVN_MIN;
	signed char SYNCH_BYTE;

private:
	jmethodID mid_OpCodes683;
	jfieldID fid_OP_INIT;
	jfieldID fid_OP_ITIME;
	jfieldID fid_OP_STROBE;
	jfieldID fid_OP_POWERDOWN;
	jfieldID fid_OP_GETINFO;
	jfieldID fid_OP_PUTINFO;
	jfieldID fid_OP_REQUESTSPEC;
	jfieldID fid_OP_SETTRIGMODE;
	jfieldID fid_OP_PLUGINCOUNT;
	jfieldID fid_OP_PLUGIN;
	jfieldID fid_OP_PLUGINDETECT;
	jfieldID fid_OP_STOPSPEC;
	jfieldID fid_OP_STATUS;
	jfieldID fid_OP_I2CREAD;
	jfieldID fid_OP_I2CWRITE;
	jfieldID fid_OP_SPIREAD;
	jfieldID fid_OP_SPIWRITE;
	jfieldID fid_OP_FPGAWRITE;
	jfieldID fid_OP_FPGAREAD;
	jfieldID fid_OP_READTEMP;
	jfieldID fid_OP_GETIRCAL;
	jfieldID fid_OP_SETIRCAL;
	jfieldID fid_OP_PSOCREAD;
	jfieldID fid_OP_PSOCREAD_NIR;
	jfieldID fid_OP_PSOCWRITE;
	jfieldID fid_OP_PSOCWRITE_NIR;
	jfieldID fid_OP_IRTE;
	jfieldID fid_OP_HIGHGAIN;
	jfieldID fid_OP_FANON;
	jfieldID fid_OP_DACINIT;
	jfieldID fid_OP_DACREAD;
	jfieldID fid_OP_DACWRITE;
	jfieldID fid_OP_ADCRATE;
	jfieldID fid_OP_SETMCLK_ADC;
	jfieldID fid_OP_SETMCLK_2000;
	jfieldID fid_OP_FANENABLE_QE;
	jfieldID fid_OP_TECENABLE_QE;
	jfieldID fid_OP_READTEC_QE;
	jfieldID fid_OP_TECSETTEMP_QE;
	jfieldID fid_OP_SETCHANNEL;
	jfieldID fid_OP_CONTSTROBE;
	jfieldID fid_OP_LS450_GETTEMP;
	jfieldID fid_OP_LS450_SETLEDMODE;
	jfieldID fid_OP_LS450_PUTINFO;
	jfieldID fid_OP_LS450_GETINFO;
	jfieldID fid_OP_LS450_SETDAVALUE;
	jfieldID fid_OP_LS450_LOADINFO;
	jfieldID fid_OP_LS450_SAVEINFO;
	jfieldID fid_OP_D2SETR;
	jfieldID fid_OP_D2WRITEDCP;
	jfieldID fid_OP_D2READR;
	jfieldID fid_OP_BADPIX_READ;
	jfieldID fid_OP_BADPIX_WRITE;
	jfieldID fid_OP_JAZ_GET_NUMBER_OF_CHANNELS;
	jfieldID fid_OP_JAZ_SET_SELECTED_CHANNEL;
	jfieldID fid_OP_QUERY_PIXEL_INFO;
	jfieldID fid_OP_JAZ_READ_INFO_SLOT;
	jfieldID fid_CUV_OPCODE_FLAME_EEP_ADDR;
	jfieldID fid_CUV_OPCODE_FLAME_DAC_ADDR;
	jfieldID fid_CUV_OPCODE_SET_LED_INTENSITY;
	jfieldID fid_CUV_OPCODE_SET_LAMP_INTENSITY;
	jfieldID fid_CUV_OPCODE_SET_BOTH_INTENSITY;
	jfieldID fid_FVN_MAX;
	jfieldID fid_FVN_MIN;
	jfieldID fid_SYNCH_BYTE;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_OPCODES_T
#define EXTERN_TYPEDEF_OPCODES_T
	typedef void* OPCODES_T;
#endif /* EXTERN_TYPEDEF_OPCODES_T */

	EXPORTED OPCODES_T OpCodes_Create();
	EXPORTED void OpCodes_Destroy(OPCODES_T op_codes);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED OPCODES_T STDCALL OpCodes_Create_stdcall();
	EXPORTED void STDCALL OpCodes_Destroy_stdcall(OPCODES_T op_codes);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* OPCODES_H */
