/**
 * File: USBDeviceDescriptor.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * USBDeviceDescriptor.java
 * for the Java class
 * com/oceanoptics/uniusb/USBDeviceDescriptor
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USBDEVICEDESCRIPTOR_H
#define USBDEVICEDESCRIPTOR_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USBDeviceDescriptor : public BaseJavaClass // CPPClass.tag001
{
public: 
	USBDeviceDescriptor();
	JString toString();
	signed char getLength();
	signed char getDescriptorType();
	short getbcdUSB();
	signed char getDeviceClass();
	signed char getDeviceSubClass();
	signed char getDeviceProtocol();
	short getMaxPacketSize0();
	short getVendorID();
	short getProductID();
	short getbcdDevice();
	signed char getManufacturer();
	signed char getProduct();
	signed char getSerialNumber();
	signed char getNumConfigurations();
	~USBDeviceDescriptor();
	// No public Java copy constructor; creating one:
	USBDeviceDescriptor(const USBDeviceDescriptor &that);
	// Creating assignment operator declaration:
	USBDeviceDescriptor &operator=(const USBDeviceDescriptor &that);

private:
	jmethodID mid_USBDeviceDescriptor6602;
	jmethodID mid_toString6603;
	jmethodID mid_getLength6604;
	jmethodID mid_getDescriptorType6605;
	jmethodID mid_getbcdUSB6606;
	jmethodID mid_getDeviceClass6607;
	jmethodID mid_getDeviceSubClass6608;
	jmethodID mid_getDeviceProtocol6609;
	jmethodID mid_getMaxPacketSize06610;
	jmethodID mid_getVendorID6611;
	jmethodID mid_getProductID6612;
	jmethodID mid_getbcdDevice6613;
	jmethodID mid_getManufacturer6614;
	jmethodID mid_getProduct6615;
	jmethodID mid_getSerialNumber6616;
	jmethodID mid_getNumConfigurations6617;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
	typedef void* USBDEVICEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T */

	EXPORTED USBDEVICEDESCRIPTOR_T USBDeviceDescriptor_Create();
	EXPORTED void USBDeviceDescriptor_toString(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor, JSTRING_T retval);
	EXPORTED signed char USBDeviceDescriptor_getLength(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getDescriptorType(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short USBDeviceDescriptor_getbcdUSB(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getDeviceClass(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getDeviceSubClass(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getDeviceProtocol(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short USBDeviceDescriptor_getMaxPacketSize0(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short USBDeviceDescriptor_getVendorID(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short USBDeviceDescriptor_getProductID(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short USBDeviceDescriptor_getbcdDevice(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getManufacturer(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getProduct(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getSerialNumber(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char USBDeviceDescriptor_getNumConfigurations(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED void USBDeviceDescriptor_Destroy(USBDEVICEDESCRIPTOR_T usbdevicedescriptor);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USBDEVICEDESCRIPTOR_T STDCALL USBDeviceDescriptor_Create_stdcall();
	EXPORTED void STDCALL USBDeviceDescriptor_toString_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor, JSTRING_T retval);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getLength_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getDescriptorType_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short STDCALL USBDeviceDescriptor_getbcdUSB_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getDeviceClass_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getDeviceSubClass_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getDeviceProtocol_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short STDCALL USBDeviceDescriptor_getMaxPacketSize0_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short STDCALL USBDeviceDescriptor_getVendorID_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short STDCALL USBDeviceDescriptor_getProductID_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED short STDCALL USBDeviceDescriptor_getbcdDevice_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getManufacturer_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getProduct_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getSerialNumber_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED signed char STDCALL USBDeviceDescriptor_getNumConfigurations_stdcall(USBDEVICEDESCRIPTOR_T c_usbdevicedescriptor);
	EXPORTED void STDCALL USBDeviceDescriptor_Destroy_stdcall(USBDEVICEDESCRIPTOR_T usbdevicedescriptor);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USBDEVICEDESCRIPTOR_H */
