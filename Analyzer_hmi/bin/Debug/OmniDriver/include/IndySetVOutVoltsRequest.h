/**
 * File: IndySetVOutVoltsRequest.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * IndySetVOutVoltsRequest.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/indy/IndySetVOutVoltsRequest
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INDYSETVOUTVOLTSREQUEST_H
#define INDYSETVOUTVOLTSREQUEST_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "DispatchProtocolMessage.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class DispatchProtocolMessage;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED IndySetVOutVoltsRequest : public DispatchProtocolMessage // CPPClass.tag001
{
public: 
	IndySetVOutVoltsRequest();
	int getModuleIndex();
	int getChannel();
	float getVolts();
	void setModuleIndex(int moduleIndex);
	void setChannel(int channel);
	void setVolts(float volts);
	~IndySetVOutVoltsRequest();
	// No public Java copy constructor; creating one:
	IndySetVOutVoltsRequest(const IndySetVOutVoltsRequest &that);
	// Creating assignment operator declaration:
	IndySetVOutVoltsRequest &operator=(const IndySetVOutVoltsRequest &that);

private:
	jmethodID mid_IndySetVOutVoltsRequest1565;
	jmethodID mid_getModuleIndex1566;
	jmethodID mid_getChannel1567;
	jmethodID mid_getVolts1568;
	jmethodID mid_setModuleIndex1569;
	jmethodID mid_setChannel1570;
	jmethodID mid_setVolts1571;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
	typedef void* DISPATCHPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T */
#ifndef EXTERN_TYPEDEF_INDYSETVOUTVOLTSREQUEST_T
#define EXTERN_TYPEDEF_INDYSETVOUTVOLTSREQUEST_T
	typedef void* INDYSETVOUTVOLTSREQUEST_T;
#endif /* EXTERN_TYPEDEF_INDYSETVOUTVOLTSREQUEST_T */

	EXPORTED INDYSETVOUTVOLTSREQUEST_T IndySetVOutVoltsRequest_Create();
	EXPORTED int IndySetVOutVoltsRequest_getModuleIndex(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request);
	EXPORTED int IndySetVOutVoltsRequest_getChannel(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request);
	EXPORTED float IndySetVOutVoltsRequest_getVolts(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request);
	EXPORTED void IndySetVOutVoltsRequest_setModuleIndex(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request, int moduleIndex);
	EXPORTED void IndySetVOutVoltsRequest_setChannel(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request, int channel);
	EXPORTED void IndySetVOutVoltsRequest_setVolts(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request, float volts);
	EXPORTED void IndySetVOutVoltsRequest_Destroy(INDYSETVOUTVOLTSREQUEST_T indy_set_v_out_volts_request);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED INDYSETVOUTVOLTSREQUEST_T STDCALL IndySetVOutVoltsRequest_Create_stdcall();
	EXPORTED int STDCALL IndySetVOutVoltsRequest_getModuleIndex_stdcall(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request);
	EXPORTED int STDCALL IndySetVOutVoltsRequest_getChannel_stdcall(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request);
	EXPORTED float STDCALL IndySetVOutVoltsRequest_getVolts_stdcall(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request);
	EXPORTED void STDCALL IndySetVOutVoltsRequest_setModuleIndex_stdcall(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request, int moduleIndex);
	EXPORTED void STDCALL IndySetVOutVoltsRequest_setChannel_stdcall(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request, int channel);
	EXPORTED void STDCALL IndySetVOutVoltsRequest_setVolts_stdcall(INDYSETVOUTVOLTSREQUEST_T c_indy_set_v_out_volts_request, float volts);
	EXPORTED void STDCALL IndySetVOutVoltsRequest_Destroy_stdcall(INDYSETVOUTVOLTSREQUEST_T indy_set_v_out_volts_request);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INDYSETVOUTVOLTSREQUEST_H */
