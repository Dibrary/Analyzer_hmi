/**
 * File: BoardTemperatureImpl_FX.h
 * Autogenerated on Fri Mar 23 13:38:31 EDT 2018 based on
 * BoardTemperatureImpl_FX.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/boardtemperature/BoardTemperatureImpl_FX
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef BOARDTEMPERATUREIMPL_FX_H
#define BOARDTEMPERATUREIMPL_FX_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "OceanBinaryProtocolProvider.h"
#include "USBInterface.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class OceanBinaryProtocolProvider;
class USBInterface;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED BoardTemperatureImpl_FX : public USBFeature // CPPClass.tag001
{
public: 
	BoardTemperatureImpl_FX(OceanBinaryProtocolProvider& flame, USBInterface& usbInt);
	double getBoardTemperatureCelsius();
	double getDetectorTemperatureCelsius();
	~BoardTemperatureImpl_FX();
	// No public default Java constructor; creating one:
	BoardTemperatureImpl_FX();
	// No public Java copy constructor; creating one:
	BoardTemperatureImpl_FX(const BoardTemperatureImpl_FX &that);
	// Creating assignment operator declaration:
	BoardTemperatureImpl_FX &operator=(const BoardTemperatureImpl_FX &that);

private:
	jmethodID mid_BoardTemperatureImpl_FX926;
	jmethodID mid_getBoardTemperatureCelsius927;
	jmethodID mid_getDetectorTemperatureCelsius928;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
	typedef void* OCEANBINARYPROTOCOLPROVIDER_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_BOARDTEMPERATUREIMPL_FX_T
#define EXTERN_TYPEDEF_BOARDTEMPERATUREIMPL_FX_T
	typedef void* BOARDTEMPERATUREIMPL_FX_T;
#endif /* EXTERN_TYPEDEF_BOARDTEMPERATUREIMPL_FX_T */

	// No public default Java constructor; creating one:
	EXPORTED BOARDTEMPERATUREIMPL_FX_T BoardTemperatureImpl_FX_Create();
	EXPORTED BOARDTEMPERATUREIMPL_FX_T BoardTemperatureImpl_FX_Create_1(OCEANBINARYPROTOCOLPROVIDER_T flame, USBINTERFACE_T usbInt);
	EXPORTED double BoardTemperatureImpl_FX_getBoardTemperatureCelsius(BOARDTEMPERATUREIMPL_FX_T c_board_temperature_impl_f_x);
	EXPORTED double BoardTemperatureImpl_FX_getDetectorTemperatureCelsius(BOARDTEMPERATUREIMPL_FX_T c_board_temperature_impl_f_x);
	EXPORTED void BoardTemperatureImpl_FX_Destroy(BOARDTEMPERATUREIMPL_FX_T board_temperature_impl_f_x);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED BOARDTEMPERATUREIMPL_FX_T STDCALL BoardTemperatureImpl_FX_Create_stdcall_1(OCEANBINARYPROTOCOLPROVIDER_T flame, USBINTERFACE_T usbInt);
	EXPORTED double STDCALL BoardTemperatureImpl_FX_getBoardTemperatureCelsius_stdcall(BOARDTEMPERATUREIMPL_FX_T c_board_temperature_impl_f_x);
	EXPORTED double STDCALL BoardTemperatureImpl_FX_getDetectorTemperatureCelsius_stdcall(BOARDTEMPERATUREIMPL_FX_T c_board_temperature_impl_f_x);
	EXPORTED void STDCALL BoardTemperatureImpl_FX_Destroy_stdcall(BOARDTEMPERATUREIMPL_FX_T board_temperature_impl_f_x);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* BOARDTEMPERATUREIMPL_FX_H */
