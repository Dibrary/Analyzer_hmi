/**
 * File: Flame_DA_UV.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * Flame_DA_UV.java
 * for the Java class
 * com/oceanoptics/omnidriver/plugin/Flame_DA_UV
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FLAME_DA_UV_H
#define FLAME_DA_UV_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerPlugIn.h"
#include "USBSpectrometer.h"
#include "USBInterface.h"
#include "GUIProviderArray.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerPlugIn;
class USBSpectrometer;
class USBInterface;
class GUIProviderArray;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Flame_DA_UV : public SpectrometerPlugIn // CPPClass.tag001
{
public: 
	Flame_DA_UV(USBSpectrometer& spec, USBInterface& usb);
	void setPowerUpPOTValues();
	void setPOTValue(int pot, int value);
	CharArray getPOTValues();
	void setLampOn(short lampOn);
	short isLampOn();
	void setVisLampOn(short lampOn);
	short isVisLampOn();
	void setVisLampIntensity(short intens);
	short getVisLampIntensity();
	void setUVLampIntensity(short intens);
	short getUVLampIntensity();
	int getLampIntensityMinimum();
	int getLampIntensityMaximum();
	int getLampIntensityIncrement();
	GUIProviderArray getGUIFeatures();
	void initialize();
	JString toString();
	~Flame_DA_UV();
	// No public default Java constructor; creating one:
	Flame_DA_UV();
	// No public Java copy constructor; creating one:
	Flame_DA_UV(const Flame_DA_UV &that);
	// Creating assignment operator declaration:
	Flame_DA_UV &operator=(const Flame_DA_UV &that);

private:
	jmethodID mid_Flame_DA_UV2590;
	jmethodID mid_setPowerUpPOTValues2591;
	jmethodID mid_setPOTValue2592;
	jmethodID mid_getPOTValues2593;
	jmethodID mid_setLampOn2594;
	jmethodID mid_isLampOn2595;
	jmethodID mid_setVisLampOn2596;
	jmethodID mid_isVisLampOn2597;
	jmethodID mid_setVisLampIntensity2598;
	jmethodID mid_getVisLampIntensity2599;
	jmethodID mid_setUVLampIntensity2600;
	jmethodID mid_getUVLampIntensity2601;
	jmethodID mid_getLampIntensityMinimum2602;
	jmethodID mid_getLampIntensityMaximum2603;
	jmethodID mid_getLampIntensityIncrement2604;
	jmethodID mid_getGUIFeatures2605;
	jmethodID mid_initialize2606;
	jmethodID mid_toString2607;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T
	typedef void* SPECTROMETERPLUGIN_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_FLAME_DA_UV_T
#define EXTERN_TYPEDEF_FLAME_DA_UV_T
	typedef void* FLAME_DA_UV_T;
#endif /* EXTERN_TYPEDEF_FLAME_DA_UV_T */

	// No public default Java constructor; creating one:
	EXPORTED FLAME_DA_UV_T Flame_DA_UV_Create();
	EXPORTED FLAME_DA_UV_T Flame_DA_UV_Create_1(USBSPECTROMETER_T spec, USBINTERFACE_T usb);
	EXPORTED void Flame_DA_UV_setPowerUpPOTValues(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void Flame_DA_UV_setPOTValue(FLAME_DA_UV_T c_flame_d_a_u_v, int pot, int value);
	EXPORTED void Flame_DA_UV_getPOTValues(FLAME_DA_UV_T c_flame_d_a_u_v, CHARARRAY_T retval);
	EXPORTED void Flame_DA_UV_setLampOn(FLAME_DA_UV_T c_flame_d_a_u_v, short lampOn);
	EXPORTED short Flame_DA_UV_isLampOn(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void Flame_DA_UV_setVisLampOn(FLAME_DA_UV_T c_flame_d_a_u_v, short lampOn);
	EXPORTED short Flame_DA_UV_isVisLampOn(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void Flame_DA_UV_setVisLampIntensity(FLAME_DA_UV_T c_flame_d_a_u_v, short intens);
	EXPORTED short Flame_DA_UV_getVisLampIntensity(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void Flame_DA_UV_setUVLampIntensity(FLAME_DA_UV_T c_flame_d_a_u_v, short intens);
	EXPORTED short Flame_DA_UV_getUVLampIntensity(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED int Flame_DA_UV_getLampIntensityMinimum(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED int Flame_DA_UV_getLampIntensityMaximum(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED int Flame_DA_UV_getLampIntensityIncrement(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void Flame_DA_UV_getGUIFeatures(FLAME_DA_UV_T c_flame_d_a_u_v, GUIPROVIDERARRAY_T retval);
	EXPORTED void Flame_DA_UV_initialize(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void Flame_DA_UV_toString(FLAME_DA_UV_T c_flame_d_a_u_v, JSTRING_T retval);
	EXPORTED void Flame_DA_UV_Destroy(FLAME_DA_UV_T flame_d_a_u_v);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED FLAME_DA_UV_T STDCALL Flame_DA_UV_Create_stdcall_1(USBSPECTROMETER_T spec, USBINTERFACE_T usb);
	EXPORTED void STDCALL Flame_DA_UV_setPowerUpPOTValues_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void STDCALL Flame_DA_UV_setPOTValue_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, int pot, int value);
	EXPORTED void STDCALL Flame_DA_UV_getPOTValues_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, CHARARRAY_T retval);
	EXPORTED void STDCALL Flame_DA_UV_setLampOn_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, short lampOn);
	EXPORTED short STDCALL Flame_DA_UV_isLampOn_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void STDCALL Flame_DA_UV_setVisLampOn_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, short lampOn);
	EXPORTED short STDCALL Flame_DA_UV_isVisLampOn_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void STDCALL Flame_DA_UV_setVisLampIntensity_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, short intens);
	EXPORTED short STDCALL Flame_DA_UV_getVisLampIntensity_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void STDCALL Flame_DA_UV_setUVLampIntensity_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, short intens);
	EXPORTED short STDCALL Flame_DA_UV_getUVLampIntensity_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED int STDCALL Flame_DA_UV_getLampIntensityMinimum_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED int STDCALL Flame_DA_UV_getLampIntensityMaximum_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED int STDCALL Flame_DA_UV_getLampIntensityIncrement_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void STDCALL Flame_DA_UV_getGUIFeatures_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL Flame_DA_UV_initialize_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v);
	EXPORTED void STDCALL Flame_DA_UV_toString_stdcall(FLAME_DA_UV_T c_flame_d_a_u_v, JSTRING_T retval);
	EXPORTED void STDCALL Flame_DA_UV_Destroy_stdcall(FLAME_DA_UV_T flame_d_a_u_v);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FLAME_DA_UV_H */
