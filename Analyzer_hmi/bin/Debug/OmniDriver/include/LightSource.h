/**
 * File: LightSource.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * LightSource.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/lightsource/LightSource
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef LIGHTSOURCE_H
#define LIGHTSOURCE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED LightSource : public BaseJavaClass // CPPClass.tag001
{
public: 
	int getLightSourceModuleCount();
	int getLightSourceCount(int param0);
	void setLightSourceEnable(int param0, int param1, short param2);
	short getLightSourceEnable(int param0, int param1);
	void setLightSourceIntensity(int param0, int param1, double param2);
	double getLightSourceIntensity(int param0, int param1);
	~LightSource();
	// No public default Java constructor; creating one:
	LightSource();
	// No public Java copy constructor; creating one:
	LightSource(const LightSource &that);
	// Creating assignment operator declaration:
	LightSource &operator=(const LightSource &that);

private:
	jmethodID mid_getLightSourceModuleCount1640;
	jmethodID mid_getLightSourceCount1641;
	jmethodID mid_setLightSourceEnable1642;
	jmethodID mid_getLightSourceEnable1643;
	jmethodID mid_setLightSourceIntensity1644;
	jmethodID mid_getLightSourceIntensity1645;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_LIGHTSOURCE_T
#define EXTERN_TYPEDEF_LIGHTSOURCE_T
	typedef void* LIGHTSOURCE_T;
#endif /* EXTERN_TYPEDEF_LIGHTSOURCE_T */

	// No public default Java constructor; creating one:
	EXPORTED LIGHTSOURCE_T LightSource_Create();
	EXPORTED int LightSource_getLightSourceModuleCount(LIGHTSOURCE_T c_light_source);
	EXPORTED int LightSource_getLightSourceCount(LIGHTSOURCE_T c_light_source, int param0);
	EXPORTED void LightSource_setLightSourceEnable(LIGHTSOURCE_T c_light_source, int param0, int param1, short param2);
	EXPORTED short LightSource_getLightSourceEnable(LIGHTSOURCE_T c_light_source, int param0, int param1);
	EXPORTED void LightSource_setLightSourceIntensity(LIGHTSOURCE_T c_light_source, int param0, int param1, double param2);
	EXPORTED double LightSource_getLightSourceIntensity(LIGHTSOURCE_T c_light_source, int param0, int param1);
	EXPORTED void LightSource_Destroy(LIGHTSOURCE_T light_source);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED int STDCALL LightSource_getLightSourceModuleCount_stdcall(LIGHTSOURCE_T c_light_source);
	EXPORTED int STDCALL LightSource_getLightSourceCount_stdcall(LIGHTSOURCE_T c_light_source, int param0);
	EXPORTED void STDCALL LightSource_setLightSourceEnable_stdcall(LIGHTSOURCE_T c_light_source, int param0, int param1, short param2);
	EXPORTED short STDCALL LightSource_getLightSourceEnable_stdcall(LIGHTSOURCE_T c_light_source, int param0, int param1);
	EXPORTED void STDCALL LightSource_setLightSourceIntensity_stdcall(LIGHTSOURCE_T c_light_source, int param0, int param1, double param2);
	EXPORTED double STDCALL LightSource_getLightSourceIntensity_stdcall(LIGHTSOURCE_T c_light_source, int param0, int param1);
	EXPORTED void STDCALL LightSource_Destroy_stdcall(LIGHTSOURCE_T light_source);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* LIGHTSOURCE_H */
