/**
 * File: UDPIP4MulticastDiscovery.h
 * Autogenerated on Tue Oct 03 16:25:14 EDT 2017 based on
 * UDPIP4MulticastDiscovery.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/networksource/UDPIP4MulticastDiscovery
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef UDPIP4MULTICASTDISCOVERY_H
#define UDPIP4MULTICASTDISCOVERY_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "List.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class List;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED UDPIP4MulticastDiscovery : public BaseJavaClass // CPPClass.tag001
{
public: 
	List probeDevices();
	~UDPIP4MulticastDiscovery();
	// No public default Java constructor; creating one:
	UDPIP4MulticastDiscovery();
	// No public Java copy constructor; creating one:
	UDPIP4MulticastDiscovery(const UDPIP4MulticastDiscovery &that);
	// Creating assignment operator declaration:
	UDPIP4MulticastDiscovery &operator=(const UDPIP4MulticastDiscovery &that);

private:
	jmethodID mid_probeDevices1897;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_LIST_T
#define EXTERN_TYPEDEF_LIST_T
	typedef void* LIST_T;
#endif /* EXTERN_TYPEDEF_LIST_T */
#ifndef EXTERN_TYPEDEF_UDPIP4MULTICASTDISCOVERY_T
#define EXTERN_TYPEDEF_UDPIP4MULTICASTDISCOVERY_T
	typedef void* UDPIP4MULTICASTDISCOVERY_T;
#endif /* EXTERN_TYPEDEF_UDPIP4MULTICASTDISCOVERY_T */

	// No public default Java constructor; creating one:
	EXPORTED UDPIP4MULTICASTDISCOVERY_T UDPIP4MulticastDiscovery_Create();
	EXPORTED void UDPIP4MulticastDiscovery_probeDevices(UDPIP4MULTICASTDISCOVERY_T c_udpip4multicastdiscovery, LIST_T retval);
	EXPORTED void UDPIP4MulticastDiscovery_Destroy(UDPIP4MULTICASTDISCOVERY_T udpip4multicastdiscovery);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL UDPIP4MulticastDiscovery_probeDevices_stdcall(UDPIP4MULTICASTDISCOVERY_T c_udpip4multicastdiscovery, LIST_T retval);
	EXPORTED void STDCALL UDPIP4MulticastDiscovery_Destroy_stdcall(UDPIP4MULTICASTDISCOVERY_T udpip4multicastdiscovery);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* UDPIP4MULTICASTDISCOVERY_H */
