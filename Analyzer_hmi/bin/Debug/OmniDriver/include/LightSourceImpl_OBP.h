/**
 * File: LightSourceImpl_OBP.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * LightSourceImpl_OBP.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/lightsource/LightSourceImpl_OBP
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef LIGHTSOURCEIMPL_OBP_H
#define LIGHTSOURCEIMPL_OBP_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "LightSourceImpl.h"
#include "OceanBinaryProtocolProvider.h"
#include "USBInterface.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class LightSourceImpl;
class OceanBinaryProtocolProvider;
class USBInterface;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED LightSourceImpl_OBP : public LightSourceImpl // CPPClass.tag001
{
public: 
	LightSourceImpl_OBP(OceanBinaryProtocolProvider& obp, USBInterface& usbInt);
	void setLightSourceEnable(int moduleIndex, int lampIndex, short enable);
	short getLightSourceEnable(int moduleIndex, int lampIndex);
	void setLightSourceIntensity(int moduleIndex, int lampIndex, double intensity);
	double getLightSourceIntensity(int moduleIndex, int lampIndex);
	~LightSourceImpl_OBP();
	// No public default Java constructor; creating one:
	LightSourceImpl_OBP();
	// No public Java copy constructor; creating one:
	LightSourceImpl_OBP(const LightSourceImpl_OBP &that);
	// Creating assignment operator declaration:
	LightSourceImpl_OBP &operator=(const LightSourceImpl_OBP &that);

private:
	jmethodID mid_LightSourceImpl_OBP1654;
	jmethodID mid_setLightSourceEnable1655;
	jmethodID mid_getLightSourceEnable1656;
	jmethodID mid_setLightSourceIntensity1657;
	jmethodID mid_getLightSourceIntensity1658;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_LIGHTSOURCEIMPL_T
#define EXTERN_TYPEDEF_LIGHTSOURCEIMPL_T
	typedef void* LIGHTSOURCEIMPL_T;
#endif /* EXTERN_TYPEDEF_LIGHTSOURCEIMPL_T */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
	typedef void* OCEANBINARYPROTOCOLPROVIDER_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_LIGHTSOURCEIMPL_OBP_T
#define EXTERN_TYPEDEF_LIGHTSOURCEIMPL_OBP_T
	typedef void* LIGHTSOURCEIMPL_OBP_T;
#endif /* EXTERN_TYPEDEF_LIGHTSOURCEIMPL_OBP_T */

	// No public default Java constructor; creating one:
	EXPORTED LIGHTSOURCEIMPL_OBP_T LightSourceImpl_OBP_Create();
	EXPORTED LIGHTSOURCEIMPL_OBP_T LightSourceImpl_OBP_Create_1(OCEANBINARYPROTOCOLPROVIDER_T obp, USBINTERFACE_T usbInt);
	EXPORTED void LightSourceImpl_OBP_setLightSourceEnable(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex, short enable);
	EXPORTED short LightSourceImpl_OBP_getLightSourceEnable(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex);
	EXPORTED void LightSourceImpl_OBP_setLightSourceIntensity(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex, double intensity);
	EXPORTED double LightSourceImpl_OBP_getLightSourceIntensity(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex);
	EXPORTED void LightSourceImpl_OBP_Destroy(LIGHTSOURCEIMPL_OBP_T light_source_impl_o_b_p);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED LIGHTSOURCEIMPL_OBP_T STDCALL LightSourceImpl_OBP_Create_stdcall_1(OCEANBINARYPROTOCOLPROVIDER_T obp, USBINTERFACE_T usbInt);
	EXPORTED void STDCALL LightSourceImpl_OBP_setLightSourceEnable_stdcall(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex, short enable);
	EXPORTED short STDCALL LightSourceImpl_OBP_getLightSourceEnable_stdcall(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex);
	EXPORTED void STDCALL LightSourceImpl_OBP_setLightSourceIntensity_stdcall(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex, double intensity);
	EXPORTED double STDCALL LightSourceImpl_OBP_getLightSourceIntensity_stdcall(LIGHTSOURCEIMPL_OBP_T c_light_source_impl_o_b_p, int moduleIndex, int lampIndex);
	EXPORTED void STDCALL LightSourceImpl_OBP_Destroy_stdcall(LIGHTSOURCEIMPL_OBP_T light_source_impl_o_b_p);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* LIGHTSOURCEIMPL_OBP_H */
