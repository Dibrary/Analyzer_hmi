/**
 * File: GatingErrorProviderImpl.h
 * Autogenerated on Fri Mar 23 13:38:33 EDT 2018 based on
 * GatingErrorProviderImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/errorprovider/GatingErrorProviderImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GATINGERRORPROVIDERIMPL_H
#define GATINGERRORPROVIDERIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "Spectrometer.h"
#include "OmniDriverDispatchListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class Spectrometer;
class OmniDriverDispatchListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GatingErrorProviderImpl : public USBFeature // CPPClass.tag001
{
public: 
	GatingErrorProviderImpl(USBInterface& usbInt, Spectrometer& spectrometer);
	void checkIntegrationTime(int intTime);
	void checkTriggerNotification(int mode);
	short isInGatedMode();
	void addOmniDriverDispatchListener(OmniDriverDispatchListener& listener);
	void removeOmniDriverDispatchListener(OmniDriverDispatchListener& listener);
	~GatingErrorProviderImpl();
	// No public default Java constructor; creating one:
	GatingErrorProviderImpl();
	// No public Java copy constructor; creating one:
	GatingErrorProviderImpl(const GatingErrorProviderImpl &that);
	// Creating assignment operator declaration:
	GatingErrorProviderImpl &operator=(const GatingErrorProviderImpl &that);

private:
	jmethodID mid_GatingErrorProviderImpl1183;
	jmethodID mid_checkIntegrationTime1184;
	jmethodID mid_checkTriggerNotification1185;
	jmethodID mid_isInGatedMode1186;
	jmethodID mid_addOmniDriverDispatchListener1187;
	jmethodID mid_removeOmniDriverDispatchListener1188;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_OMNIDRIVERDISPATCHLISTENER_T
#define EXTERN_TYPEDEF_OMNIDRIVERDISPATCHLISTENER_T
	typedef void* OMNIDRIVERDISPATCHLISTENER_T;
#endif /* EXTERN_TYPEDEF_OMNIDRIVERDISPATCHLISTENER_T */
#ifndef EXTERN_TYPEDEF_GATINGERRORPROVIDERIMPL_T
#define EXTERN_TYPEDEF_GATINGERRORPROVIDERIMPL_T
	typedef void* GATINGERRORPROVIDERIMPL_T;
#endif /* EXTERN_TYPEDEF_GATINGERRORPROVIDERIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED GATINGERRORPROVIDERIMPL_T GatingErrorProviderImpl_Create();
	EXPORTED GATINGERRORPROVIDERIMPL_T GatingErrorProviderImpl_Create_1(USBINTERFACE_T usbInt, SPECTROMETER_T spectrometer);
	EXPORTED void GatingErrorProviderImpl_checkIntegrationTime(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, int intTime);
	EXPORTED void GatingErrorProviderImpl_checkTriggerNotification(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, int mode);
	EXPORTED short GatingErrorProviderImpl_isInGatedMode(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl);
	EXPORTED void GatingErrorProviderImpl_addOmniDriverDispatchListener(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, OMNIDRIVERDISPATCHLISTENER_T listener);
	EXPORTED void GatingErrorProviderImpl_removeOmniDriverDispatchListener(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, OMNIDRIVERDISPATCHLISTENER_T listener);
	EXPORTED void GatingErrorProviderImpl_Destroy(GATINGERRORPROVIDERIMPL_T gating_error_provider_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED GATINGERRORPROVIDERIMPL_T STDCALL GatingErrorProviderImpl_Create_stdcall_1(USBINTERFACE_T usbInt, SPECTROMETER_T spectrometer);
	EXPORTED void STDCALL GatingErrorProviderImpl_checkIntegrationTime_stdcall(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, int intTime);
	EXPORTED void STDCALL GatingErrorProviderImpl_checkTriggerNotification_stdcall(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, int mode);
	EXPORTED short STDCALL GatingErrorProviderImpl_isInGatedMode_stdcall(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl);
	EXPORTED void STDCALL GatingErrorProviderImpl_addOmniDriverDispatchListener_stdcall(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, OMNIDRIVERDISPATCHLISTENER_T listener);
	EXPORTED void STDCALL GatingErrorProviderImpl_removeOmniDriverDispatchListener_stdcall(GATINGERRORPROVIDERIMPL_T c_gating_error_provider_impl, OMNIDRIVERDISPATCHLISTENER_T listener);
	EXPORTED void STDCALL GatingErrorProviderImpl_Destroy_stdcall(GATINGERRORPROVIDERIMPL_T gating_error_provider_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GATINGERRORPROVIDERIMPL_H */
