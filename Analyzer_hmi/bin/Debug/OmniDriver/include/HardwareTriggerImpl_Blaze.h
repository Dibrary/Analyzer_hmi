/**
 * File: HardwareTriggerImpl_Blaze.h
 * Autogenerated on Mon Mar 13 20:23:56 EDT 2017 based on
 * HardwareTriggerImpl_Blaze.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/hardwaretrigger/HardwareTriggerImpl_Blaze
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HARDWARETRIGGERIMPL_BLAZE_H
#define HARDWARETRIGGERIMPL_BLAZE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "HardwareTriggerImpl.h"
#include "OceanBinaryProtocolProvider.h"
#include "USBInterface.h"
#include "BlazeTriggerModeArray.h"
#include "ExternalTriggerModeArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class HardwareTriggerImpl;
class OceanBinaryProtocolProvider;
class USBInterface;
class BlazeTriggerModeArray;
class ExternalTriggerModeArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HardwareTriggerImpl_Blaze : public HardwareTriggerImpl // CPPClass.tag001
{
public: 
	HardwareTriggerImpl_Blaze(OceanBinaryProtocolProvider& blaze, USBInterface& uface, BlazeTriggerModeArray& modes);
	ExternalTriggerModeArray getExternalTriggerModes();
	void setExternalTriggerMode(int mode);
	void sendSimulatedTriggerSignal();
	~HardwareTriggerImpl_Blaze();
	// No public default Java constructor; creating one:
	HardwareTriggerImpl_Blaze();
	// No public Java copy constructor; creating one:
	HardwareTriggerImpl_Blaze(const HardwareTriggerImpl_Blaze &that);
	// Creating assignment operator declaration:
	HardwareTriggerImpl_Blaze &operator=(const HardwareTriggerImpl_Blaze &that);

private:
	jmethodID mid_HardwareTriggerImpl_Blaze1283;
	jmethodID mid_getExternalTriggerModes1284;
	jmethodID mid_setExternalTriggerMode1285;
	jmethodID mid_sendSimulatedTriggerSignal1286;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T
#define EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T
	typedef void* HARDWARETRIGGERIMPL_T;
#endif /* EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
	typedef void* OCEANBINARYPROTOCOLPROVIDER_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_BLAZETRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_BLAZETRIGGERMODEARRAY_T
	typedef void* BLAZETRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_BLAZETRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_BLAZE_T
#define EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_BLAZE_T
	typedef void* HARDWARETRIGGERIMPL_BLAZE_T;
#endif /* EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_BLAZE_T */

	// No public default Java constructor; creating one:
	EXPORTED HARDWARETRIGGERIMPL_BLAZE_T HardwareTriggerImpl_Blaze_Create();
	EXPORTED HARDWARETRIGGERIMPL_BLAZE_T HardwareTriggerImpl_Blaze_Create_1(OCEANBINARYPROTOCOLPROVIDER_T blaze, USBINTERFACE_T uface, BLAZETRIGGERMODEARRAY_T modes);
	EXPORTED void HardwareTriggerImpl_Blaze_getExternalTriggerModes(HARDWARETRIGGERIMPL_BLAZE_T c_hardware_trigger_impl_blaze, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void HardwareTriggerImpl_Blaze_setExternalTriggerMode(HARDWARETRIGGERIMPL_BLAZE_T c_hardware_trigger_impl_blaze, int mode);
	EXPORTED void HardwareTriggerImpl_Blaze_sendSimulatedTriggerSignal(HARDWARETRIGGERIMPL_BLAZE_T c_hardware_trigger_impl_blaze);
	EXPORTED void HardwareTriggerImpl_Blaze_Destroy(HARDWARETRIGGERIMPL_BLAZE_T hardware_trigger_impl_blaze);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HARDWARETRIGGERIMPL_BLAZE_T STDCALL HardwareTriggerImpl_Blaze_Create_stdcall_1(OCEANBINARYPROTOCOLPROVIDER_T blaze, USBINTERFACE_T uface, BLAZETRIGGERMODEARRAY_T modes);
	EXPORTED void STDCALL HardwareTriggerImpl_Blaze_getExternalTriggerModes_stdcall(HARDWARETRIGGERIMPL_BLAZE_T c_hardware_trigger_impl_blaze, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void STDCALL HardwareTriggerImpl_Blaze_setExternalTriggerMode_stdcall(HARDWARETRIGGERIMPL_BLAZE_T c_hardware_trigger_impl_blaze, int mode);
	EXPORTED void STDCALL HardwareTriggerImpl_Blaze_sendSimulatedTriggerSignal_stdcall(HARDWARETRIGGERIMPL_BLAZE_T c_hardware_trigger_impl_blaze);
	EXPORTED void STDCALL HardwareTriggerImpl_Blaze_Destroy_stdcall(HARDWARETRIGGERIMPL_BLAZE_T hardware_trigger_impl_blaze);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HARDWARETRIGGERIMPL_BLAZE_H */
