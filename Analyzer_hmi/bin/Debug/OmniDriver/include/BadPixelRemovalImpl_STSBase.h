/**
 * File: BadPixelRemovalImpl_STSBase.h
 * Autogenerated on Fri Mar 23 13:38:30 EDT 2018 based on
 * BadPixelRemovalImpl_STSBase.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/badpixelremoval/BadPixelRemovalImpl_STSBase
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef BADPIXELREMOVALIMPL_STSBASE_H
#define BADPIXELREMOVALIMPL_STSBASE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "BadPixelRemovalImpl.h"
#include "STSBase.h"
#include "USBInterface.h"
#include "Spectrum.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class BadPixelRemovalImpl;
class STSBase;
class USBInterface;
class Spectrum;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED BadPixelRemovalImpl_STSBase : public BadPixelRemovalImpl // CPPClass.tag001
{
public: 
	BadPixelRemovalImpl_STSBase(STSBase& sts, USBInterface& usbInt, int numberOfPixels);
	IntArray getBadPixelsFromSpectrometer();
	void setBadPixelsToSpectrometer();
	Spectrum removeBadPixels(Spectrum& spectrum);
	int getMaximumBadPixels();
	~BadPixelRemovalImpl_STSBase();
	// No public default Java constructor; creating one:
	BadPixelRemovalImpl_STSBase();
	// No public Java copy constructor; creating one:
	BadPixelRemovalImpl_STSBase(const BadPixelRemovalImpl_STSBase &that);
	// Creating assignment operator declaration:
	BadPixelRemovalImpl_STSBase &operator=(const BadPixelRemovalImpl_STSBase &that);

private:
	jmethodID mid_BadPixelRemovalImpl_STSBase888;
	jmethodID mid_getBadPixelsFromSpectrometer889;
	jmethodID mid_setBadPixelsToSpectrometer890;
	jmethodID mid_removeBadPixels891;
	jmethodID mid_getMaximumBadPixels892;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_T
#define EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_T
	typedef void* BADPIXELREMOVALIMPL_T;
#endif /* EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_T */
#ifndef EXTERN_TYPEDEF_STSBASE_T
#define EXTERN_TYPEDEF_STSBASE_T
	typedef void* STSBASE_T;
#endif /* EXTERN_TYPEDEF_STSBASE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTRUM_T
#define EXTERN_TYPEDEF_SPECTRUM_T
	typedef void* SPECTRUM_T;
#endif /* EXTERN_TYPEDEF_SPECTRUM_T */
#ifndef EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_STSBASE_T
#define EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_STSBASE_T
	typedef void* BADPIXELREMOVALIMPL_STSBASE_T;
#endif /* EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_STSBASE_T */

	// No public default Java constructor; creating one:
	EXPORTED BADPIXELREMOVALIMPL_STSBASE_T BadPixelRemovalImpl_STSBase_Create();
	EXPORTED BADPIXELREMOVALIMPL_STSBASE_T BadPixelRemovalImpl_STSBase_Create_1(STSBASE_T sts, USBINTERFACE_T usbInt, int numberOfPixels);
	EXPORTED void BadPixelRemovalImpl_STSBase_getBadPixelsFromSpectrometer(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base, INTARRAY_T retval);
	EXPORTED void BadPixelRemovalImpl_STSBase_setBadPixelsToSpectrometer(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base);
	EXPORTED void BadPixelRemovalImpl_STSBase_removeBadPixels(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base, SPECTRUM_T spectrum, SPECTRUM_T retval);
	EXPORTED int BadPixelRemovalImpl_STSBase_getMaximumBadPixels(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base);
	EXPORTED void BadPixelRemovalImpl_STSBase_Destroy(BADPIXELREMOVALIMPL_STSBASE_T bad_pixel_removal_impl_s_t_s_base);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED BADPIXELREMOVALIMPL_STSBASE_T STDCALL BadPixelRemovalImpl_STSBase_Create_stdcall_1(STSBASE_T sts, USBINTERFACE_T usbInt, int numberOfPixels);
	EXPORTED void STDCALL BadPixelRemovalImpl_STSBase_getBadPixelsFromSpectrometer_stdcall(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base, INTARRAY_T retval);
	EXPORTED void STDCALL BadPixelRemovalImpl_STSBase_setBadPixelsToSpectrometer_stdcall(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base);
	EXPORTED void STDCALL BadPixelRemovalImpl_STSBase_removeBadPixels_stdcall(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base, SPECTRUM_T spectrum, SPECTRUM_T retval);
	EXPORTED int STDCALL BadPixelRemovalImpl_STSBase_getMaximumBadPixels_stdcall(BADPIXELREMOVALIMPL_STSBASE_T c_bad_pixel_removal_impl_s_t_s_base);
	EXPORTED void STDCALL BadPixelRemovalImpl_STSBase_Destroy_stdcall(BADPIXELREMOVALIMPL_STSBASE_T bad_pixel_removal_impl_s_t_s_base);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* BADPIXELREMOVALIMPL_STSBASE_H */
