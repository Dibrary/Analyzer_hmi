/**
 * File: ExposureImageable.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * ExposureImageable.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/ExposureImageable
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef EXPOSUREIMAGEABLE_H
#define EXPOSUREIMAGEABLE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "ExposureListener.h"
#include "SpectrometerExposure.h"
#include "IntegrationTimeChangeListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class ExposureListener;
class SpectrometerExposure;
class IntegrationTimeChangeListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ExposureImageable : public BaseJavaClass // CPPClass.tag001
{
public: 
	void addExposureListener(ExposureListener& param0);
	void removeExposureListener(ExposureListener& param0);
	SpectrometerExposure getLastExposure();
	int getCcdWidth();
	int getCcdHeight();
	void set1DMode(int param0);
	void set2DMode(int param0);
	short has1DMode();
	int get2DintegrationTime();
	short is2DMode();
	short is1DMode();
	void addIntegrationTimeChangeListener(IntegrationTimeChangeListener& param0);
	void removeIntegrationTimeChangeListener(IntegrationTimeChangeListener& param0);
	~ExposureImageable();
	// No public default Java constructor; creating one:
	ExposureImageable();
	// No public Java copy constructor; creating one:
	ExposureImageable(const ExposureImageable &that);
	// Creating assignment operator declaration:
	ExposureImageable &operator=(const ExposureImageable &that);

private:
	jmethodID mid_addExposureListener2524;
	jmethodID mid_removeExposureListener2525;
	jmethodID mid_getLastExposure2526;
	jmethodID mid_getCcdWidth2527;
	jmethodID mid_getCcdHeight2528;
	jmethodID mid_set1DMode2529;
	jmethodID mid_set2DMode2530;
	jmethodID mid_has1DMode2531;
	jmethodID mid_get2DintegrationTime2532;
	jmethodID mid_is2DMode2533;
	jmethodID mid_is1DMode2534;
	jmethodID mid_addIntegrationTimeChangeListener2535;
	jmethodID mid_removeIntegrationTimeChangeListener2536;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_EXPOSURELISTENER_T
#define EXTERN_TYPEDEF_EXPOSURELISTENER_T
	typedef void* EXPOSURELISTENER_T;
#endif /* EXTERN_TYPEDEF_EXPOSURELISTENER_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETEREXPOSURE_T
#define EXTERN_TYPEDEF_SPECTROMETEREXPOSURE_T
	typedef void* SPECTROMETEREXPOSURE_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETEREXPOSURE_T */
#ifndef EXTERN_TYPEDEF_INTEGRATIONTIMECHANGELISTENER_T
#define EXTERN_TYPEDEF_INTEGRATIONTIMECHANGELISTENER_T
	typedef void* INTEGRATIONTIMECHANGELISTENER_T;
#endif /* EXTERN_TYPEDEF_INTEGRATIONTIMECHANGELISTENER_T */
#ifndef EXTERN_TYPEDEF_EXPOSUREIMAGEABLE_T
#define EXTERN_TYPEDEF_EXPOSUREIMAGEABLE_T
	typedef void* EXPOSUREIMAGEABLE_T;
#endif /* EXTERN_TYPEDEF_EXPOSUREIMAGEABLE_T */

	// No public default Java constructor; creating one:
	EXPORTED EXPOSUREIMAGEABLE_T ExposureImageable_Create();
	EXPORTED void ExposureImageable_addExposureListener(EXPOSUREIMAGEABLE_T c_exposure_imageable, EXPOSURELISTENER_T param0);
	EXPORTED void ExposureImageable_removeExposureListener(EXPOSUREIMAGEABLE_T c_exposure_imageable, EXPOSURELISTENER_T param0);
	EXPORTED void ExposureImageable_getLastExposure(EXPOSUREIMAGEABLE_T c_exposure_imageable, SPECTROMETEREXPOSURE_T retval);
	EXPORTED int ExposureImageable_getCcdWidth(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED int ExposureImageable_getCcdHeight(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED void ExposureImageable_set1DMode(EXPOSUREIMAGEABLE_T c_exposure_imageable, int param0);
	EXPORTED void ExposureImageable_set2DMode(EXPOSUREIMAGEABLE_T c_exposure_imageable, int param0);
	EXPORTED short ExposureImageable_has1DMode(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED int ExposureImageable_get2DintegrationTime(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED short ExposureImageable_is2DMode(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED short ExposureImageable_is1DMode(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED void ExposureImageable_addIntegrationTimeChangeListener(EXPOSUREIMAGEABLE_T c_exposure_imageable, INTEGRATIONTIMECHANGELISTENER_T param0);
	EXPORTED void ExposureImageable_removeIntegrationTimeChangeListener(EXPOSUREIMAGEABLE_T c_exposure_imageable, INTEGRATIONTIMECHANGELISTENER_T param0);
	EXPORTED void ExposureImageable_Destroy(EXPOSUREIMAGEABLE_T exposure_imageable);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL ExposureImageable_addExposureListener_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, EXPOSURELISTENER_T param0);
	EXPORTED void STDCALL ExposureImageable_removeExposureListener_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, EXPOSURELISTENER_T param0);
	EXPORTED void STDCALL ExposureImageable_getLastExposure_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, SPECTROMETEREXPOSURE_T retval);
	EXPORTED int STDCALL ExposureImageable_getCcdWidth_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED int STDCALL ExposureImageable_getCcdHeight_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED void STDCALL ExposureImageable_set1DMode_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, int param0);
	EXPORTED void STDCALL ExposureImageable_set2DMode_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, int param0);
	EXPORTED short STDCALL ExposureImageable_has1DMode_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED int STDCALL ExposureImageable_get2DintegrationTime_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED short STDCALL ExposureImageable_is2DMode_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED short STDCALL ExposureImageable_is1DMode_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable);
	EXPORTED void STDCALL ExposureImageable_addIntegrationTimeChangeListener_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, INTEGRATIONTIMECHANGELISTENER_T param0);
	EXPORTED void STDCALL ExposureImageable_removeIntegrationTimeChangeListener_stdcall(EXPOSUREIMAGEABLE_T c_exposure_imageable, INTEGRATIONTIMECHANGELISTENER_T param0);
	EXPORTED void STDCALL ExposureImageable_Destroy_stdcall(EXPOSUREIMAGEABLE_T exposure_imageable);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* EXPOSUREIMAGEABLE_H */
