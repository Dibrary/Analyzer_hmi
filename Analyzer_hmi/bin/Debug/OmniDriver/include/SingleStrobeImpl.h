/**
 * File: SingleStrobeImpl.h
 * Autogenerated on Fri Mar 23 13:38:39 EDT 2018 based on
 * SingleStrobeImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/singlestrobe/SingleStrobeImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SINGLESTROBEIMPL_H
#define SINGLESTROBEIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "FPGAImpl.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class FPGAImpl;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SingleStrobeImpl : public FPGAImpl // CPPClass.tag001
{
public: 
	SingleStrobeImpl(USBInterface& usbInt);
	int getSingleStrobeHigh();
	int getSingleStrobeLow();
	void setSingleStrobeHigh(int value);
	void setSingleStrobeLow(int value);
	double getSingleStrobeCountsToMicros(int counts);
	int getSingleStrobeIncrement();
	int getSingleStrobeMaximum();
	int getSingleStrobeMinimum();
	void masterClockChanged(long long newValue);
	JStringArray getFeatureGUIClassnames();
	~SingleStrobeImpl();
	// No public default Java constructor; creating one:
	SingleStrobeImpl();
	// No public Java copy constructor; creating one:
	SingleStrobeImpl(const SingleStrobeImpl &that);
	// Creating assignment operator declaration:
	SingleStrobeImpl &operator=(const SingleStrobeImpl &that);

private:
	jmethodID mid_SingleStrobeImpl2003;
	jmethodID mid_getSingleStrobeHigh2004;
	jmethodID mid_getSingleStrobeLow2005;
	jmethodID mid_setSingleStrobeHigh2006;
	jmethodID mid_setSingleStrobeLow2007;
	jmethodID mid_getSingleStrobeCountsToMicros2008;
	jmethodID mid_getSingleStrobeIncrement2009;
	jmethodID mid_getSingleStrobeMaximum2010;
	jmethodID mid_getSingleStrobeMinimum2011;
	jmethodID mid_masterClockChanged2012;
	jmethodID mid_getFeatureGUIClassnames2013;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_FPGAIMPL_T
#define EXTERN_TYPEDEF_FPGAIMPL_T
	typedef void* FPGAIMPL_T;
#endif /* EXTERN_TYPEDEF_FPGAIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_SINGLESTROBEIMPL_T
#define EXTERN_TYPEDEF_SINGLESTROBEIMPL_T
	typedef void* SINGLESTROBEIMPL_T;
#endif /* EXTERN_TYPEDEF_SINGLESTROBEIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED SINGLESTROBEIMPL_T SingleStrobeImpl_Create();
	EXPORTED SINGLESTROBEIMPL_T SingleStrobeImpl_Create_1(USBINTERFACE_T usbInt);
	EXPORTED int SingleStrobeImpl_getSingleStrobeHigh(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED int SingleStrobeImpl_getSingleStrobeLow(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED void SingleStrobeImpl_setSingleStrobeHigh(SINGLESTROBEIMPL_T c_single_strobe_impl, int value);
	EXPORTED void SingleStrobeImpl_setSingleStrobeLow(SINGLESTROBEIMPL_T c_single_strobe_impl, int value);
	EXPORTED double SingleStrobeImpl_getSingleStrobeCountsToMicros(SINGLESTROBEIMPL_T c_single_strobe_impl, int counts);
	EXPORTED int SingleStrobeImpl_getSingleStrobeIncrement(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED int SingleStrobeImpl_getSingleStrobeMaximum(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED int SingleStrobeImpl_getSingleStrobeMinimum(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED void SingleStrobeImpl_masterClockChanged(SINGLESTROBEIMPL_T c_single_strobe_impl, long long newValue);
	EXPORTED void SingleStrobeImpl_getFeatureGUIClassnames(SINGLESTROBEIMPL_T c_single_strobe_impl, JSTRINGARRAY_T retval);
	EXPORTED void SingleStrobeImpl_Destroy(SINGLESTROBEIMPL_T single_strobe_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SINGLESTROBEIMPL_T STDCALL SingleStrobeImpl_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED int STDCALL SingleStrobeImpl_getSingleStrobeHigh_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED int STDCALL SingleStrobeImpl_getSingleStrobeLow_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED void STDCALL SingleStrobeImpl_setSingleStrobeHigh_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl, int value);
	EXPORTED void STDCALL SingleStrobeImpl_setSingleStrobeLow_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl, int value);
	EXPORTED double STDCALL SingleStrobeImpl_getSingleStrobeCountsToMicros_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl, int counts);
	EXPORTED int STDCALL SingleStrobeImpl_getSingleStrobeIncrement_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED int STDCALL SingleStrobeImpl_getSingleStrobeMaximum_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED int STDCALL SingleStrobeImpl_getSingleStrobeMinimum_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl);
	EXPORTED void STDCALL SingleStrobeImpl_masterClockChanged_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl, long long newValue);
	EXPORTED void STDCALL SingleStrobeImpl_getFeatureGUIClassnames_stdcall(SINGLESTROBEIMPL_T c_single_strobe_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL SingleStrobeImpl_Destroy_stdcall(SINGLESTROBEIMPL_T single_strobe_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SINGLESTROBEIMPL_H */
