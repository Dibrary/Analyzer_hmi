/**
 * File: IndyExcitationStatusResponse.h
 * Autogenerated on Fri Mar 23 13:38:36 EDT 2018 based on
 * IndyExcitationStatusResponse.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/indy/IndyExcitationStatusResponse
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INDYEXCITATIONSTATUSRESPONSE_H
#define INDYEXCITATIONSTATUSRESPONSE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "DispatchProtocolMessage.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class DispatchProtocolMessage;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED IndyExcitationStatusResponse : public DispatchProtocolMessage // CPPClass.tag001
{
public: 
	IndyExcitationStatusResponse();
	IndyExcitationStatusResponse(CharArray& message);
	int getModuleIndex();
	short isEnabled();
	float getVoltage();
	~IndyExcitationStatusResponse();
	// No public Java copy constructor; creating one:
	IndyExcitationStatusResponse(const IndyExcitationStatusResponse &that);
	// Creating assignment operator declaration:
	IndyExcitationStatusResponse &operator=(const IndyExcitationStatusResponse &that);

private:
	jmethodID mid_IndyExcitationStatusResponse1470;
	jmethodID mid_IndyExcitationStatusResponse1471;
	jmethodID mid_getModuleIndex1472;
	jmethodID mid_isEnabled1473;
	jmethodID mid_getVoltage1474;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
	typedef void* DISPATCHPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T */
#ifndef EXTERN_TYPEDEF_INDYEXCITATIONSTATUSRESPONSE_T
#define EXTERN_TYPEDEF_INDYEXCITATIONSTATUSRESPONSE_T
	typedef void* INDYEXCITATIONSTATUSRESPONSE_T;
#endif /* EXTERN_TYPEDEF_INDYEXCITATIONSTATUSRESPONSE_T */

	EXPORTED INDYEXCITATIONSTATUSRESPONSE_T IndyExcitationStatusResponse_Create();
	EXPORTED INDYEXCITATIONSTATUSRESPONSE_T IndyExcitationStatusResponse_Create_1(CHARARRAY_T message);
	EXPORTED int IndyExcitationStatusResponse_getModuleIndex(INDYEXCITATIONSTATUSRESPONSE_T c_indy_excitation_status_response);
	EXPORTED short IndyExcitationStatusResponse_isEnabled(INDYEXCITATIONSTATUSRESPONSE_T c_indy_excitation_status_response);
	EXPORTED float IndyExcitationStatusResponse_getVoltage(INDYEXCITATIONSTATUSRESPONSE_T c_indy_excitation_status_response);
	EXPORTED void IndyExcitationStatusResponse_Destroy(INDYEXCITATIONSTATUSRESPONSE_T indy_excitation_status_response);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED INDYEXCITATIONSTATUSRESPONSE_T STDCALL IndyExcitationStatusResponse_Create_stdcall();
	EXPORTED INDYEXCITATIONSTATUSRESPONSE_T STDCALL IndyExcitationStatusResponse_Create_stdcall_1(CHARARRAY_T message);
	EXPORTED int STDCALL IndyExcitationStatusResponse_getModuleIndex_stdcall(INDYEXCITATIONSTATUSRESPONSE_T c_indy_excitation_status_response);
	EXPORTED short STDCALL IndyExcitationStatusResponse_isEnabled_stdcall(INDYEXCITATIONSTATUSRESPONSE_T c_indy_excitation_status_response);
	EXPORTED float STDCALL IndyExcitationStatusResponse_getVoltage_stdcall(INDYEXCITATIONSTATUSRESPONSE_T c_indy_excitation_status_response);
	EXPORTED void STDCALL IndyExcitationStatusResponse_Destroy_stdcall(INDYEXCITATIONSTATUSRESPONSE_T indy_excitation_status_response);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INDYEXCITATIONSTATUSRESPONSE_H */
