/**
 * File: DetectorTemperatureImpl_STSBase.h
 * Autogenerated on Fri Mar 23 13:38:32 EDT 2018 based on
 * DetectorTemperatureImpl_STSBase.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/detectortemperature/DetectorTemperatureImpl_STSBase
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef DETECTORTEMPERATUREIMPL_STSBASE_H
#define DETECTORTEMPERATUREIMPL_STSBASE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "DetectorTemperatureImpl.h"
#include "STSBase.h"
#include "USBInterface.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class DetectorTemperatureImpl;
class STSBase;
class USBInterface;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED DetectorTemperatureImpl_STSBase : public DetectorTemperatureImpl // CPPClass.tag001
{
public: 
	DetectorTemperatureImpl_STSBase(STSBase& sts, USBInterface& usbInt);
	double getDetectorTemperatureCelsius();
	~DetectorTemperatureImpl_STSBase();
	// No public default Java constructor; creating one:
	DetectorTemperatureImpl_STSBase();
	// No public Java copy constructor; creating one:
	DetectorTemperatureImpl_STSBase(const DetectorTemperatureImpl_STSBase &that);
	// Creating assignment operator declaration:
	DetectorTemperatureImpl_STSBase &operator=(const DetectorTemperatureImpl_STSBase &that);

private:
	jmethodID mid_DetectorTemperatureImpl_STSBase1166;
	jmethodID mid_getDetectorTemperatureCelsius1167;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_DETECTORTEMPERATUREIMPL_T
#define EXTERN_TYPEDEF_DETECTORTEMPERATUREIMPL_T
	typedef void* DETECTORTEMPERATUREIMPL_T;
#endif /* EXTERN_TYPEDEF_DETECTORTEMPERATUREIMPL_T */
#ifndef EXTERN_TYPEDEF_STSBASE_T
#define EXTERN_TYPEDEF_STSBASE_T
	typedef void* STSBASE_T;
#endif /* EXTERN_TYPEDEF_STSBASE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_DETECTORTEMPERATUREIMPL_STSBASE_T
#define EXTERN_TYPEDEF_DETECTORTEMPERATUREIMPL_STSBASE_T
	typedef void* DETECTORTEMPERATUREIMPL_STSBASE_T;
#endif /* EXTERN_TYPEDEF_DETECTORTEMPERATUREIMPL_STSBASE_T */

	// No public default Java constructor; creating one:
	EXPORTED DETECTORTEMPERATUREIMPL_STSBASE_T DetectorTemperatureImpl_STSBase_Create();
	EXPORTED DETECTORTEMPERATUREIMPL_STSBASE_T DetectorTemperatureImpl_STSBase_Create_1(STSBASE_T sts, USBINTERFACE_T usbInt);
	EXPORTED double DetectorTemperatureImpl_STSBase_getDetectorTemperatureCelsius(DETECTORTEMPERATUREIMPL_STSBASE_T c_detector_temperature_impl_s_t_s_base);
	EXPORTED void DetectorTemperatureImpl_STSBase_Destroy(DETECTORTEMPERATUREIMPL_STSBASE_T detector_temperature_impl_s_t_s_base);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED DETECTORTEMPERATUREIMPL_STSBASE_T STDCALL DetectorTemperatureImpl_STSBase_Create_stdcall_1(STSBASE_T sts, USBINTERFACE_T usbInt);
	EXPORTED double STDCALL DetectorTemperatureImpl_STSBase_getDetectorTemperatureCelsius_stdcall(DETECTORTEMPERATUREIMPL_STSBASE_T c_detector_temperature_impl_s_t_s_base);
	EXPORTED void STDCALL DetectorTemperatureImpl_STSBase_Destroy_stdcall(DETECTORTEMPERATUREIMPL_STSBASE_T detector_temperature_impl_s_t_s_base);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* DETECTORTEMPERATUREIMPL_STSBASE_H */
