/**
 * File: W1064VisNir.h
 * Autogenerated on Fri Mar 23 13:39:18 EDT 2018 based on
 * W1064VisNir.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/w1064visnir/W1064VisNir
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef W1064VISNIR_H
#define W1064VISNIR_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBSpectrometer.h"
#include "JString.h"
#include "GUIProviderArray.h"
#include "CoefficientsArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBSpectrometer;
class JString;
class GUIProviderArray;
class CoefficientsArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED W1064VisNir : public USBSpectrometer // CPPClass.tag001
{
public: 
	W1064VisNir();
	W1064VisNir(int i);
	void setEndpoints();
	void openSpectrometer(int index);
	JString getFirmwareVersion();
	JString getInfo(int slot);
	CharArray getInfoBytes(int slot);
	CharArray getStatusArray();
	void initialize();
	void setInfo(int slot, JString& str);
	void setInfoBytes(int slot, CharArray& byteArray);
	void setIntegrationTime(int intTime);
	GUIProviderArray getGUIFeatures();
	void setStrobeEnable(short strobe);
	CharArray queryDevice(int messageType, CharArray& payload);
	short sendCommandToDevice(int messageType, CharArray& payload, int endPointNumber);
	short sendCommandToDevice(int messageType, CharArray& payload);
	void readSpectrum();
	CoefficientsArray getWavelengthCalibrationCoefficients();
	DoubleArray getWavelengths(int index);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& coefficients);
	void setWavelengths(DoubleArray& wavelengths, int index);
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	void writeNonlinearityCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray readNonlinearityCoefficientsFromSpectrometer();
	void setNonlinearityCoefficients(CoefficientsArray& coefficients);
	CoefficientsArray getNonlinearityCoefficients();
	DoubleArray getNonlinearityCoefficientsSingleChannel(int channelIndex);
	void setNonlinearityCoefficientsSingleChannel(DoubleArray& nonlinearities, int channelIndex);
	void writeStrayLightCoefficientToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray readStrayLightCorrectionCoefficientFromSpectrometer();
	void setStrayLightCorrectionCoefficient(CoefficientsArray& coefficients);
	CoefficientsArray getStrayLightCorrectionCoefficient();
	double getStrayLight(int index);
	void setStrayLight(double strayLight, int index);
	int getSaturationIntensity();
	short setSaturationIntensity(int saturationIntensity, JString& key);
	void setTECEnable(short enable);
	void setFanEnable(short enable);
	double getDetectorTemperatureCelsius();
	double getDetectorTemperatureSetPointCelsius();
	void setDetectorSetPointCelsius(double point);
	double getSetPointMinimumCelsius();
	double getSetPointMaximumCelsius();
	double getSetPointIncrementCelsius();
	short isSaveTECStateEnabled();
	void saveTECState();
	~W1064VisNir();
	// No public Java copy constructor; creating one:
	W1064VisNir(const W1064VisNir &that);
	// Creating assignment operator declaration:
	W1064VisNir &operator=(const W1064VisNir &that);

private:
	jmethodID mid_W1064VisNir6427;
	jmethodID mid_W1064VisNir6428;
	jmethodID mid_setEndpoints6429;
	jmethodID mid_openSpectrometer6430;
	jmethodID mid_getFirmwareVersion6431;
	jmethodID mid_getInfo6432;
	jmethodID mid_getInfoBytes6433;
	jmethodID mid_getStatusArray6434;
	jmethodID mid_initialize6435;
	jmethodID mid_setInfo6436;
	jmethodID mid_setInfoBytes6437;
	jmethodID mid_setIntegrationTime6438;
	jmethodID mid_getGUIFeatures6439;
	jmethodID mid_setStrobeEnable6440;
	jmethodID mid_queryDevice6441;
	jmethodID mid_sendCommandToDevice6442;
	jmethodID mid_sendCommandToDevice6443;
	jmethodID mid_readSpectrum6444;
	jmethodID mid_getWavelengthCalibrationCoefficients6445;
	jmethodID mid_getWavelengths6446;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer6447;
	jmethodID mid_setWavelengthCalibrationCoefficients6448;
	jmethodID mid_setWavelengths6449;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer6450;
	jmethodID mid_writeNonlinearityCoefficientsToSpectrometer6451;
	jmethodID mid_readNonlinearityCoefficientsFromSpectrometer6452;
	jmethodID mid_setNonlinearityCoefficients6453;
	jmethodID mid_getNonlinearityCoefficients6454;
	jmethodID mid_getNonlinearityCoefficientsSingleChannel6455;
	jmethodID mid_setNonlinearityCoefficientsSingleChannel6456;
	jmethodID mid_writeStrayLightCoefficientToSpectrometer6457;
	jmethodID mid_readStrayLightCorrectionCoefficientFromSpectrometer6458;
	jmethodID mid_setStrayLightCorrectionCoefficient6459;
	jmethodID mid_getStrayLightCorrectionCoefficient6460;
	jmethodID mid_getStrayLight6461;
	jmethodID mid_setStrayLight6462;
	jmethodID mid_getSaturationIntensity6463;
	jmethodID mid_setSaturationIntensity6464;
	jmethodID mid_setTECEnable6465;
	jmethodID mid_setFanEnable6466;
	jmethodID mid_getDetectorTemperatureCelsius6467;
	jmethodID mid_getDetectorTemperatureSetPointCelsius6468;
	jmethodID mid_setDetectorSetPointCelsius6469;
	jmethodID mid_getSetPointMinimumCelsius6470;
	jmethodID mid_getSetPointMaximumCelsius6471;
	jmethodID mid_getSetPointIncrementCelsius6472;
	jmethodID mid_isSaveTECStateEnabled6473;
	jmethodID mid_saveTECState6474;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_W1064VISNIR_T
#define EXTERN_TYPEDEF_W1064VISNIR_T
	typedef void* W1064VISNIR_T;
#endif /* EXTERN_TYPEDEF_W1064VISNIR_T */

	EXPORTED W1064VISNIR_T W1064VisNir_Create();
	EXPORTED W1064VISNIR_T W1064VisNir_Create_1(int i);
	EXPORTED void W1064VisNir_setEndpoints(W1064VISNIR_T c_w1064visnir);
	EXPORTED void W1064VisNir_openSpectrometer(W1064VISNIR_T c_w1064visnir, int index);
	EXPORTED void W1064VisNir_getFirmwareVersion(W1064VISNIR_T c_w1064visnir, JSTRING_T retval);
	EXPORTED void W1064VisNir_getInfo(W1064VISNIR_T c_w1064visnir, int slot, JSTRING_T retval);
	EXPORTED void W1064VisNir_getInfoBytes(W1064VISNIR_T c_w1064visnir, int slot, CHARARRAY_T retval);
	EXPORTED void W1064VisNir_getStatusArray(W1064VISNIR_T c_w1064visnir, CHARARRAY_T retval);
	EXPORTED void W1064VisNir_initialize(W1064VISNIR_T c_w1064visnir);
	EXPORTED void W1064VisNir_setInfo(W1064VISNIR_T c_w1064visnir, int slot, JSTRING_T str);
	EXPORTED void W1064VisNir_setInfoBytes(W1064VISNIR_T c_w1064visnir, int slot, CHARARRAY_T byteArray);
	EXPORTED void W1064VisNir_setIntegrationTime(W1064VISNIR_T c_w1064visnir, int intTime);
	EXPORTED void W1064VisNir_getGUIFeatures(W1064VISNIR_T c_w1064visnir, GUIPROVIDERARRAY_T retval);
	EXPORTED void W1064VisNir_setStrobeEnable(W1064VISNIR_T c_w1064visnir, short strobe);
	EXPORTED void W1064VisNir_queryDevice(W1064VISNIR_T c_w1064visnir, int messageType, CHARARRAY_T payload, CHARARRAY_T retval);
	EXPORTED short W1064VisNir_sendCommandToDevice(W1064VISNIR_T c_w1064visnir, int messageType, CHARARRAY_T payload, int endPointNumber);
	EXPORTED short W1064VisNir_sendCommandToDevice_1(W1064VISNIR_T c_w1064visnir, int messageType, CHARARRAY_T payload);
	EXPORTED void W1064VisNir_readSpectrum(W1064VISNIR_T c_w1064visnir);
	EXPORTED void W1064VisNir_getWavelengthCalibrationCoefficients(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void W1064VisNir_getWavelengths(W1064VISNIR_T c_w1064visnir, int index, DOUBLEARRAY_T retval);
	EXPORTED void W1064VisNir_readWavelengthCalibrationCoefficientsFromSpectrometer(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void W1064VisNir_setWavelengthCalibrationCoefficients(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void W1064VisNir_setWavelengths(W1064VISNIR_T c_w1064visnir, DOUBLEARRAY_T wavelengths, int index);
	EXPORTED void W1064VisNir_writeWavelengthCoefficientsToSpectrometer(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void W1064VisNir_writeNonlinearityCoefficientsToSpectrometer(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void W1064VisNir_readNonlinearityCoefficientsFromSpectrometer(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void W1064VisNir_setNonlinearityCoefficients(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void W1064VisNir_getNonlinearityCoefficients(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void W1064VisNir_getNonlinearityCoefficientsSingleChannel(W1064VISNIR_T c_w1064visnir, int channelIndex, DOUBLEARRAY_T retval);
	EXPORTED void W1064VisNir_setNonlinearityCoefficientsSingleChannel(W1064VISNIR_T c_w1064visnir, DOUBLEARRAY_T nonlinearities, int channelIndex);
	EXPORTED void W1064VisNir_writeStrayLightCoefficientToSpectrometer(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void W1064VisNir_readStrayLightCorrectionCoefficientFromSpectrometer(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void W1064VisNir_setStrayLightCorrectionCoefficient(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void W1064VisNir_getStrayLightCorrectionCoefficient(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED double W1064VisNir_getStrayLight(W1064VISNIR_T c_w1064visnir, int index);
	EXPORTED void W1064VisNir_setStrayLight(W1064VISNIR_T c_w1064visnir, double strayLight, int index);
	EXPORTED int W1064VisNir_getSaturationIntensity(W1064VISNIR_T c_w1064visnir);
	EXPORTED short W1064VisNir_setSaturationIntensity(W1064VISNIR_T c_w1064visnir, int saturationIntensity, JSTRING_T key);
	EXPORTED void W1064VisNir_setTECEnable(W1064VISNIR_T c_w1064visnir, short enable);
	EXPORTED void W1064VisNir_setFanEnable(W1064VISNIR_T c_w1064visnir, short enable);
	EXPORTED double W1064VisNir_getDetectorTemperatureCelsius(W1064VISNIR_T c_w1064visnir);
	EXPORTED double W1064VisNir_getDetectorTemperatureSetPointCelsius(W1064VISNIR_T c_w1064visnir);
	EXPORTED void W1064VisNir_setDetectorSetPointCelsius(W1064VISNIR_T c_w1064visnir, double point);
	EXPORTED double W1064VisNir_getSetPointMinimumCelsius(W1064VISNIR_T c_w1064visnir);
	EXPORTED double W1064VisNir_getSetPointMaximumCelsius(W1064VISNIR_T c_w1064visnir);
	EXPORTED double W1064VisNir_getSetPointIncrementCelsius(W1064VISNIR_T c_w1064visnir);
	EXPORTED short W1064VisNir_isSaveTECStateEnabled(W1064VISNIR_T c_w1064visnir);
	EXPORTED void W1064VisNir_saveTECState(W1064VISNIR_T c_w1064visnir);
	EXPORTED void W1064VisNir_Destroy(W1064VISNIR_T w1064visnir);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED W1064VISNIR_T STDCALL W1064VisNir_Create_stdcall();
	EXPORTED W1064VISNIR_T STDCALL W1064VisNir_Create_stdcall_1(int i);
	EXPORTED void STDCALL W1064VisNir_setEndpoints_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED void STDCALL W1064VisNir_openSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, int index);
	EXPORTED void STDCALL W1064VisNir_getFirmwareVersion_stdcall(W1064VISNIR_T c_w1064visnir, JSTRING_T retval);
	EXPORTED void STDCALL W1064VisNir_getInfo_stdcall(W1064VISNIR_T c_w1064visnir, int slot, JSTRING_T retval);
	EXPORTED void STDCALL W1064VisNir_getInfoBytes_stdcall(W1064VISNIR_T c_w1064visnir, int slot, CHARARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_getStatusArray_stdcall(W1064VISNIR_T c_w1064visnir, CHARARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_initialize_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED void STDCALL W1064VisNir_setInfo_stdcall(W1064VISNIR_T c_w1064visnir, int slot, JSTRING_T str);
	EXPORTED void STDCALL W1064VisNir_setInfoBytes_stdcall(W1064VISNIR_T c_w1064visnir, int slot, CHARARRAY_T byteArray);
	EXPORTED void STDCALL W1064VisNir_setIntegrationTime_stdcall(W1064VISNIR_T c_w1064visnir, int intTime);
	EXPORTED void STDCALL W1064VisNir_getGUIFeatures_stdcall(W1064VISNIR_T c_w1064visnir, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_setStrobeEnable_stdcall(W1064VISNIR_T c_w1064visnir, short strobe);
	EXPORTED void STDCALL W1064VisNir_queryDevice_stdcall(W1064VISNIR_T c_w1064visnir, int messageType, CHARARRAY_T payload, CHARARRAY_T retval);
	EXPORTED short STDCALL W1064VisNir_sendCommandToDevice_stdcall(W1064VISNIR_T c_w1064visnir, int messageType, CHARARRAY_T payload, int endPointNumber);
	EXPORTED short STDCALL W1064VisNir_sendCommandToDevice_stdcall_1(W1064VISNIR_T c_w1064visnir, int messageType, CHARARRAY_T payload);
	EXPORTED void STDCALL W1064VisNir_readSpectrum_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED void STDCALL W1064VisNir_getWavelengthCalibrationCoefficients_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_getWavelengths_stdcall(W1064VISNIR_T c_w1064visnir, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_setWavelengthCalibrationCoefficients_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL W1064VisNir_setWavelengths_stdcall(W1064VISNIR_T c_w1064visnir, DOUBLEARRAY_T wavelengths, int index);
	EXPORTED void STDCALL W1064VisNir_writeWavelengthCoefficientsToSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL W1064VisNir_writeNonlinearityCoefficientsToSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL W1064VisNir_readNonlinearityCoefficientsFromSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_setNonlinearityCoefficients_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL W1064VisNir_getNonlinearityCoefficients_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_getNonlinearityCoefficientsSingleChannel_stdcall(W1064VISNIR_T c_w1064visnir, int channelIndex, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_setNonlinearityCoefficientsSingleChannel_stdcall(W1064VISNIR_T c_w1064visnir, DOUBLEARRAY_T nonlinearities, int channelIndex);
	EXPORTED void STDCALL W1064VisNir_writeStrayLightCoefficientToSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL W1064VisNir_readStrayLightCorrectionCoefficientFromSpectrometer_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL W1064VisNir_setStrayLightCorrectionCoefficient_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL W1064VisNir_getStrayLightCorrectionCoefficient_stdcall(W1064VISNIR_T c_w1064visnir, COEFFICIENTSARRAY_T retval);
	EXPORTED double STDCALL W1064VisNir_getStrayLight_stdcall(W1064VISNIR_T c_w1064visnir, int index);
	EXPORTED void STDCALL W1064VisNir_setStrayLight_stdcall(W1064VISNIR_T c_w1064visnir, double strayLight, int index);
	EXPORTED int STDCALL W1064VisNir_getSaturationIntensity_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED short STDCALL W1064VisNir_setSaturationIntensity_stdcall(W1064VISNIR_T c_w1064visnir, int saturationIntensity, JSTRING_T key);
	EXPORTED void STDCALL W1064VisNir_setTECEnable_stdcall(W1064VISNIR_T c_w1064visnir, short enable);
	EXPORTED void STDCALL W1064VisNir_setFanEnable_stdcall(W1064VISNIR_T c_w1064visnir, short enable);
	EXPORTED double STDCALL W1064VisNir_getDetectorTemperatureCelsius_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED double STDCALL W1064VisNir_getDetectorTemperatureSetPointCelsius_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED void STDCALL W1064VisNir_setDetectorSetPointCelsius_stdcall(W1064VISNIR_T c_w1064visnir, double point);
	EXPORTED double STDCALL W1064VisNir_getSetPointMinimumCelsius_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED double STDCALL W1064VisNir_getSetPointMaximumCelsius_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED double STDCALL W1064VisNir_getSetPointIncrementCelsius_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED short STDCALL W1064VisNir_isSaveTECStateEnabled_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED void STDCALL W1064VisNir_saveTECState_stdcall(W1064VISNIR_T c_w1064visnir);
	EXPORTED void STDCALL W1064VisNir_Destroy_stdcall(W1064VISNIR_T w1064visnir);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* W1064VISNIR_H */
