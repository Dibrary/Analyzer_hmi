/**
 * File: GramsSPCLogBlockHeader.h
 * Autogenerated on Fri Mar 23 13:38:42 EDT 2018 based on
 * GramsSPCLogBlockHeader.java
 * for the Java class
 * com/oceanoptics/omnidriver/gramsspc/GramsSPCLogBlockHeader
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GRAMSSPCLOGBLOCKHEADER_H
#define GRAMSSPCLOGBLOCKHEADER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED GramsSPCLogBlockHeader : public BaseJavaClass // CPPClass.tag001
{
public: 
	GramsSPCLogBlockHeader(signed char version);
	void setLogTextSizeBytes(int bytes);
	int getLogSizeOnDisk();
	int getLogSizeInMemory();
	int getLogTextOffset();
	int getLogBinaryScratchSize();
	void setLogBinaryScratchSize(int size);
	int getLogDiskScratchSize();
	void setLogDiskScratchSize(int size);
	CharArray getByteStream();
	~GramsSPCLogBlockHeader();
	// No public default Java constructor; creating one:
	GramsSPCLogBlockHeader();
	// No public Java copy constructor; creating one:
	GramsSPCLogBlockHeader(const GramsSPCLogBlockHeader &that);
	// Creating assignment operator declaration:
	GramsSPCLogBlockHeader &operator=(const GramsSPCLogBlockHeader &that);

private:
	jmethodID mid_GramsSPCLogBlockHeader2442;
	jmethodID mid_setLogTextSizeBytes2443;
	jmethodID mid_getLogSizeOnDisk2444;
	jmethodID mid_getLogSizeInMemory2445;
	jmethodID mid_getLogTextOffset2446;
	jmethodID mid_getLogBinaryScratchSize2447;
	jmethodID mid_setLogBinaryScratchSize2448;
	jmethodID mid_getLogDiskScratchSize2449;
	jmethodID mid_setLogDiskScratchSize2450;
	jmethodID mid_getByteStream2451;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_GRAMSSPCLOGBLOCKHEADER_T
#define EXTERN_TYPEDEF_GRAMSSPCLOGBLOCKHEADER_T
	typedef void* GRAMSSPCLOGBLOCKHEADER_T;
#endif /* EXTERN_TYPEDEF_GRAMSSPCLOGBLOCKHEADER_T */

	// No public default Java constructor; creating one:
	EXPORTED GRAMSSPCLOGBLOCKHEADER_T GramsSPCLogBlockHeader_Create();
	EXPORTED GRAMSSPCLOGBLOCKHEADER_T GramsSPCLogBlockHeader_Create_1(signed char version);
	EXPORTED void GramsSPCLogBlockHeader_setLogTextSizeBytes(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, int bytes);
	EXPORTED int GramsSPCLogBlockHeader_getLogSizeOnDisk(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED int GramsSPCLogBlockHeader_getLogSizeInMemory(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED int GramsSPCLogBlockHeader_getLogTextOffset(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED int GramsSPCLogBlockHeader_getLogBinaryScratchSize(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED void GramsSPCLogBlockHeader_setLogBinaryScratchSize(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, int size);
	EXPORTED int GramsSPCLogBlockHeader_getLogDiskScratchSize(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED void GramsSPCLogBlockHeader_setLogDiskScratchSize(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, int size);
	EXPORTED void GramsSPCLogBlockHeader_getByteStream(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, CHARARRAY_T retval);
	EXPORTED void GramsSPCLogBlockHeader_Destroy(GRAMSSPCLOGBLOCKHEADER_T grams_s_p_c_log_block_header);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED GRAMSSPCLOGBLOCKHEADER_T STDCALL GramsSPCLogBlockHeader_Create_stdcall_1(signed char version);
	EXPORTED void STDCALL GramsSPCLogBlockHeader_setLogTextSizeBytes_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, int bytes);
	EXPORTED int STDCALL GramsSPCLogBlockHeader_getLogSizeOnDisk_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED int STDCALL GramsSPCLogBlockHeader_getLogSizeInMemory_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED int STDCALL GramsSPCLogBlockHeader_getLogTextOffset_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED int STDCALL GramsSPCLogBlockHeader_getLogBinaryScratchSize_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED void STDCALL GramsSPCLogBlockHeader_setLogBinaryScratchSize_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, int size);
	EXPORTED int STDCALL GramsSPCLogBlockHeader_getLogDiskScratchSize_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header);
	EXPORTED void STDCALL GramsSPCLogBlockHeader_setLogDiskScratchSize_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, int size);
	EXPORTED void STDCALL GramsSPCLogBlockHeader_getByteStream_stdcall(GRAMSSPCLOGBLOCKHEADER_T c_grams_s_p_c_log_block_header, CHARARRAY_T retval);
	EXPORTED void STDCALL GramsSPCLogBlockHeader_Destroy_stdcall(GRAMSSPCLOGBLOCKHEADER_T grams_s_p_c_log_block_header);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GRAMSSPCLOGBLOCKHEADER_H */
