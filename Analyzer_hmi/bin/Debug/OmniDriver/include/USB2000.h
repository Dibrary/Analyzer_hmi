/**
 * File: USB2000.h
 * Autogenerated on Fri Mar 23 13:39:14 EDT 2018 based on
 * USB2000.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/usb2000/USB2000
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USB2000_H
#define USB2000_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBSpectrometer.h"
#include "USBEndpointDescriptor.h"
#include "USBInterface.h"
#include "GUIProviderArray.h"
#include "SpectrometerStatus.h"
#include "JString.h"
#include "ExternalTriggerModeArray.h"
#include "SpectrometerPlugInArray.h"
#include "CoefficientsArray.h"
#include "AcquisitionListener.h"
#include "GateDelayListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBSpectrometer;
class USBEndpointDescriptor;
class USBInterface;
class GUIProviderArray;
class SpectrometerStatus;
class JString;
class ExternalTriggerModeArray;
class SpectrometerPlugInArray;
class CoefficientsArray;
class AcquisitionListener;
class GateDelayListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USB2000 : public USBSpectrometer // CPPClass.tag001
{
public: 
	USB2000();
	USB2000(int i);
	void setEndpoints();
	USBEndpointDescriptor getEndpoint(int endPoint);
	void openSpectrometer(int index);
	USBInterface getUniUsb();
	GUIProviderArray getGUIFeatures();
	short isFlGated();
	short isCurie();
	SpectrometerStatus getStatus();
	int readIntegrationTime();
	void setMasterClock(int freq);
	DoubleArray getIrradianceCalibrationFactors();
	void setIrradianceCalibrationFactors(DoubleArray& data);
	double getCollectionArea();
	short hasCollectionArea();
	void setCollectionArea(double area);
	int getActualIntegrationTime();
	void setStrobeDelay(int delay);
	int getStrobeDelay();
	JString getName();
	CharArray getSPIBytes(CharArray& message, int length);
	void setExternalTriggerMode(int mode);
	ExternalTriggerModeArray getExternalTriggerModes();
	short isPlugInDetected(int id);
	SpectrometerPlugInArray getPlugIns();
	int getNumberOfPlugIns();
	CharArray initializePlugIns();
	void detectPlugIns();
	CoefficientsArray readNonlinearityCoefficientsFromSpectrometer();
	void writeNonlinearityCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getNonlinearityCoefficients();
	void setNonlinearityCoefficients(CoefficientsArray& coefficients);
	DoubleArray getNonlinearityCoefficientsSingleChannel(int index);
	void setNonlinearityCoefficientsSingleChannel(DoubleArray& nl, int index);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getWavelengthCalibrationCoefficients();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& coefficients);
	DoubleArray getWavelengths(int index);
	void setWavelengths(DoubleArray& wl, int index);
	CoefficientsArray readStrayLightCorrectionCoefficientFromSpectrometer();
	void writeStrayLightCoefficientToSpectrometer(CoefficientsArray& coefficients);
	void setStrayLightCorrectionCoefficient(CoefficientsArray& coefficients);
	CoefficientsArray getStrayLightCorrectionCoefficient();
	void setStrayLight(double strayLight, int index);
	double getStrayLight(int index);
	int setI2CBytes(signed char address, signed char numBytes, CharArray& i2C);
	CharArray getI2CBytes(signed char address, signed char numBytes);
	short isAdvancedVersion();
	void addAcquisitionListener(AcquisitionListener& listener);
	void removeAcquisitionListener(AcquisitionListener& listener);
	int getGateIncrement();
	int getGateMaximum();
	int getGateMinimum();
	void setGateFrequency(int freq);
	int getGateFrequency();
	void addGateDelayListener(GateDelayListener& listener);
	void removeGateDelayListener(GateDelayListener& listener);
	JString toString();
	~USB2000();
	// No public Java copy constructor; creating one:
	USB2000(const USB2000 &that);
	// Creating assignment operator declaration:
	USB2000 &operator=(const USB2000 &that);

private:
	jmethodID mid_USB20005828;
	jmethodID mid_USB20005829;
	jmethodID mid_setEndpoints5830;
	jmethodID mid_getEndpoint5831;
	jmethodID mid_openSpectrometer5832;
	jmethodID mid_getUniUsb5833;
	jmethodID mid_getGUIFeatures5834;
	jmethodID mid_isFlGated5835;
	jmethodID mid_isCurie5836;
	jmethodID mid_getStatus5837;
	jmethodID mid_readIntegrationTime5838;
	jmethodID mid_setMasterClock5839;
	jmethodID mid_getIrradianceCalibrationFactors5840;
	jmethodID mid_setIrradianceCalibrationFactors5841;
	jmethodID mid_getCollectionArea5842;
	jmethodID mid_hasCollectionArea5843;
	jmethodID mid_setCollectionArea5844;
	jmethodID mid_getActualIntegrationTime5845;
	jmethodID mid_setStrobeDelay5846;
	jmethodID mid_getStrobeDelay5847;
	jmethodID mid_getName5848;
	jmethodID mid_getSPIBytes5849;
	jmethodID mid_setExternalTriggerMode5850;
	jmethodID mid_getExternalTriggerModes5851;
	jmethodID mid_isPlugInDetected5852;
	jmethodID mid_getPlugIns5853;
	jmethodID mid_getNumberOfPlugIns5854;
	jmethodID mid_initializePlugIns5855;
	jmethodID mid_detectPlugIns5856;
	jmethodID mid_readNonlinearityCoefficientsFromSpectrometer5857;
	jmethodID mid_writeNonlinearityCoefficientsToSpectrometer5858;
	jmethodID mid_getNonlinearityCoefficients5859;
	jmethodID mid_setNonlinearityCoefficients5860;
	jmethodID mid_getNonlinearityCoefficientsSingleChannel5861;
	jmethodID mid_setNonlinearityCoefficientsSingleChannel5862;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer5863;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer5864;
	jmethodID mid_getWavelengthCalibrationCoefficients5865;
	jmethodID mid_setWavelengthCalibrationCoefficients5866;
	jmethodID mid_getWavelengths5867;
	jmethodID mid_setWavelengths5868;
	jmethodID mid_readStrayLightCorrectionCoefficientFromSpectrometer5869;
	jmethodID mid_writeStrayLightCoefficientToSpectrometer5870;
	jmethodID mid_setStrayLightCorrectionCoefficient5871;
	jmethodID mid_getStrayLightCorrectionCoefficient5872;
	jmethodID mid_setStrayLight5873;
	jmethodID mid_getStrayLight5874;
	jmethodID mid_setI2CBytes5875;
	jmethodID mid_getI2CBytes5876;
	jmethodID mid_isAdvancedVersion5877;
	jmethodID mid_addAcquisitionListener5878;
	jmethodID mid_removeAcquisitionListener5879;
	jmethodID mid_getGateIncrement5880;
	jmethodID mid_getGateMaximum5881;
	jmethodID mid_getGateMinimum5882;
	jmethodID mid_setGateFrequency5883;
	jmethodID mid_getGateFrequency5884;
	jmethodID mid_addGateDelayListener5885;
	jmethodID mid_removeGateDelayListener5886;
	jmethodID mid_toString5887;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
#define EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
	typedef void* SPECTROMETERSTATUS_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERSTATUS_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
	typedef void* SPECTROMETERPLUGINARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
#define EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
	typedef void* ACQUISITIONLISTENER_T;
#endif /* EXTERN_TYPEDEF_ACQUISITIONLISTENER_T */
#ifndef EXTERN_TYPEDEF_GATEDELAYLISTENER_T
#define EXTERN_TYPEDEF_GATEDELAYLISTENER_T
	typedef void* GATEDELAYLISTENER_T;
#endif /* EXTERN_TYPEDEF_GATEDELAYLISTENER_T */
#ifndef EXTERN_TYPEDEF_USB2000_T
#define EXTERN_TYPEDEF_USB2000_T
	typedef void* USB2000_T;
#endif /* EXTERN_TYPEDEF_USB2000_T */

	EXPORTED USB2000_T USB2000_Create();
	EXPORTED USB2000_T USB2000_Create_1(int i);
	EXPORTED void USB2000_setEndpoints(USB2000_T c_usb2000);
	EXPORTED void USB2000_getEndpoint(USB2000_T c_usb2000, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED void USB2000_openSpectrometer(USB2000_T c_usb2000, int index);
	EXPORTED void USB2000_getUniUsb(USB2000_T c_usb2000, USBINTERFACE_T retval);
	EXPORTED void USB2000_getGUIFeatures(USB2000_T c_usb2000, GUIPROVIDERARRAY_T retval);
	EXPORTED short USB2000_isFlGated(USB2000_T c_usb2000);
	EXPORTED short USB2000_isCurie(USB2000_T c_usb2000);
	EXPORTED void USB2000_getStatus(USB2000_T c_usb2000, SPECTROMETERSTATUS_T retval);
	EXPORTED int USB2000_readIntegrationTime(USB2000_T c_usb2000);
	EXPORTED void USB2000_setMasterClock(USB2000_T c_usb2000, int freq);
	EXPORTED void USB2000_getIrradianceCalibrationFactors(USB2000_T c_usb2000, DOUBLEARRAY_T retval);
	EXPORTED void USB2000_setIrradianceCalibrationFactors(USB2000_T c_usb2000, DOUBLEARRAY_T data);
	EXPORTED double USB2000_getCollectionArea(USB2000_T c_usb2000);
	EXPORTED short USB2000_hasCollectionArea(USB2000_T c_usb2000);
	EXPORTED void USB2000_setCollectionArea(USB2000_T c_usb2000, double area);
	EXPORTED int USB2000_getActualIntegrationTime(USB2000_T c_usb2000);
	EXPORTED void USB2000_setStrobeDelay(USB2000_T c_usb2000, int delay);
	EXPORTED int USB2000_getStrobeDelay(USB2000_T c_usb2000);
	EXPORTED void USB2000_getName(USB2000_T c_usb2000, JSTRING_T retval);
	EXPORTED void USB2000_getSPIBytes(USB2000_T c_usb2000, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void USB2000_setExternalTriggerMode(USB2000_T c_usb2000, int mode);
	EXPORTED void USB2000_getExternalTriggerModes(USB2000_T c_usb2000, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED short USB2000_isPlugInDetected(USB2000_T c_usb2000, int id);
	EXPORTED void USB2000_getPlugIns(USB2000_T c_usb2000, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int USB2000_getNumberOfPlugIns(USB2000_T c_usb2000);
	EXPORTED void USB2000_initializePlugIns(USB2000_T c_usb2000, CHARARRAY_T retval);
	EXPORTED void USB2000_detectPlugIns(USB2000_T c_usb2000);
	EXPORTED void USB2000_readNonlinearityCoefficientsFromSpectrometer(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB2000_writeNonlinearityCoefficientsToSpectrometer(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB2000_getNonlinearityCoefficients(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB2000_setNonlinearityCoefficients(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB2000_getNonlinearityCoefficientsSingleChannel(USB2000_T c_usb2000, int index, DOUBLEARRAY_T retval);
	EXPORTED void USB2000_setNonlinearityCoefficientsSingleChannel(USB2000_T c_usb2000, DOUBLEARRAY_T nl, int index);
	EXPORTED void USB2000_readWavelengthCalibrationCoefficientsFromSpectrometer(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB2000_writeWavelengthCoefficientsToSpectrometer(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB2000_getWavelengthCalibrationCoefficients(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB2000_setWavelengthCalibrationCoefficients(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB2000_getWavelengths(USB2000_T c_usb2000, int index, DOUBLEARRAY_T retval);
	EXPORTED void USB2000_setWavelengths(USB2000_T c_usb2000, DOUBLEARRAY_T wl, int index);
	EXPORTED void USB2000_readStrayLightCorrectionCoefficientFromSpectrometer(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB2000_writeStrayLightCoefficientToSpectrometer(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB2000_setStrayLightCorrectionCoefficient(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB2000_getStrayLightCorrectionCoefficient(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB2000_setStrayLight(USB2000_T c_usb2000, double strayLight, int index);
	EXPORTED double USB2000_getStrayLight(USB2000_T c_usb2000, int index);
	EXPORTED int USB2000_setI2CBytes(USB2000_T c_usb2000, signed char address, signed char numBytes, CHARARRAY_T i2C);
	EXPORTED void USB2000_getI2CBytes(USB2000_T c_usb2000, signed char address, signed char numBytes, CHARARRAY_T retval);
	EXPORTED short USB2000_isAdvancedVersion(USB2000_T c_usb2000);
	EXPORTED void USB2000_addAcquisitionListener(USB2000_T c_usb2000, ACQUISITIONLISTENER_T listener);
	EXPORTED void USB2000_removeAcquisitionListener(USB2000_T c_usb2000, ACQUISITIONLISTENER_T listener);
	EXPORTED int USB2000_getGateIncrement(USB2000_T c_usb2000);
	EXPORTED int USB2000_getGateMaximum(USB2000_T c_usb2000);
	EXPORTED int USB2000_getGateMinimum(USB2000_T c_usb2000);
	EXPORTED void USB2000_setGateFrequency(USB2000_T c_usb2000, int freq);
	EXPORTED int USB2000_getGateFrequency(USB2000_T c_usb2000);
	EXPORTED void USB2000_addGateDelayListener(USB2000_T c_usb2000, GATEDELAYLISTENER_T listener);
	EXPORTED void USB2000_removeGateDelayListener(USB2000_T c_usb2000, GATEDELAYLISTENER_T listener);
	EXPORTED void USB2000_toString(USB2000_T c_usb2000, JSTRING_T retval);
	EXPORTED void USB2000_Destroy(USB2000_T usb2000);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USB2000_T STDCALL USB2000_Create_stdcall();
	EXPORTED USB2000_T STDCALL USB2000_Create_stdcall_1(int i);
	EXPORTED void STDCALL USB2000_setEndpoints_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_getEndpoint_stdcall(USB2000_T c_usb2000, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED void STDCALL USB2000_openSpectrometer_stdcall(USB2000_T c_usb2000, int index);
	EXPORTED void STDCALL USB2000_getUniUsb_stdcall(USB2000_T c_usb2000, USBINTERFACE_T retval);
	EXPORTED void STDCALL USB2000_getGUIFeatures_stdcall(USB2000_T c_usb2000, GUIPROVIDERARRAY_T retval);
	EXPORTED short STDCALL USB2000_isFlGated_stdcall(USB2000_T c_usb2000);
	EXPORTED short STDCALL USB2000_isCurie_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_getStatus_stdcall(USB2000_T c_usb2000, SPECTROMETERSTATUS_T retval);
	EXPORTED int STDCALL USB2000_readIntegrationTime_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_setMasterClock_stdcall(USB2000_T c_usb2000, int freq);
	EXPORTED void STDCALL USB2000_getIrradianceCalibrationFactors_stdcall(USB2000_T c_usb2000, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB2000_setIrradianceCalibrationFactors_stdcall(USB2000_T c_usb2000, DOUBLEARRAY_T data);
	EXPORTED double STDCALL USB2000_getCollectionArea_stdcall(USB2000_T c_usb2000);
	EXPORTED short STDCALL USB2000_hasCollectionArea_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_setCollectionArea_stdcall(USB2000_T c_usb2000, double area);
	EXPORTED int STDCALL USB2000_getActualIntegrationTime_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_setStrobeDelay_stdcall(USB2000_T c_usb2000, int delay);
	EXPORTED int STDCALL USB2000_getStrobeDelay_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_getName_stdcall(USB2000_T c_usb2000, JSTRING_T retval);
	EXPORTED void STDCALL USB2000_getSPIBytes_stdcall(USB2000_T c_usb2000, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void STDCALL USB2000_setExternalTriggerMode_stdcall(USB2000_T c_usb2000, int mode);
	EXPORTED void STDCALL USB2000_getExternalTriggerModes_stdcall(USB2000_T c_usb2000, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED short STDCALL USB2000_isPlugInDetected_stdcall(USB2000_T c_usb2000, int id);
	EXPORTED void STDCALL USB2000_getPlugIns_stdcall(USB2000_T c_usb2000, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int STDCALL USB2000_getNumberOfPlugIns_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_initializePlugIns_stdcall(USB2000_T c_usb2000, CHARARRAY_T retval);
	EXPORTED void STDCALL USB2000_detectPlugIns_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_readNonlinearityCoefficientsFromSpectrometer_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB2000_writeNonlinearityCoefficientsToSpectrometer_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB2000_getNonlinearityCoefficients_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB2000_setNonlinearityCoefficients_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB2000_getNonlinearityCoefficientsSingleChannel_stdcall(USB2000_T c_usb2000, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB2000_setNonlinearityCoefficientsSingleChannel_stdcall(USB2000_T c_usb2000, DOUBLEARRAY_T nl, int index);
	EXPORTED void STDCALL USB2000_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB2000_writeWavelengthCoefficientsToSpectrometer_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB2000_getWavelengthCalibrationCoefficients_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB2000_setWavelengthCalibrationCoefficients_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB2000_getWavelengths_stdcall(USB2000_T c_usb2000, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB2000_setWavelengths_stdcall(USB2000_T c_usb2000, DOUBLEARRAY_T wl, int index);
	EXPORTED void STDCALL USB2000_readStrayLightCorrectionCoefficientFromSpectrometer_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB2000_writeStrayLightCoefficientToSpectrometer_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB2000_setStrayLightCorrectionCoefficient_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB2000_getStrayLightCorrectionCoefficient_stdcall(USB2000_T c_usb2000, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB2000_setStrayLight_stdcall(USB2000_T c_usb2000, double strayLight, int index);
	EXPORTED double STDCALL USB2000_getStrayLight_stdcall(USB2000_T c_usb2000, int index);
	EXPORTED int STDCALL USB2000_setI2CBytes_stdcall(USB2000_T c_usb2000, signed char address, signed char numBytes, CHARARRAY_T i2C);
	EXPORTED void STDCALL USB2000_getI2CBytes_stdcall(USB2000_T c_usb2000, signed char address, signed char numBytes, CHARARRAY_T retval);
	EXPORTED short STDCALL USB2000_isAdvancedVersion_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_addAcquisitionListener_stdcall(USB2000_T c_usb2000, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL USB2000_removeAcquisitionListener_stdcall(USB2000_T c_usb2000, ACQUISITIONLISTENER_T listener);
	EXPORTED int STDCALL USB2000_getGateIncrement_stdcall(USB2000_T c_usb2000);
	EXPORTED int STDCALL USB2000_getGateMaximum_stdcall(USB2000_T c_usb2000);
	EXPORTED int STDCALL USB2000_getGateMinimum_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_setGateFrequency_stdcall(USB2000_T c_usb2000, int freq);
	EXPORTED int STDCALL USB2000_getGateFrequency_stdcall(USB2000_T c_usb2000);
	EXPORTED void STDCALL USB2000_addGateDelayListener_stdcall(USB2000_T c_usb2000, GATEDELAYLISTENER_T listener);
	EXPORTED void STDCALL USB2000_removeGateDelayListener_stdcall(USB2000_T c_usb2000, GATEDELAYLISTENER_T listener);
	EXPORTED void STDCALL USB2000_toString_stdcall(USB2000_T c_usb2000, JSTRING_T retval);
	EXPORTED void STDCALL USB2000_Destroy_stdcall(USB2000_T usb2000);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USB2000_H */
