/**
 * File: Flame_DA_VN.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * Flame_DA_VN.java
 * for the Java class
 * com/oceanoptics/omnidriver/plugin/Flame_DA_VN
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FLAME_DA_VN_H
#define FLAME_DA_VN_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerPlugIn.h"
#include "USBSpectrometer.h"
#include "USBInterface.h"
#include "GUIProviderArray.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerPlugIn;
class USBSpectrometer;
class USBInterface;
class GUIProviderArray;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Flame_DA_VN : public SpectrometerPlugIn // CPPClass.tag001
{
public: 
	Flame_DA_VN(USBSpectrometer& spec, USBInterface& usb);
	void initialize();
	void setPOTValue(int pot, short value);
	ShortArray getPOTValues();
	void setNIRLampOn(short lampOn);
	short isNIRLampOn();
	void setVisLampOn(short lampOn);
	short isVisLampOn();
	void setVisLampIntensity(short intens);
	short getVisLampIntensity();
	void setNIRLampIntensity(short intens);
	short getNIRLampIntensity();
	int getLampIntensityMinimum();
	int getLampIntensityMaximum();
	int getLampIntensityIncrement();
	GUIProviderArray getGUIFeatures();
	JString toString();
	~Flame_DA_VN();
	// No public default Java constructor; creating one:
	Flame_DA_VN();
	// No public Java copy constructor; creating one:
	Flame_DA_VN(const Flame_DA_VN &that);
	// Creating assignment operator declaration:
	Flame_DA_VN &operator=(const Flame_DA_VN &that);

private:
	jmethodID mid_Flame_DA_VN2608;
	jmethodID mid_initialize2609;
	jmethodID mid_setPOTValue2610;
	jmethodID mid_getPOTValues2611;
	jmethodID mid_setNIRLampOn2612;
	jmethodID mid_isNIRLampOn2613;
	jmethodID mid_setVisLampOn2614;
	jmethodID mid_isVisLampOn2615;
	jmethodID mid_setVisLampIntensity2616;
	jmethodID mid_getVisLampIntensity2617;
	jmethodID mid_setNIRLampIntensity2618;
	jmethodID mid_getNIRLampIntensity2619;
	jmethodID mid_getLampIntensityMinimum2620;
	jmethodID mid_getLampIntensityMaximum2621;
	jmethodID mid_getLampIntensityIncrement2622;
	jmethodID mid_getGUIFeatures2623;
	jmethodID mid_toString2624;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T
	typedef void* SPECTROMETERPLUGIN_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_FLAME_DA_VN_T
#define EXTERN_TYPEDEF_FLAME_DA_VN_T
	typedef void* FLAME_DA_VN_T;
#endif /* EXTERN_TYPEDEF_FLAME_DA_VN_T */

	// No public default Java constructor; creating one:
	EXPORTED FLAME_DA_VN_T Flame_DA_VN_Create();
	EXPORTED FLAME_DA_VN_T Flame_DA_VN_Create_1(USBSPECTROMETER_T spec, USBINTERFACE_T usb);
	EXPORTED void Flame_DA_VN_initialize(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void Flame_DA_VN_setPOTValue(FLAME_DA_VN_T c_flame_d_a_v_n, int pot, short value);
	EXPORTED void Flame_DA_VN_getPOTValues(FLAME_DA_VN_T c_flame_d_a_v_n, SHORTARRAY_T retval);
	EXPORTED void Flame_DA_VN_setNIRLampOn(FLAME_DA_VN_T c_flame_d_a_v_n, short lampOn);
	EXPORTED short Flame_DA_VN_isNIRLampOn(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void Flame_DA_VN_setVisLampOn(FLAME_DA_VN_T c_flame_d_a_v_n, short lampOn);
	EXPORTED short Flame_DA_VN_isVisLampOn(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void Flame_DA_VN_setVisLampIntensity(FLAME_DA_VN_T c_flame_d_a_v_n, short intens);
	EXPORTED short Flame_DA_VN_getVisLampIntensity(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void Flame_DA_VN_setNIRLampIntensity(FLAME_DA_VN_T c_flame_d_a_v_n, short intens);
	EXPORTED short Flame_DA_VN_getNIRLampIntensity(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED int Flame_DA_VN_getLampIntensityMinimum(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED int Flame_DA_VN_getLampIntensityMaximum(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED int Flame_DA_VN_getLampIntensityIncrement(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void Flame_DA_VN_getGUIFeatures(FLAME_DA_VN_T c_flame_d_a_v_n, GUIPROVIDERARRAY_T retval);
	EXPORTED void Flame_DA_VN_toString(FLAME_DA_VN_T c_flame_d_a_v_n, JSTRING_T retval);
	EXPORTED void Flame_DA_VN_Destroy(FLAME_DA_VN_T flame_d_a_v_n);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED FLAME_DA_VN_T STDCALL Flame_DA_VN_Create_stdcall_1(USBSPECTROMETER_T spec, USBINTERFACE_T usb);
	EXPORTED void STDCALL Flame_DA_VN_initialize_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void STDCALL Flame_DA_VN_setPOTValue_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, int pot, short value);
	EXPORTED void STDCALL Flame_DA_VN_getPOTValues_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, SHORTARRAY_T retval);
	EXPORTED void STDCALL Flame_DA_VN_setNIRLampOn_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, short lampOn);
	EXPORTED short STDCALL Flame_DA_VN_isNIRLampOn_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void STDCALL Flame_DA_VN_setVisLampOn_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, short lampOn);
	EXPORTED short STDCALL Flame_DA_VN_isVisLampOn_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void STDCALL Flame_DA_VN_setVisLampIntensity_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, short intens);
	EXPORTED short STDCALL Flame_DA_VN_getVisLampIntensity_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void STDCALL Flame_DA_VN_setNIRLampIntensity_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, short intens);
	EXPORTED short STDCALL Flame_DA_VN_getNIRLampIntensity_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED int STDCALL Flame_DA_VN_getLampIntensityMinimum_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED int STDCALL Flame_DA_VN_getLampIntensityMaximum_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED int STDCALL Flame_DA_VN_getLampIntensityIncrement_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n);
	EXPORTED void STDCALL Flame_DA_VN_getGUIFeatures_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL Flame_DA_VN_toString_stdcall(FLAME_DA_VN_T c_flame_d_a_v_n, JSTRING_T retval);
	EXPORTED void STDCALL Flame_DA_VN_Destroy_stdcall(FLAME_DA_VN_T flame_d_a_v_n);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FLAME_DA_VN_H */
