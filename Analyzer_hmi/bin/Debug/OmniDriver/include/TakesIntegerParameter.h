/**
 * File: TakesIntegerParameter.h
 * Autogenerated on Fri Mar 23 13:38:22 EDT 2018 based on
 * TakesIntegerParameter.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/TakesIntegerParameter
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef TAKESINTEGERPARAMETER_H
#define TAKESINTEGERPARAMETER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED TakesIntegerParameter : public BaseJavaClass // CPPClass.tag001
{
public: 
	int getParameterValue();
	void setParameterValue(int param0);
	~TakesIntegerParameter();
	// No public default Java constructor; creating one:
	TakesIntegerParameter();
	// No public Java copy constructor; creating one:
	TakesIntegerParameter(const TakesIntegerParameter &that);
	// Creating assignment operator declaration:
	TakesIntegerParameter &operator=(const TakesIntegerParameter &that);

private:
	jmethodID mid_getParameterValue33;
	jmethodID mid_setParameterValue34;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_TAKESINTEGERPARAMETER_T
#define EXTERN_TYPEDEF_TAKESINTEGERPARAMETER_T
	typedef void* TAKESINTEGERPARAMETER_T;
#endif /* EXTERN_TYPEDEF_TAKESINTEGERPARAMETER_T */

	// No public default Java constructor; creating one:
	EXPORTED TAKESINTEGERPARAMETER_T TakesIntegerParameter_Create();
	EXPORTED int TakesIntegerParameter_getParameterValue(TAKESINTEGERPARAMETER_T c_takes_integer_parameter);
	EXPORTED void TakesIntegerParameter_setParameterValue(TAKESINTEGERPARAMETER_T c_takes_integer_parameter, int param0);
	EXPORTED void TakesIntegerParameter_Destroy(TAKESINTEGERPARAMETER_T takes_integer_parameter);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED int STDCALL TakesIntegerParameter_getParameterValue_stdcall(TAKESINTEGERPARAMETER_T c_takes_integer_parameter);
	EXPORTED void STDCALL TakesIntegerParameter_setParameterValue_stdcall(TAKESINTEGERPARAMETER_T c_takes_integer_parameter, int param0);
	EXPORTED void STDCALL TakesIntegerParameter_Destroy_stdcall(TAKESINTEGERPARAMETER_T takes_integer_parameter);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* TAKESINTEGERPARAMETER_H */
