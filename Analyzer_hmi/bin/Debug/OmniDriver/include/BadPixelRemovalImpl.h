/**
 * File: BadPixelRemovalImpl.h
 * Autogenerated on Fri Mar 23 13:38:30 EDT 2018 based on
 * BadPixelRemovalImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/badpixelremoval/BadPixelRemovalImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef BADPIXELREMOVALIMPL_H
#define BADPIXELREMOVALIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "Spectrum.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class Spectrum;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED BadPixelRemovalImpl : public USBFeature // CPPClass.tag001
{
public: 
	BadPixelRemovalImpl(USBInterface& usbInt, int numPixels);
	void setBadPixelsToSpectrometer();
	IntArray getBadPixelsFromSpectrometer();
	IntArray getBadPixels();
	void setBadPixels(IntArray& pixels);
	Spectrum removeBadPixels(Spectrum& spectrum);
	int getNumberOfBadPixels();
	int getMaximumBadPixels();
	void setNumberOfBadPixels(int num);
	IntArray getAllPixels();
	JStringArray getFeatureGUIClassnames();
	~BadPixelRemovalImpl();
	// No public default Java constructor; creating one:
	BadPixelRemovalImpl();
	// No public Java copy constructor; creating one:
	BadPixelRemovalImpl(const BadPixelRemovalImpl &that);
	// Creating assignment operator declaration:
	BadPixelRemovalImpl &operator=(const BadPixelRemovalImpl &that);

private:
	jmethodID mid_BadPixelRemovalImpl871;
	jmethodID mid_setBadPixelsToSpectrometer872;
	jmethodID mid_getBadPixelsFromSpectrometer873;
	jmethodID mid_getBadPixels874;
	jmethodID mid_setBadPixels875;
	jmethodID mid_removeBadPixels876;
	jmethodID mid_getNumberOfBadPixels877;
	jmethodID mid_getMaximumBadPixels878;
	jmethodID mid_setNumberOfBadPixels879;
	jmethodID mid_getAllPixels880;
	jmethodID mid_getFeatureGUIClassnames881;
	jfieldID fid_dataOutEndPoint;
	jfieldID fid_lowSpeedInEndPoint;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTRUM_T
#define EXTERN_TYPEDEF_SPECTRUM_T
	typedef void* SPECTRUM_T;
#endif /* EXTERN_TYPEDEF_SPECTRUM_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_T
#define EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_T
	typedef void* BADPIXELREMOVALIMPL_T;
#endif /* EXTERN_TYPEDEF_BADPIXELREMOVALIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED BADPIXELREMOVALIMPL_T BadPixelRemovalImpl_Create();
	EXPORTED BADPIXELREMOVALIMPL_T BadPixelRemovalImpl_Create_1(USBINTERFACE_T usbInt, int numPixels);
	EXPORTED void BadPixelRemovalImpl_setBadPixelsToSpectrometer(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl);
	EXPORTED void BadPixelRemovalImpl_getBadPixelsFromSpectrometer(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T retval);
	EXPORTED void BadPixelRemovalImpl_getBadPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T retval);
	EXPORTED void BadPixelRemovalImpl_setBadPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T pixels);
	EXPORTED void BadPixelRemovalImpl_removeBadPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, SPECTRUM_T spectrum, SPECTRUM_T retval);
	EXPORTED int BadPixelRemovalImpl_getNumberOfBadPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl);
	EXPORTED int BadPixelRemovalImpl_getMaximumBadPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl);
	EXPORTED void BadPixelRemovalImpl_setNumberOfBadPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, int num);
	EXPORTED void BadPixelRemovalImpl_getAllPixels(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T retval);
	EXPORTED void BadPixelRemovalImpl_getFeatureGUIClassnames(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, JSTRINGARRAY_T retval);
	EXPORTED void BadPixelRemovalImpl_Destroy(BADPIXELREMOVALIMPL_T bad_pixel_removal_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED BADPIXELREMOVALIMPL_T STDCALL BadPixelRemovalImpl_Create_stdcall_1(USBINTERFACE_T usbInt, int numPixels);
	EXPORTED void STDCALL BadPixelRemovalImpl_setBadPixelsToSpectrometer_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl);
	EXPORTED void STDCALL BadPixelRemovalImpl_getBadPixelsFromSpectrometer_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T retval);
	EXPORTED void STDCALL BadPixelRemovalImpl_getBadPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T retval);
	EXPORTED void STDCALL BadPixelRemovalImpl_setBadPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T pixels);
	EXPORTED void STDCALL BadPixelRemovalImpl_removeBadPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, SPECTRUM_T spectrum, SPECTRUM_T retval);
	EXPORTED int STDCALL BadPixelRemovalImpl_getNumberOfBadPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl);
	EXPORTED int STDCALL BadPixelRemovalImpl_getMaximumBadPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl);
	EXPORTED void STDCALL BadPixelRemovalImpl_setNumberOfBadPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, int num);
	EXPORTED void STDCALL BadPixelRemovalImpl_getAllPixels_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, INTARRAY_T retval);
	EXPORTED void STDCALL BadPixelRemovalImpl_getFeatureGUIClassnames_stdcall(BADPIXELREMOVALIMPL_T c_bad_pixel_removal_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL BadPixelRemovalImpl_Destroy_stdcall(BADPIXELREMOVALIMPL_T bad_pixel_removal_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* BADPIXELREMOVALIMPL_H */
