/**
 * File: HR4000Status.h
 * Autogenerated on Fri Mar 23 13:38:53 EDT 2018 based on
 * HR4000Status.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/hr4000/HR4000Status
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HR4000STATUS_H
#define HR4000STATUS_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerStatus.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerStatus;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HR4000Status : public SpectrometerStatus // CPPClass.tag001
{
public: 
	HR4000Status();
	JString toString();
	~HR4000Status();
	// No public Java copy constructor; creating one:
	HR4000Status(const HR4000Status &that);
	// Creating assignment operator declaration:
	HR4000Status &operator=(const HR4000Status &that);
	signed char numPacketsInSpectra;
	int powerDownFlag;
	signed char packetCount;
	int usbSpeed;

private:
	jmethodID mid_HR4000Status3649;
	jmethodID mid_toString3650;
	jfieldID fid_numPacketsInSpectra;
	jfieldID fid_powerDownFlag;
	jfieldID fid_packetCount;
	jfieldID fid_usbSpeed;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
#define EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
	typedef void* SPECTROMETERSTATUS_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERSTATUS_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_HR4000STATUS_T
#define EXTERN_TYPEDEF_HR4000STATUS_T
	typedef void* HR4000STATUS_T;
#endif /* EXTERN_TYPEDEF_HR4000STATUS_T */

	EXPORTED HR4000STATUS_T HR4000Status_Create();
	EXPORTED void HR4000Status_toString(HR4000STATUS_T c_hr4000status, JSTRING_T retval);
	EXPORTED void HR4000Status_Destroy(HR4000STATUS_T hr4000status);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HR4000STATUS_T STDCALL HR4000Status_Create_stdcall();
	EXPORTED void STDCALL HR4000Status_toString_stdcall(HR4000STATUS_T c_hr4000status, JSTRING_T retval);
	EXPORTED void STDCALL HR4000Status_Destroy_stdcall(HR4000STATUS_T hr4000status);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HR4000STATUS_H */
