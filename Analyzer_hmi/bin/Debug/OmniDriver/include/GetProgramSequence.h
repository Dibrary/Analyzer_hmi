/**
 * File: GetProgramSequence.h
 * Autogenerated on Fri Mar 23 13:38:23 EDT 2018 based on
 * GetProgramSequence.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/getprogramsequence/GetProgramSequence
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GETPROGRAMSEQUENCE_H
#define GETPROGRAMSEQUENCE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Node.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Node;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GetProgramSequence : public BaseJavaClass // CPPClass.tag001
{
public: 
	JStringArray getProgramSequence(Node& param0);
	~GetProgramSequence();
	// No public default Java constructor; creating one:
	GetProgramSequence();
	// No public Java copy constructor; creating one:
	GetProgramSequence(const GetProgramSequence &that);
	// Creating assignment operator declaration:
	GetProgramSequence &operator=(const GetProgramSequence &that);

private:
	jmethodID mid_getProgramSequence95;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_GETPROGRAMSEQUENCE_T
#define EXTERN_TYPEDEF_GETPROGRAMSEQUENCE_T
	typedef void* GETPROGRAMSEQUENCE_T;
#endif /* EXTERN_TYPEDEF_GETPROGRAMSEQUENCE_T */

	// No public default Java constructor; creating one:
	EXPORTED GETPROGRAMSEQUENCE_T GetProgramSequence_Create();
	EXPORTED void GetProgramSequence_getProgramSequence(GETPROGRAMSEQUENCE_T c_get_program_sequence, NODE_T param0, JSTRINGARRAY_T retval);
	EXPORTED void GetProgramSequence_Destroy(GETPROGRAMSEQUENCE_T get_program_sequence);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL GetProgramSequence_getProgramSequence_stdcall(GETPROGRAMSEQUENCE_T c_get_program_sequence, NODE_T param0, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL GetProgramSequence_Destroy_stdcall(GETPROGRAMSEQUENCE_T get_program_sequence);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GETPROGRAMSEQUENCE_H */
