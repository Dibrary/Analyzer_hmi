/**
 * File: GetOperationStatus.h
 * Autogenerated on Fri Mar 23 13:38:22 EDT 2018 based on
 * GetOperationStatus.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/getoperationstatus/GetOperationStatus
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GETOPERATIONSTATUS_H
#define GETOPERATIONSTATUS_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Node.h"
#include "GetOperationStatus$OperationStatus.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Node;
class GetOperationStatus$OperationStatus;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GetOperationStatus : public BaseJavaClass // CPPClass.tag001
{
public: 
	GetOperationStatus$OperationStatus getOperationStatus(Node& param0);
	~GetOperationStatus();
	// No public default Java constructor; creating one:
	GetOperationStatus();
	// No public Java copy constructor; creating one:
	GetOperationStatus(const GetOperationStatus &that);
	// Creating assignment operator declaration:
	GetOperationStatus &operator=(const GetOperationStatus &that);

private:
	jmethodID mid_getOperationStatus85;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_GETOPERATIONSTATUS$OPERATIONSTATUS_T
#define EXTERN_TYPEDEF_GETOPERATIONSTATUS$OPERATIONSTATUS_T
	typedef void* GETOPERATIONSTATUS$OPERATIONSTATUS_T;
#endif /* EXTERN_TYPEDEF_GETOPERATIONSTATUS$OPERATIONSTATUS_T */
#ifndef EXTERN_TYPEDEF_GETOPERATIONSTATUS_T
#define EXTERN_TYPEDEF_GETOPERATIONSTATUS_T
	typedef void* GETOPERATIONSTATUS_T;
#endif /* EXTERN_TYPEDEF_GETOPERATIONSTATUS_T */

	// No public default Java constructor; creating one:
	EXPORTED GETOPERATIONSTATUS_T GetOperationStatus_Create();
	EXPORTED void GetOperationStatus_getOperationStatus(GETOPERATIONSTATUS_T c_get_operation_status, NODE_T param0, GETOPERATIONSTATUS$OPERATIONSTATUS_T retval);
	EXPORTED void GetOperationStatus_Destroy(GETOPERATIONSTATUS_T get_operation_status);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL GetOperationStatus_getOperationStatus_stdcall(GETOPERATIONSTATUS_T c_get_operation_status, NODE_T param0, GETOPERATIONSTATUS$OPERATIONSTATUS_T retval);
	EXPORTED void STDCALL GetOperationStatus_Destroy_stdcall(GETOPERATIONSTATUS_T get_operation_status);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GETOPERATIONSTATUS_H */
