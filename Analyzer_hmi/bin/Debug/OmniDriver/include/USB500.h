/**
 * File: USB500.h
 * Autogenerated on Fri Mar 23 13:39:17 EDT 2018 based on
 * USB500.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/usb500/USB500
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USB500_H
#define USB500_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBSpectrometer.h"
#include "USBEndpointDescriptor.h"
#include "SpectrometerChannelArray.h"
#include "GUIProviderArray.h"
#include "SpectrometerStatus.h"
#include "JString.h"
#include "ExternalTriggerModeArray.h"
#include "SpectrometerPlugInArray.h"
#include "CoefficientsArray.h"
#include "AcquisitionListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBSpectrometer;
class USBEndpointDescriptor;
class SpectrometerChannelArray;
class GUIProviderArray;
class SpectrometerStatus;
class JString;
class ExternalTriggerModeArray;
class SpectrometerPlugInArray;
class CoefficientsArray;
class AcquisitionListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USB500 : public USBSpectrometer // CPPClass.tag001
{
public: 
	USB500();
	USB500(int i);
	int getNumberOfPixels();
	int getNumberOfDarkPixels();
	void setEndpoints();
	USBEndpointDescriptor getEndpoint(int endPoint);
	void openSpectrometer(int index);
	SpectrometerChannelArray getChannels();
	GUIProviderArray getGUIFeatures();
	SpectrometerStatus getStatus();
	int readIntegrationTime();
	void setMasterClock(int freq);
	DoubleArray getIrradianceCalibrationFactors();
	void setIrradianceCalibrationFactors(DoubleArray& data);
	double getCollectionArea();
	short hasCollectionArea();
	void setCollectionArea(double area);
	JString toString();
	int getActualIntegrationTime();
	CharArray getSPIBytes(CharArray& message, int length);
	void setExternalTriggerMode(int mode);
	ExternalTriggerModeArray getExternalTriggerModes();
	short isPlugInDetected(int id);
	SpectrometerPlugInArray getPlugIns();
	int getNumberOfPlugIns();
	CharArray initializePlugIns();
	void detectPlugIns();
	CoefficientsArray readNonlinearityCoefficientsFromSpectrometer();
	void writeNonlinearityCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getNonlinearityCoefficients();
	void setNonlinearityCoefficients(CoefficientsArray& coefficients);
	DoubleArray getNonlinearityCoefficientsSingleChannel(int index);
	void setNonlinearityCoefficientsSingleChannel(DoubleArray& nl, int index);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getWavelengthCalibrationCoefficients();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& coefficients);
	DoubleArray getWavelengths(int index);
	void setWavelengths(DoubleArray& wl, int index);
	CoefficientsArray readStrayLightCorrectionCoefficientFromSpectrometer();
	void writeStrayLightCoefficientToSpectrometer(CoefficientsArray& coefficients);
	void setStrayLightCorrectionCoefficient(CoefficientsArray& coefficients);
	CoefficientsArray getStrayLightCorrectionCoefficient();
	void setStrayLight(double strayLight, int index);
	double getStrayLight(int index);
	int getDarkValue();
	void setDarkValue(int value);
	double getSaturationValue();
	void setSaturationValue(double value);
	void recordSettings();
	short isAdvancedVersion();
	void addAcquisitionListener(AcquisitionListener& listener);
	void removeAcquisitionListener(AcquisitionListener& listener);
	~USB500();
	// No public Java copy constructor; creating one:
	USB500(const USB500 &that);
	// Creating assignment operator declaration:
	USB500 &operator=(const USB500 &that);

private:
	jmethodID mid_USB5006224;
	jmethodID mid_USB5006225;
	jmethodID mid_getNumberOfPixels6226;
	jmethodID mid_getNumberOfDarkPixels6227;
	jmethodID mid_setEndpoints6228;
	jmethodID mid_getEndpoint6229;
	jmethodID mid_openSpectrometer6230;
	jmethodID mid_getChannels6231;
	jmethodID mid_getGUIFeatures6232;
	jmethodID mid_getStatus6233;
	jmethodID mid_readIntegrationTime6234;
	jmethodID mid_setMasterClock6235;
	jmethodID mid_getIrradianceCalibrationFactors6236;
	jmethodID mid_setIrradianceCalibrationFactors6237;
	jmethodID mid_getCollectionArea6238;
	jmethodID mid_hasCollectionArea6239;
	jmethodID mid_setCollectionArea6240;
	jmethodID mid_toString6241;
	jmethodID mid_getActualIntegrationTime6242;
	jmethodID mid_getSPIBytes6243;
	jmethodID mid_setExternalTriggerMode6244;
	jmethodID mid_getExternalTriggerModes6245;
	jmethodID mid_isPlugInDetected6246;
	jmethodID mid_getPlugIns6247;
	jmethodID mid_getNumberOfPlugIns6248;
	jmethodID mid_initializePlugIns6249;
	jmethodID mid_detectPlugIns6250;
	jmethodID mid_readNonlinearityCoefficientsFromSpectrometer6251;
	jmethodID mid_writeNonlinearityCoefficientsToSpectrometer6252;
	jmethodID mid_getNonlinearityCoefficients6253;
	jmethodID mid_setNonlinearityCoefficients6254;
	jmethodID mid_getNonlinearityCoefficientsSingleChannel6255;
	jmethodID mid_setNonlinearityCoefficientsSingleChannel6256;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer6257;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer6258;
	jmethodID mid_getWavelengthCalibrationCoefficients6259;
	jmethodID mid_setWavelengthCalibrationCoefficients6260;
	jmethodID mid_getWavelengths6261;
	jmethodID mid_setWavelengths6262;
	jmethodID mid_readStrayLightCorrectionCoefficientFromSpectrometer6263;
	jmethodID mid_writeStrayLightCoefficientToSpectrometer6264;
	jmethodID mid_setStrayLightCorrectionCoefficient6265;
	jmethodID mid_getStrayLightCorrectionCoefficient6266;
	jmethodID mid_setStrayLight6267;
	jmethodID mid_getStrayLight6268;
	jmethodID mid_getDarkValue6269;
	jmethodID mid_setDarkValue6270;
	jmethodID mid_getSaturationValue6271;
	jmethodID mid_setSaturationValue6272;
	jmethodID mid_recordSettings6273;
	jmethodID mid_isAdvancedVersion6274;
	jmethodID mid_addAcquisitionListener6275;
	jmethodID mid_removeAcquisitionListener6276;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
	typedef void* SPECTROMETERCHANNELARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
#define EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
	typedef void* SPECTROMETERSTATUS_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERSTATUS_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
	typedef void* SPECTROMETERPLUGINARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
#define EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
	typedef void* ACQUISITIONLISTENER_T;
#endif /* EXTERN_TYPEDEF_ACQUISITIONLISTENER_T */
#ifndef EXTERN_TYPEDEF_USB500_T
#define EXTERN_TYPEDEF_USB500_T
	typedef void* USB500_T;
#endif /* EXTERN_TYPEDEF_USB500_T */

	EXPORTED USB500_T USB500_Create();
	EXPORTED USB500_T USB500_Create_1(int i);
	EXPORTED int USB500_getNumberOfPixels(USB500_T c_usb500);
	EXPORTED int USB500_getNumberOfDarkPixels(USB500_T c_usb500);
	EXPORTED void USB500_setEndpoints(USB500_T c_usb500);
	EXPORTED void USB500_getEndpoint(USB500_T c_usb500, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED void USB500_openSpectrometer(USB500_T c_usb500, int index);
	EXPORTED void USB500_getChannels(USB500_T c_usb500, SPECTROMETERCHANNELARRAY_T retval);
	EXPORTED void USB500_getGUIFeatures(USB500_T c_usb500, GUIPROVIDERARRAY_T retval);
	EXPORTED void USB500_getStatus(USB500_T c_usb500, SPECTROMETERSTATUS_T retval);
	EXPORTED int USB500_readIntegrationTime(USB500_T c_usb500);
	EXPORTED void USB500_setMasterClock(USB500_T c_usb500, int freq);
	EXPORTED void USB500_getIrradianceCalibrationFactors(USB500_T c_usb500, DOUBLEARRAY_T retval);
	EXPORTED void USB500_setIrradianceCalibrationFactors(USB500_T c_usb500, DOUBLEARRAY_T data);
	EXPORTED double USB500_getCollectionArea(USB500_T c_usb500);
	EXPORTED short USB500_hasCollectionArea(USB500_T c_usb500);
	EXPORTED void USB500_setCollectionArea(USB500_T c_usb500, double area);
	EXPORTED void USB500_toString(USB500_T c_usb500, JSTRING_T retval);
	EXPORTED int USB500_getActualIntegrationTime(USB500_T c_usb500);
	EXPORTED void USB500_getSPIBytes(USB500_T c_usb500, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void USB500_setExternalTriggerMode(USB500_T c_usb500, int mode);
	EXPORTED void USB500_getExternalTriggerModes(USB500_T c_usb500, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED short USB500_isPlugInDetected(USB500_T c_usb500, int id);
	EXPORTED void USB500_getPlugIns(USB500_T c_usb500, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int USB500_getNumberOfPlugIns(USB500_T c_usb500);
	EXPORTED void USB500_initializePlugIns(USB500_T c_usb500, CHARARRAY_T retval);
	EXPORTED void USB500_detectPlugIns(USB500_T c_usb500);
	EXPORTED void USB500_readNonlinearityCoefficientsFromSpectrometer(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB500_writeNonlinearityCoefficientsToSpectrometer(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB500_getNonlinearityCoefficients(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB500_setNonlinearityCoefficients(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB500_getNonlinearityCoefficientsSingleChannel(USB500_T c_usb500, int index, DOUBLEARRAY_T retval);
	EXPORTED void USB500_setNonlinearityCoefficientsSingleChannel(USB500_T c_usb500, DOUBLEARRAY_T nl, int index);
	EXPORTED void USB500_readWavelengthCalibrationCoefficientsFromSpectrometer(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB500_writeWavelengthCoefficientsToSpectrometer(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB500_getWavelengthCalibrationCoefficients(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB500_setWavelengthCalibrationCoefficients(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB500_getWavelengths(USB500_T c_usb500, int index, DOUBLEARRAY_T retval);
	EXPORTED void USB500_setWavelengths(USB500_T c_usb500, DOUBLEARRAY_T wl, int index);
	EXPORTED void USB500_readStrayLightCorrectionCoefficientFromSpectrometer(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB500_writeStrayLightCoefficientToSpectrometer(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB500_setStrayLightCorrectionCoefficient(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB500_getStrayLightCorrectionCoefficient(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB500_setStrayLight(USB500_T c_usb500, double strayLight, int index);
	EXPORTED double USB500_getStrayLight(USB500_T c_usb500, int index);
	EXPORTED int USB500_getDarkValue(USB500_T c_usb500);
	EXPORTED void USB500_setDarkValue(USB500_T c_usb500, int value);
	EXPORTED double USB500_getSaturationValue(USB500_T c_usb500);
	EXPORTED void USB500_setSaturationValue(USB500_T c_usb500, double value);
	EXPORTED void USB500_recordSettings(USB500_T c_usb500);
	EXPORTED short USB500_isAdvancedVersion(USB500_T c_usb500);
	EXPORTED void USB500_addAcquisitionListener(USB500_T c_usb500, ACQUISITIONLISTENER_T listener);
	EXPORTED void USB500_removeAcquisitionListener(USB500_T c_usb500, ACQUISITIONLISTENER_T listener);
	EXPORTED void USB500_Destroy(USB500_T usb500);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USB500_T STDCALL USB500_Create_stdcall();
	EXPORTED USB500_T STDCALL USB500_Create_stdcall_1(int i);
	EXPORTED int STDCALL USB500_getNumberOfPixels_stdcall(USB500_T c_usb500);
	EXPORTED int STDCALL USB500_getNumberOfDarkPixels_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_setEndpoints_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_getEndpoint_stdcall(USB500_T c_usb500, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED void STDCALL USB500_openSpectrometer_stdcall(USB500_T c_usb500, int index);
	EXPORTED void STDCALL USB500_getChannels_stdcall(USB500_T c_usb500, SPECTROMETERCHANNELARRAY_T retval);
	EXPORTED void STDCALL USB500_getGUIFeatures_stdcall(USB500_T c_usb500, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL USB500_getStatus_stdcall(USB500_T c_usb500, SPECTROMETERSTATUS_T retval);
	EXPORTED int STDCALL USB500_readIntegrationTime_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_setMasterClock_stdcall(USB500_T c_usb500, int freq);
	EXPORTED void STDCALL USB500_getIrradianceCalibrationFactors_stdcall(USB500_T c_usb500, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB500_setIrradianceCalibrationFactors_stdcall(USB500_T c_usb500, DOUBLEARRAY_T data);
	EXPORTED double STDCALL USB500_getCollectionArea_stdcall(USB500_T c_usb500);
	EXPORTED short STDCALL USB500_hasCollectionArea_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_setCollectionArea_stdcall(USB500_T c_usb500, double area);
	EXPORTED void STDCALL USB500_toString_stdcall(USB500_T c_usb500, JSTRING_T retval);
	EXPORTED int STDCALL USB500_getActualIntegrationTime_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_getSPIBytes_stdcall(USB500_T c_usb500, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void STDCALL USB500_setExternalTriggerMode_stdcall(USB500_T c_usb500, int mode);
	EXPORTED void STDCALL USB500_getExternalTriggerModes_stdcall(USB500_T c_usb500, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED short STDCALL USB500_isPlugInDetected_stdcall(USB500_T c_usb500, int id);
	EXPORTED void STDCALL USB500_getPlugIns_stdcall(USB500_T c_usb500, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int STDCALL USB500_getNumberOfPlugIns_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_initializePlugIns_stdcall(USB500_T c_usb500, CHARARRAY_T retval);
	EXPORTED void STDCALL USB500_detectPlugIns_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_readNonlinearityCoefficientsFromSpectrometer_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB500_writeNonlinearityCoefficientsToSpectrometer_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB500_getNonlinearityCoefficients_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB500_setNonlinearityCoefficients_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB500_getNonlinearityCoefficientsSingleChannel_stdcall(USB500_T c_usb500, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB500_setNonlinearityCoefficientsSingleChannel_stdcall(USB500_T c_usb500, DOUBLEARRAY_T nl, int index);
	EXPORTED void STDCALL USB500_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB500_writeWavelengthCoefficientsToSpectrometer_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB500_getWavelengthCalibrationCoefficients_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB500_setWavelengthCalibrationCoefficients_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB500_getWavelengths_stdcall(USB500_T c_usb500, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB500_setWavelengths_stdcall(USB500_T c_usb500, DOUBLEARRAY_T wl, int index);
	EXPORTED void STDCALL USB500_readStrayLightCorrectionCoefficientFromSpectrometer_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB500_writeStrayLightCoefficientToSpectrometer_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB500_setStrayLightCorrectionCoefficient_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB500_getStrayLightCorrectionCoefficient_stdcall(USB500_T c_usb500, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB500_setStrayLight_stdcall(USB500_T c_usb500, double strayLight, int index);
	EXPORTED double STDCALL USB500_getStrayLight_stdcall(USB500_T c_usb500, int index);
	EXPORTED int STDCALL USB500_getDarkValue_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_setDarkValue_stdcall(USB500_T c_usb500, int value);
	EXPORTED double STDCALL USB500_getSaturationValue_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_setSaturationValue_stdcall(USB500_T c_usb500, double value);
	EXPORTED void STDCALL USB500_recordSettings_stdcall(USB500_T c_usb500);
	EXPORTED short STDCALL USB500_isAdvancedVersion_stdcall(USB500_T c_usb500);
	EXPORTED void STDCALL USB500_addAcquisitionListener_stdcall(USB500_T c_usb500, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL USB500_removeAcquisitionListener_stdcall(USB500_T c_usb500, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL USB500_Destroy_stdcall(USB500_T usb500);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USB500_H */
