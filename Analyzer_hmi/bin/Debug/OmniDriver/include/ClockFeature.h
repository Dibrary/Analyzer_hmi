/**
 * File: ClockFeature.h
 * Autogenerated on Fri Mar 23 13:38:32 EDT 2018 based on
 * ClockFeature.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/clock/ClockFeature
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef CLOCKFEATURE_H
#define CLOCKFEATURE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED ClockFeature : public BaseJavaClass // CPPClass.tag001
{
public: 
	long long readClock();
	void writeClock(long long param0);
	void setCurrentTime();
	~ClockFeature();
	// No public default Java constructor; creating one:
	ClockFeature();
	// No public Java copy constructor; creating one:
	ClockFeature(const ClockFeature &that);
	// Creating assignment operator declaration:
	ClockFeature &operator=(const ClockFeature &that);

private:
	jmethodID mid_readClock991;
	jmethodID mid_writeClock992;
	jmethodID mid_setCurrentTime993;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_CLOCKFEATURE_T
#define EXTERN_TYPEDEF_CLOCKFEATURE_T
	typedef void* CLOCKFEATURE_T;
#endif /* EXTERN_TYPEDEF_CLOCKFEATURE_T */

	// No public default Java constructor; creating one:
	EXPORTED CLOCKFEATURE_T ClockFeature_Create();
	EXPORTED long long ClockFeature_readClock(CLOCKFEATURE_T c_clock_feature);
	EXPORTED void ClockFeature_writeClock(CLOCKFEATURE_T c_clock_feature, long long param0);
	EXPORTED void ClockFeature_setCurrentTime(CLOCKFEATURE_T c_clock_feature);
	EXPORTED void ClockFeature_Destroy(CLOCKFEATURE_T clock_feature);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED long long STDCALL ClockFeature_readClock_stdcall(CLOCKFEATURE_T c_clock_feature);
	EXPORTED void STDCALL ClockFeature_writeClock_stdcall(CLOCKFEATURE_T c_clock_feature, long long param0);
	EXPORTED void STDCALL ClockFeature_setCurrentTime_stdcall(CLOCKFEATURE_T c_clock_feature);
	EXPORTED void STDCALL ClockFeature_Destroy_stdcall(CLOCKFEATURE_T clock_feature);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* CLOCKFEATURE_H */
