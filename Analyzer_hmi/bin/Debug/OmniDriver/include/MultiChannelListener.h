/**
 * File: MultiChannelListener.h
 * Autogenerated on Fri Mar 23 13:38:38 EDT 2018 based on
 * MultiChannelListener.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/multichannelprovider/MultiChannelListener
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MULTICHANNELLISTENER_H
#define MULTICHANNELLISTENER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED MultiChannelListener : public BaseJavaClass // CPPClass.tag001
{
public: 
	void addChannel(int param0);
	void removeChannel(int param0);
	~MultiChannelListener();
	// No public default Java constructor; creating one:
	MultiChannelListener();
	// No public Java copy constructor; creating one:
	MultiChannelListener(const MultiChannelListener &that);
	// Creating assignment operator declaration:
	MultiChannelListener &operator=(const MultiChannelListener &that);

private:
	jmethodID mid_addChannel1759;
	jmethodID mid_removeChannel1760;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_MULTICHANNELLISTENER_T
#define EXTERN_TYPEDEF_MULTICHANNELLISTENER_T
	typedef void* MULTICHANNELLISTENER_T;
#endif /* EXTERN_TYPEDEF_MULTICHANNELLISTENER_T */

	// No public default Java constructor; creating one:
	EXPORTED MULTICHANNELLISTENER_T MultiChannelListener_Create();
	EXPORTED void MultiChannelListener_addChannel(MULTICHANNELLISTENER_T c_multi_channel_listener, int param0);
	EXPORTED void MultiChannelListener_removeChannel(MULTICHANNELLISTENER_T c_multi_channel_listener, int param0);
	EXPORTED void MultiChannelListener_Destroy(MULTICHANNELLISTENER_T multi_channel_listener);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL MultiChannelListener_addChannel_stdcall(MULTICHANNELLISTENER_T c_multi_channel_listener, int param0);
	EXPORTED void STDCALL MultiChannelListener_removeChannel_stdcall(MULTICHANNELLISTENER_T c_multi_channel_listener, int param0);
	EXPORTED void STDCALL MultiChannelListener_Destroy_stdcall(MULTICHANNELLISTENER_T multi_channel_listener);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MULTICHANNELLISTENER_H */
