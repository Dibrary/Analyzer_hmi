/**
 * File: NextGenNetwork.h
 * Autogenerated on Fri Mar 23 13:38:59 EDT 2018 based on
 * NextGenNetwork.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/nextgen/NextGenNetwork
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef NEXTGENNETWORK_H
#define NEXTGENNETWORK_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "NetworkSpectrometer.h"
#include "JSocket.h"
#include "PixelRange.h"
#include "PixelRangeArray.h"
#include "JString.h"
#include "CoefficientsArray.h"
#include "GUIProviderArray.h"
#include "BitSet.h"
#include "ExternalTriggerModeArray.h"
#include "OffsetConstraints.h"
#include "ReferenceConstraints.h"
#include "IPv4SubnetAddress.h"
#include "IPv4Address.h"
#include "WiFiSSID.h"
#include "WiFiPassphrase.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class NetworkSpectrometer;
class JSocket;
class PixelRange;
class PixelRangeArray;
class JString;
class CoefficientsArray;
class GUIProviderArray;
class BitSet;
class ExternalTriggerModeArray;
class OffsetConstraints;
class ReferenceConstraints;
class IPv4SubnetAddress;
class IPv4Address;
class WiFiSSID;
class WiFiPassphrase;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED NextGenNetwork : public NetworkSpectrometer // CPPClass.tag001
{
public: 
	NextGenNetwork(int i);
	NextGenNetwork(JSocket& jSocket);
	void openSpectrometer(int index);
	PixelRange getActiveDevicePixelRanges();
	PixelRangeArray getODCPixelRanges();
	PixelRangeArray getEOCPixelRanges();
	DoubleArray getDarkArray();
	JString getFPGAFirmwareVersion();
	JString getPSOCVersion();
	JString getCpuVersion();
	JString getCpuSubVersion();
	int getDetectorType();
	void setDetectorType(int type);
	void setScansToAverage(int scans);
	int getScansToAverage();
	JString getFirmwareVersion();
	JString getInfo(int slot);
	CharArray getInfoBytes(int slot);
	CharArray getStatusArray();
	void initialize();
	void setInfo(int slot, JString& str);
	void setInfoBytes(int slot, CharArray& byteArray);
	void setIntegrationTime(int intTime);
	DoubleArray getIrradianceCalibrationFactors();
	void setIrradianceCalibrationFactors(DoubleArray& data);
	double getCollectionArea();
	short hasCollectionArea();
	void setCollectionArea(double area);
	void writeNonlinearityCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray readNonlinearityCoefficientsFromSpectrometer();
	void setNonlinearityCoefficients(CoefficientsArray& coefficients);
	CoefficientsArray getNonlinearityCoefficients();
	DoubleArray getNonlinearityCoefficientsSingleChannel(int channelIndex);
	void setNonlinearityCoefficientsSingleChannel(DoubleArray& nonlinearities, int channelIndex);
	void setStrobeEnable(short enable);
	int getSpectrumReadThrottleMilliseconds();
	void setSpectrumReadThrottleMilliseconds(int value);
	int getSocketTimeoutMilliseconds();
	void setSocketTimeoutMilliseconds(int value);
	short isCheckForBytesAvailableEnabled();
	void setCheckForBytesAvailable(short value);
	int getReadSpectrumRetryLimit();
	void setReadSpectrumRetryLimit(int value);
	CharArray readBenchID();
	void writeBenchID(CharArray& id);
	CharArray readBenchSerialNumber();
	void writeBenchSerialNumber(CharArray& sn);
	CharArray readDetectorSerialNumber();
	void writeDetectorSerialNumber(CharArray& sn);
	void writeSlitWidthMicrons(short microns);
	void writeFiberDiameterMicrons(short microns);
	CharArray readGrating();
	void writeGrating(CharArray& grating);
	CharArray readCoating();
	void writeCoating(CharArray& coating);
	CharArray readFilter();
	void writeFilter(CharArray& filter);
	GUIProviderArray getGUIFeatures();
	void connectToSource(JString& address, int port);
	short isConnected();
	void disconnect();
	void reconnect();
	CharArray queryDevice(int messageType, CharArray& payload);
	short sendCommandToDevice(int messageType, CharArray& payload);
	int getDarkValue();
	void setDarkValue(int value);
	double getSaturationValue();
	void setSaturationValue(double value);
	void recordSettings();
	CoefficientsArray getWavelengthCalibrationCoefficients();
	DoubleArray getWavelengths(int index);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& coefficients);
	void setWavelengths(DoubleArray& wavelengths, int index);
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	double getSingleStrobeCountsToMicros(int counts);
	int getSingleStrobeHigh();
	int getSingleStrobeIncrement();
	int getSingleStrobeLow();
	int getSingleStrobeMaximum();
	int getSingleStrobeMinimum();
	void setSingleStrobeHigh(int counts);
	void setSingleStrobeLow(int counts);
	double continuousStrobeCountsToMicros(int counts);
	int getContinuousStrobeDelayIncrement(int magnitude);
	int getContinuousStrobeDelayMaximum();
	int getContinuousStrobeDelayMinimum();
	void setContinuousStrobeDelay(int durationOfPhase);
	void setContinuousModeType(short mode);
	void setDelayAfterIntegration(int delay);
	short getContinuousModeType();
	int getDelayAfterIntegration();
	void setContinuousEnable(short value);
	short getContinuousEnable();
	BitSet getDirectionBits();
	BitSet getMuxBits();
	int getNumberOfPins();
	int getTotalGPIOBits();
	int getValueBit(int bitNumber);
	BitSet getValueBits();
	void setDirectionAllBits(BitSet& bitSet);
	void setDirectionBit(int bit, short value);
	void setDirectionBitmask(short bitmask);
	void setMuxAllBits(BitSet& bitSet);
	void setMuxBit(int bit, short value);
	void setMuxBitmask(short bitmask);
	void setValueAllBits(BitSet& bitSet);
	void setValueBit(int bit, short value);
	void setValueBitmask(short bitmask);
	void setExternalTriggerDelay(int counts);
	double triggerDelayCountsToMicroseconds(int counts);
	int getExternalTriggerDelayMinimum();
	int getExternalTriggerDelayMaximum();
	int getExternalTriggerDelayIncrement();
	void setExternalTriggerMode(int mode);
	ExternalTriggerModeArray getExternalTriggerModes();
	double getBoardTemperatureCelsius();
	double getDetectorTemperatureCelsius();
	void setOffsetCount(int baselineOffset);
	void setReferenceCount(int referenceCnt);
	int getReferenceCount();
	int getOffsetCount();
	OffsetConstraints getOffsetConstraints();
	ReferenceConstraints getReferenceConstraints();
	long long readClock();
	void writeClock(long long value);
	void setCurrentTime();
	int setI2CBytes(signed char address, signed char numBytes, CharArray& i2C);
	CharArray getI2CBytes(signed char address, signed char numBytes);
	CharArray getSPIBytes(CharArray& message, int length);
	void writeMACAddress(int iface, JString& address);
	JString readMACAddress(int iface);
	short runSelfTest(int iface);
	short isDHCPEnabled(int iface);
	void setDHCPEnable(int iface, short enable);
	IPv4SubnetAddress getIPv4Address(int iface, int addrIndex);
	void addIPv4Address(int iface, IPv4SubnetAddress& address);
	void removeIPv4Address(int iface, int addrIndex);
	IPv4Address getIPv4Gateway(int iface);
	void setIPv4Gateway(int iface, IPv4Address& address);
	short supportsMulticast();
	int getNumberOfInterfaces();
	short isInterfaceEnabled(int iface);
	void setInterfaceEnable(int iface, short enable);
	void saveSettings();
	short hasGigabitEnable();
	short isGigabitEnabled();
	void setGigabitEnable(short enable);
	WiFiSSID getSSID();
	void setSSID(WiFiSSID& id);
	JString getWiFiMode();
	void setWiFiMode(JString& mode);
	JString getWiFiSecurity();
	void setWiFiSecurity(JString& mode);
	void setWiFiPassphrase(WiFiPassphrase& passPhrase);
	short isDhcpServer();
	void setDhcpServer(short enable);
	IPv4SubnetAddress getDhcpBaseAddress();
	void setDhcpBaseAddress(IPv4SubnetAddress& address);
	int getNumberOfBuses();
	int getNumberOfChipSelects(int busIndex);
	int getMaxMasterFrequency(int busIndex);
	int getMaxSlaveFrequency(int busIndex);
	int getBusControllerMode(int busIndex);
	int getBusTransferMode(int busIndex, int chipIndex);
	int getPolarity(int busIndex, int chipIndex);
	int getChipSelectDelay(int busIndex);
	int getBusWaitStateDelay(int busIndex);
	void setClockSpeed(int busIndex, int speed);
	void setBusControllerMode(int busIndex, int busMode);
	void setBusTransferMode(int busIndex, int chipIndex, int transferMode);
	void setPolarity(int busIndex, int chipIndex, int polarity);
	void setChipSelectDelay(int busIndex, int delay);
	void setBusWaitStateDelay(int busIndex, int period);
	void saveSPISettings();
	short hasBattery();
	int getChargeLevel();
	short isCharging();
	double getBatteryTemperature();
	void chargeAccumulator();
	~NextGenNetwork();
	// No public default Java constructor; creating one:
	NextGenNetwork();
	// No public Java copy constructor; creating one:
	NextGenNetwork(const NextGenNetwork &that);
	// Creating assignment operator declaration:
	NextGenNetwork &operator=(const NextGenNetwork &that);

private:
	jmethodID mid_NextGenNetwork4517;
	jmethodID mid_NextGenNetwork4518;
	jmethodID mid_openSpectrometer4519;
	jmethodID mid_getActiveDevicePixelRanges4520;
	jmethodID mid_getODCPixelRanges4521;
	jmethodID mid_getEOCPixelRanges4522;
	jmethodID mid_getDarkArray4523;
	jmethodID mid_getFPGAFirmwareVersion4524;
	jmethodID mid_getPSOCVersion4525;
	jmethodID mid_getCpuVersion4526;
	jmethodID mid_getCpuSubVersion4527;
	jmethodID mid_getDetectorType4528;
	jmethodID mid_setDetectorType4529;
	jmethodID mid_setScansToAverage4530;
	jmethodID mid_getScansToAverage4531;
	jmethodID mid_getFirmwareVersion4532;
	jmethodID mid_getInfo4533;
	jmethodID mid_getInfoBytes4534;
	jmethodID mid_getStatusArray4535;
	jmethodID mid_initialize4536;
	jmethodID mid_setInfo4537;
	jmethodID mid_setInfoBytes4538;
	jmethodID mid_setIntegrationTime4539;
	jmethodID mid_getIrradianceCalibrationFactors4540;
	jmethodID mid_setIrradianceCalibrationFactors4541;
	jmethodID mid_getCollectionArea4542;
	jmethodID mid_hasCollectionArea4543;
	jmethodID mid_setCollectionArea4544;
	jmethodID mid_writeNonlinearityCoefficientsToSpectrometer4545;
	jmethodID mid_readNonlinearityCoefficientsFromSpectrometer4546;
	jmethodID mid_setNonlinearityCoefficients4547;
	jmethodID mid_getNonlinearityCoefficients4548;
	jmethodID mid_getNonlinearityCoefficientsSingleChannel4549;
	jmethodID mid_setNonlinearityCoefficientsSingleChannel4550;
	jmethodID mid_setStrobeEnable4551;
	jmethodID mid_getSpectrumReadThrottleMilliseconds4552;
	jmethodID mid_setSpectrumReadThrottleMilliseconds4553;
	jmethodID mid_getSocketTimeoutMilliseconds4554;
	jmethodID mid_setSocketTimeoutMilliseconds4555;
	jmethodID mid_isCheckForBytesAvailableEnabled4556;
	jmethodID mid_setCheckForBytesAvailable4557;
	jmethodID mid_getReadSpectrumRetryLimit4558;
	jmethodID mid_setReadSpectrumRetryLimit4559;
	jmethodID mid_readBenchID4560;
	jmethodID mid_writeBenchID4561;
	jmethodID mid_readBenchSerialNumber4562;
	jmethodID mid_writeBenchSerialNumber4563;
	jmethodID mid_readDetectorSerialNumber4564;
	jmethodID mid_writeDetectorSerialNumber4565;
	jmethodID mid_writeSlitWidthMicrons4566;
	jmethodID mid_writeFiberDiameterMicrons4567;
	jmethodID mid_readGrating4568;
	jmethodID mid_writeGrating4569;
	jmethodID mid_readCoating4570;
	jmethodID mid_writeCoating4571;
	jmethodID mid_readFilter4572;
	jmethodID mid_writeFilter4573;
	jmethodID mid_getGUIFeatures4574;
	jmethodID mid_connectToSource4575;
	jmethodID mid_isConnected4576;
	jmethodID mid_disconnect4577;
	jmethodID mid_reconnect4578;
	jmethodID mid_queryDevice4579;
	jmethodID mid_sendCommandToDevice4580;
	jmethodID mid_getDarkValue4581;
	jmethodID mid_setDarkValue4582;
	jmethodID mid_getSaturationValue4583;
	jmethodID mid_setSaturationValue4584;
	jmethodID mid_recordSettings4585;
	jmethodID mid_getWavelengthCalibrationCoefficients4586;
	jmethodID mid_getWavelengths4587;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer4588;
	jmethodID mid_setWavelengthCalibrationCoefficients4589;
	jmethodID mid_setWavelengths4590;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer4591;
	jmethodID mid_getSingleStrobeCountsToMicros4592;
	jmethodID mid_getSingleStrobeHigh4593;
	jmethodID mid_getSingleStrobeIncrement4594;
	jmethodID mid_getSingleStrobeLow4595;
	jmethodID mid_getSingleStrobeMaximum4596;
	jmethodID mid_getSingleStrobeMinimum4597;
	jmethodID mid_setSingleStrobeHigh4598;
	jmethodID mid_setSingleStrobeLow4599;
	jmethodID mid_continuousStrobeCountsToMicros4600;
	jmethodID mid_getContinuousStrobeDelayIncrement4601;
	jmethodID mid_getContinuousStrobeDelayMaximum4602;
	jmethodID mid_getContinuousStrobeDelayMinimum4603;
	jmethodID mid_setContinuousStrobeDelay4604;
	jmethodID mid_setContinuousModeType4605;
	jmethodID mid_setDelayAfterIntegration4606;
	jmethodID mid_getContinuousModeType4607;
	jmethodID mid_getDelayAfterIntegration4608;
	jmethodID mid_setContinuousEnable4609;
	jmethodID mid_getContinuousEnable4610;
	jmethodID mid_getDirectionBits4611;
	jmethodID mid_getMuxBits4612;
	jmethodID mid_getNumberOfPins4613;
	jmethodID mid_getTotalGPIOBits4614;
	jmethodID mid_getValueBit4615;
	jmethodID mid_getValueBits4616;
	jmethodID mid_setDirectionAllBits4617;
	jmethodID mid_setDirectionBit4618;
	jmethodID mid_setDirectionBitmask4619;
	jmethodID mid_setMuxAllBits4620;
	jmethodID mid_setMuxBit4621;
	jmethodID mid_setMuxBitmask4622;
	jmethodID mid_setValueAllBits4623;
	jmethodID mid_setValueBit4624;
	jmethodID mid_setValueBitmask4625;
	jmethodID mid_setExternalTriggerDelay4626;
	jmethodID mid_triggerDelayCountsToMicroseconds4627;
	jmethodID mid_getExternalTriggerDelayMinimum4628;
	jmethodID mid_getExternalTriggerDelayMaximum4629;
	jmethodID mid_getExternalTriggerDelayIncrement4630;
	jmethodID mid_setExternalTriggerMode4631;
	jmethodID mid_getExternalTriggerModes4632;
	jmethodID mid_getBoardTemperatureCelsius4633;
	jmethodID mid_getDetectorTemperatureCelsius4634;
	jmethodID mid_setOffsetCount4635;
	jmethodID mid_setReferenceCount4636;
	jmethodID mid_getReferenceCount4637;
	jmethodID mid_getOffsetCount4638;
	jmethodID mid_getOffsetConstraints4639;
	jmethodID mid_getReferenceConstraints4640;
	jmethodID mid_readClock4641;
	jmethodID mid_writeClock4642;
	jmethodID mid_setCurrentTime4643;
	jmethodID mid_setI2CBytes4644;
	jmethodID mid_getI2CBytes4645;
	jmethodID mid_getSPIBytes4646;
	jmethodID mid_writeMACAddress4647;
	jmethodID mid_readMACAddress4648;
	jmethodID mid_runSelfTest4649;
	jmethodID mid_isDHCPEnabled4650;
	jmethodID mid_setDHCPEnable4651;
	jmethodID mid_getIPv4Address4652;
	jmethodID mid_addIPv4Address4653;
	jmethodID mid_removeIPv4Address4654;
	jmethodID mid_getIPv4Gateway4655;
	jmethodID mid_setIPv4Gateway4656;
	jmethodID mid_supportsMulticast4657;
	jmethodID mid_getNumberOfInterfaces4658;
	jmethodID mid_isInterfaceEnabled4659;
	jmethodID mid_setInterfaceEnable4660;
	jmethodID mid_saveSettings4661;
	jmethodID mid_hasGigabitEnable4662;
	jmethodID mid_isGigabitEnabled4663;
	jmethodID mid_setGigabitEnable4664;
	jmethodID mid_getSSID4665;
	jmethodID mid_setSSID4666;
	jmethodID mid_getWiFiMode4667;
	jmethodID mid_setWiFiMode4668;
	jmethodID mid_getWiFiSecurity4669;
	jmethodID mid_setWiFiSecurity4670;
	jmethodID mid_setWiFiPassphrase4671;
	jmethodID mid_isDhcpServer4672;
	jmethodID mid_setDhcpServer4673;
	jmethodID mid_getDhcpBaseAddress4674;
	jmethodID mid_setDhcpBaseAddress4675;
	jmethodID mid_getNumberOfBuses4676;
	jmethodID mid_getNumberOfChipSelects4677;
	jmethodID mid_getMaxMasterFrequency4678;
	jmethodID mid_getMaxSlaveFrequency4679;
	jmethodID mid_getBusControllerMode4680;
	jmethodID mid_getBusTransferMode4681;
	jmethodID mid_getPolarity4682;
	jmethodID mid_getChipSelectDelay4683;
	jmethodID mid_getBusWaitStateDelay4684;
	jmethodID mid_setClockSpeed4685;
	jmethodID mid_setBusControllerMode4686;
	jmethodID mid_setBusTransferMode4687;
	jmethodID mid_setPolarity4688;
	jmethodID mid_setChipSelectDelay4689;
	jmethodID mid_setBusWaitStateDelay4690;
	jmethodID mid_saveSPISettings4691;
	jmethodID mid_hasBattery4692;
	jmethodID mid_getChargeLevel4693;
	jmethodID mid_isCharging4694;
	jmethodID mid_getBatteryTemperature4695;
	jmethodID mid_chargeAccumulator4696;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NETWORKSPECTROMETER_T
#define EXTERN_TYPEDEF_NETWORKSPECTROMETER_T
	typedef void* NETWORKSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_NETWORKSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_JSOCKET_T
#define EXTERN_TYPEDEF_JSOCKET_T
	typedef void* JSOCKET_T;
#endif /* EXTERN_TYPEDEF_JSOCKET_T */
#ifndef EXTERN_TYPEDEF_PIXELRANGE_T
#define EXTERN_TYPEDEF_PIXELRANGE_T
	typedef void* PIXELRANGE_T;
#endif /* EXTERN_TYPEDEF_PIXELRANGE_T */
#ifndef EXTERN_TYPEDEF_PIXELRANGEARRAY_T
#define EXTERN_TYPEDEF_PIXELRANGEARRAY_T
	typedef void* PIXELRANGEARRAY_T;
#endif /* EXTERN_TYPEDEF_PIXELRANGEARRAY_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_BITSET_T
#define EXTERN_TYPEDEF_BITSET_T
	typedef void* BITSET_T;
#endif /* EXTERN_TYPEDEF_BITSET_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_OFFSETCONSTRAINTS_T
#define EXTERN_TYPEDEF_OFFSETCONSTRAINTS_T
	typedef void* OFFSETCONSTRAINTS_T;
#endif /* EXTERN_TYPEDEF_OFFSETCONSTRAINTS_T */
#ifndef EXTERN_TYPEDEF_REFERENCECONSTRAINTS_T
#define EXTERN_TYPEDEF_REFERENCECONSTRAINTS_T
	typedef void* REFERENCECONSTRAINTS_T;
#endif /* EXTERN_TYPEDEF_REFERENCECONSTRAINTS_T */
#ifndef EXTERN_TYPEDEF_IPV4SUBNETADDRESS_T
#define EXTERN_TYPEDEF_IPV4SUBNETADDRESS_T
	typedef void* IPV4SUBNETADDRESS_T;
#endif /* EXTERN_TYPEDEF_IPV4SUBNETADDRESS_T */
#ifndef EXTERN_TYPEDEF_IPV4ADDRESS_T
#define EXTERN_TYPEDEF_IPV4ADDRESS_T
	typedef void* IPV4ADDRESS_T;
#endif /* EXTERN_TYPEDEF_IPV4ADDRESS_T */
#ifndef EXTERN_TYPEDEF_WIFISSID_T
#define EXTERN_TYPEDEF_WIFISSID_T
	typedef void* WIFISSID_T;
#endif /* EXTERN_TYPEDEF_WIFISSID_T */
#ifndef EXTERN_TYPEDEF_WIFIPASSPHRASE_T
#define EXTERN_TYPEDEF_WIFIPASSPHRASE_T
	typedef void* WIFIPASSPHRASE_T;
#endif /* EXTERN_TYPEDEF_WIFIPASSPHRASE_T */
#ifndef EXTERN_TYPEDEF_NEXTGENNETWORK_T
#define EXTERN_TYPEDEF_NEXTGENNETWORK_T
	typedef void* NEXTGENNETWORK_T;
#endif /* EXTERN_TYPEDEF_NEXTGENNETWORK_T */

	// No public default Java constructor; creating one:
	EXPORTED NEXTGENNETWORK_T NextGenNetwork_Create();
	EXPORTED NEXTGENNETWORK_T NextGenNetwork_Create_1(int i);
	EXPORTED NEXTGENNETWORK_T NextGenNetwork_Create_3(JSOCKET_T jSocket);
	EXPORTED void NextGenNetwork_openSpectrometer(NEXTGENNETWORK_T c_next_gen_network, int index);
	EXPORTED void NextGenNetwork_getActiveDevicePixelRanges(NEXTGENNETWORK_T c_next_gen_network, PIXELRANGE_T retval);
	EXPORTED void NextGenNetwork_getODCPixelRanges(NEXTGENNETWORK_T c_next_gen_network, PIXELRANGEARRAY_T retval);
	EXPORTED void NextGenNetwork_getEOCPixelRanges(NEXTGENNETWORK_T c_next_gen_network, PIXELRANGEARRAY_T retval);
	EXPORTED void NextGenNetwork_getDarkArray(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T retval);
	EXPORTED void NextGenNetwork_getFPGAFirmwareVersion(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void NextGenNetwork_getPSOCVersion(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void NextGenNetwork_getCpuVersion(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void NextGenNetwork_getCpuSubVersion(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED int NextGenNetwork_getDetectorType(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setDetectorType(NEXTGENNETWORK_T c_next_gen_network, int type);
	EXPORTED void NextGenNetwork_setScansToAverage(NEXTGENNETWORK_T c_next_gen_network, int scans);
	EXPORTED int NextGenNetwork_getScansToAverage(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_getFirmwareVersion(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void NextGenNetwork_getInfo(NEXTGENNETWORK_T c_next_gen_network, int slot, JSTRING_T retval);
	EXPORTED void NextGenNetwork_getInfoBytes(NEXTGENNETWORK_T c_next_gen_network, int slot, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_getStatusArray(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_initialize(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setInfo(NEXTGENNETWORK_T c_next_gen_network, int slot, JSTRING_T str);
	EXPORTED void NextGenNetwork_setInfoBytes(NEXTGENNETWORK_T c_next_gen_network, int slot, CHARARRAY_T byteArray);
	EXPORTED void NextGenNetwork_setIntegrationTime(NEXTGENNETWORK_T c_next_gen_network, int intTime);
	EXPORTED void NextGenNetwork_getIrradianceCalibrationFactors(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T retval);
	EXPORTED void NextGenNetwork_setIrradianceCalibrationFactors(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T data);
	EXPORTED double NextGenNetwork_getCollectionArea(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short NextGenNetwork_hasCollectionArea(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setCollectionArea(NEXTGENNETWORK_T c_next_gen_network, double area);
	EXPORTED void NextGenNetwork_writeNonlinearityCoefficientsToSpectrometer(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void NextGenNetwork_readNonlinearityCoefficientsFromSpectrometer(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void NextGenNetwork_setNonlinearityCoefficients(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void NextGenNetwork_getNonlinearityCoefficients(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void NextGenNetwork_getNonlinearityCoefficientsSingleChannel(NEXTGENNETWORK_T c_next_gen_network, int channelIndex, DOUBLEARRAY_T retval);
	EXPORTED void NextGenNetwork_setNonlinearityCoefficientsSingleChannel(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T nonlinearities, int channelIndex);
	EXPORTED void NextGenNetwork_setStrobeEnable(NEXTGENNETWORK_T c_next_gen_network, short enable);
	EXPORTED int NextGenNetwork_getSpectrumReadThrottleMilliseconds(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setSpectrumReadThrottleMilliseconds(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED int NextGenNetwork_getSocketTimeoutMilliseconds(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setSocketTimeoutMilliseconds(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED short NextGenNetwork_isCheckForBytesAvailableEnabled(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setCheckForBytesAvailable(NEXTGENNETWORK_T c_next_gen_network, short value);
	EXPORTED int NextGenNetwork_getReadSpectrumRetryLimit(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setReadSpectrumRetryLimit(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED void NextGenNetwork_readBenchID(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeBenchID(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T id);
	EXPORTED void NextGenNetwork_readBenchSerialNumber(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeBenchSerialNumber(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T sn);
	EXPORTED void NextGenNetwork_readDetectorSerialNumber(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeDetectorSerialNumber(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T sn);
	EXPORTED void NextGenNetwork_writeSlitWidthMicrons(NEXTGENNETWORK_T c_next_gen_network, short microns);
	EXPORTED void NextGenNetwork_writeFiberDiameterMicrons(NEXTGENNETWORK_T c_next_gen_network, short microns);
	EXPORTED void NextGenNetwork_readGrating(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeGrating(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T grating);
	EXPORTED void NextGenNetwork_readCoating(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeCoating(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T coating);
	EXPORTED void NextGenNetwork_readFilter(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeFilter(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T filter);
	EXPORTED void NextGenNetwork_getGUIFeatures(NEXTGENNETWORK_T c_next_gen_network, GUIPROVIDERARRAY_T retval);
	EXPORTED void NextGenNetwork_connectToSource(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T address, int port);
	EXPORTED short NextGenNetwork_isConnected(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_disconnect(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_reconnect(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_queryDevice(NEXTGENNETWORK_T c_next_gen_network, int messageType, CHARARRAY_T payload, CHARARRAY_T retval);
	EXPORTED short NextGenNetwork_sendCommandToDevice(NEXTGENNETWORK_T c_next_gen_network, int messageType, CHARARRAY_T payload);
	EXPORTED int NextGenNetwork_getDarkValue(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setDarkValue(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED double NextGenNetwork_getSaturationValue(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setSaturationValue(NEXTGENNETWORK_T c_next_gen_network, double value);
	EXPORTED void NextGenNetwork_recordSettings(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_getWavelengthCalibrationCoefficients(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void NextGenNetwork_getWavelengths(NEXTGENNETWORK_T c_next_gen_network, int index, DOUBLEARRAY_T retval);
	EXPORTED void NextGenNetwork_readWavelengthCalibrationCoefficientsFromSpectrometer(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void NextGenNetwork_setWavelengthCalibrationCoefficients(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void NextGenNetwork_setWavelengths(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T wavelengths, int index);
	EXPORTED void NextGenNetwork_writeWavelengthCoefficientsToSpectrometer(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED double NextGenNetwork_getSingleStrobeCountsToMicros(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED int NextGenNetwork_getSingleStrobeHigh(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getSingleStrobeIncrement(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getSingleStrobeLow(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getSingleStrobeMaximum(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getSingleStrobeMinimum(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setSingleStrobeHigh(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED void NextGenNetwork_setSingleStrobeLow(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED double NextGenNetwork_continuousStrobeCountsToMicros(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED int NextGenNetwork_getContinuousStrobeDelayIncrement(NEXTGENNETWORK_T c_next_gen_network, int magnitude);
	EXPORTED int NextGenNetwork_getContinuousStrobeDelayMaximum(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getContinuousStrobeDelayMinimum(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setContinuousStrobeDelay(NEXTGENNETWORK_T c_next_gen_network, int durationOfPhase);
	EXPORTED void NextGenNetwork_setContinuousModeType(NEXTGENNETWORK_T c_next_gen_network, short mode);
	EXPORTED void NextGenNetwork_setDelayAfterIntegration(NEXTGENNETWORK_T c_next_gen_network, int delay);
	EXPORTED short NextGenNetwork_getContinuousModeType(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getDelayAfterIntegration(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setContinuousEnable(NEXTGENNETWORK_T c_next_gen_network, short value);
	EXPORTED short NextGenNetwork_getContinuousEnable(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_getDirectionBits(NEXTGENNETWORK_T c_next_gen_network, BITSET_T retval);
	EXPORTED void NextGenNetwork_getMuxBits(NEXTGENNETWORK_T c_next_gen_network, BITSET_T retval);
	EXPORTED int NextGenNetwork_getNumberOfPins(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getTotalGPIOBits(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getValueBit(NEXTGENNETWORK_T c_next_gen_network, int bitNumber);
	EXPORTED void NextGenNetwork_getValueBits(NEXTGENNETWORK_T c_next_gen_network, BITSET_T retval);
	EXPORTED void NextGenNetwork_setDirectionAllBits(NEXTGENNETWORK_T c_next_gen_network, BITSET_T bitSet);
	EXPORTED void NextGenNetwork_setDirectionBit(NEXTGENNETWORK_T c_next_gen_network, int bit, short value);
	EXPORTED void NextGenNetwork_setDirectionBitmask(NEXTGENNETWORK_T c_next_gen_network, short bitmask);
	EXPORTED void NextGenNetwork_setMuxAllBits(NEXTGENNETWORK_T c_next_gen_network, BITSET_T bitSet);
	EXPORTED void NextGenNetwork_setMuxBit(NEXTGENNETWORK_T c_next_gen_network, int bit, short value);
	EXPORTED void NextGenNetwork_setMuxBitmask(NEXTGENNETWORK_T c_next_gen_network, short bitmask);
	EXPORTED void NextGenNetwork_setValueAllBits(NEXTGENNETWORK_T c_next_gen_network, BITSET_T bitSet);
	EXPORTED void NextGenNetwork_setValueBit(NEXTGENNETWORK_T c_next_gen_network, int bit, short value);
	EXPORTED void NextGenNetwork_setValueBitmask(NEXTGENNETWORK_T c_next_gen_network, short bitmask);
	EXPORTED void NextGenNetwork_setExternalTriggerDelay(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED double NextGenNetwork_triggerDelayCountsToMicroseconds(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED int NextGenNetwork_getExternalTriggerDelayMinimum(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getExternalTriggerDelayMaximum(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getExternalTriggerDelayIncrement(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setExternalTriggerMode(NEXTGENNETWORK_T c_next_gen_network, int mode);
	EXPORTED void NextGenNetwork_getExternalTriggerModes(NEXTGENNETWORK_T c_next_gen_network, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED double NextGenNetwork_getBoardTemperatureCelsius(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED double NextGenNetwork_getDetectorTemperatureCelsius(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setOffsetCount(NEXTGENNETWORK_T c_next_gen_network, int baselineOffset);
	EXPORTED void NextGenNetwork_setReferenceCount(NEXTGENNETWORK_T c_next_gen_network, int referenceCnt);
	EXPORTED int NextGenNetwork_getReferenceCount(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getOffsetCount(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_getOffsetConstraints(NEXTGENNETWORK_T c_next_gen_network, OFFSETCONSTRAINTS_T retval);
	EXPORTED void NextGenNetwork_getReferenceConstraints(NEXTGENNETWORK_T c_next_gen_network, REFERENCECONSTRAINTS_T retval);
	EXPORTED long long NextGenNetwork_readClock(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_writeClock(NEXTGENNETWORK_T c_next_gen_network, long long value);
	EXPORTED void NextGenNetwork_setCurrentTime(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_setI2CBytes(NEXTGENNETWORK_T c_next_gen_network, signed char address, signed char numBytes, CHARARRAY_T i2C);
	EXPORTED void NextGenNetwork_getI2CBytes(NEXTGENNETWORK_T c_next_gen_network, signed char address, signed char numBytes, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_getSPIBytes(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void NextGenNetwork_writeMACAddress(NEXTGENNETWORK_T c_next_gen_network, int iface, JSTRING_T address);
	EXPORTED void NextGenNetwork_readMACAddress(NEXTGENNETWORK_T c_next_gen_network, int iface, JSTRING_T retval);
	EXPORTED short NextGenNetwork_runSelfTest(NEXTGENNETWORK_T c_next_gen_network, int iface);
	EXPORTED short NextGenNetwork_isDHCPEnabled(NEXTGENNETWORK_T c_next_gen_network, int iface);
	EXPORTED void NextGenNetwork_setDHCPEnable(NEXTGENNETWORK_T c_next_gen_network, int iface, short enable);
	EXPORTED void NextGenNetwork_getIPv4Address(NEXTGENNETWORK_T c_next_gen_network, int iface, int addrIndex, IPV4SUBNETADDRESS_T retval);
	EXPORTED void NextGenNetwork_addIPv4Address(NEXTGENNETWORK_T c_next_gen_network, int iface, IPV4SUBNETADDRESS_T address);
	EXPORTED void NextGenNetwork_removeIPv4Address(NEXTGENNETWORK_T c_next_gen_network, int iface, int addrIndex);
	EXPORTED void NextGenNetwork_getIPv4Gateway(NEXTGENNETWORK_T c_next_gen_network, int iface, IPV4ADDRESS_T retval);
	EXPORTED void NextGenNetwork_setIPv4Gateway(NEXTGENNETWORK_T c_next_gen_network, int iface, IPV4ADDRESS_T address);
	EXPORTED short NextGenNetwork_supportsMulticast(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getNumberOfInterfaces(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short NextGenNetwork_isInterfaceEnabled(NEXTGENNETWORK_T c_next_gen_network, int iface);
	EXPORTED void NextGenNetwork_setInterfaceEnable(NEXTGENNETWORK_T c_next_gen_network, int iface, short enable);
	EXPORTED void NextGenNetwork_saveSettings(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short NextGenNetwork_hasGigabitEnable(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short NextGenNetwork_isGigabitEnabled(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setGigabitEnable(NEXTGENNETWORK_T c_next_gen_network, short enable);
	EXPORTED void NextGenNetwork_getSSID(NEXTGENNETWORK_T c_next_gen_network, WIFISSID_T retval);
	EXPORTED void NextGenNetwork_setSSID(NEXTGENNETWORK_T c_next_gen_network, WIFISSID_T id);
	EXPORTED void NextGenNetwork_getWiFiMode(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void NextGenNetwork_setWiFiMode(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T mode);
	EXPORTED void NextGenNetwork_getWiFiSecurity(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void NextGenNetwork_setWiFiSecurity(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T mode);
	EXPORTED void NextGenNetwork_setWiFiPassphrase(NEXTGENNETWORK_T c_next_gen_network, WIFIPASSPHRASE_T passPhrase);
	EXPORTED short NextGenNetwork_isDhcpServer(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_setDhcpServer(NEXTGENNETWORK_T c_next_gen_network, short enable);
	EXPORTED void NextGenNetwork_getDhcpBaseAddress(NEXTGENNETWORK_T c_next_gen_network, IPV4SUBNETADDRESS_T retval);
	EXPORTED void NextGenNetwork_setDhcpBaseAddress(NEXTGENNETWORK_T c_next_gen_network, IPV4SUBNETADDRESS_T address);
	EXPORTED int NextGenNetwork_getNumberOfBuses(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getNumberOfChipSelects(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int NextGenNetwork_getMaxMasterFrequency(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int NextGenNetwork_getMaxSlaveFrequency(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int NextGenNetwork_getBusControllerMode(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int NextGenNetwork_getBusTransferMode(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex);
	EXPORTED int NextGenNetwork_getPolarity(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex);
	EXPORTED int NextGenNetwork_getChipSelectDelay(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int NextGenNetwork_getBusWaitStateDelay(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED void NextGenNetwork_setClockSpeed(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int speed);
	EXPORTED void NextGenNetwork_setBusControllerMode(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int busMode);
	EXPORTED void NextGenNetwork_setBusTransferMode(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex, int transferMode);
	EXPORTED void NextGenNetwork_setPolarity(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex, int polarity);
	EXPORTED void NextGenNetwork_setChipSelectDelay(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int delay);
	EXPORTED void NextGenNetwork_setBusWaitStateDelay(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int period);
	EXPORTED void NextGenNetwork_saveSPISettings(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short NextGenNetwork_hasBattery(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int NextGenNetwork_getChargeLevel(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short NextGenNetwork_isCharging(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED double NextGenNetwork_getBatteryTemperature(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_chargeAccumulator(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void NextGenNetwork_Destroy(NEXTGENNETWORK_T next_gen_network);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED NEXTGENNETWORK_T STDCALL NextGenNetwork_Create_stdcall_1(int i);
	EXPORTED NEXTGENNETWORK_T STDCALL NextGenNetwork_Create_stdcall_3(JSOCKET_T jSocket);
	EXPORTED void STDCALL NextGenNetwork_openSpectrometer_stdcall(NEXTGENNETWORK_T c_next_gen_network, int index);
	EXPORTED void STDCALL NextGenNetwork_getActiveDevicePixelRanges_stdcall(NEXTGENNETWORK_T c_next_gen_network, PIXELRANGE_T retval);
	EXPORTED void STDCALL NextGenNetwork_getODCPixelRanges_stdcall(NEXTGENNETWORK_T c_next_gen_network, PIXELRANGEARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getEOCPixelRanges_stdcall(NEXTGENNETWORK_T c_next_gen_network, PIXELRANGEARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getDarkArray_stdcall(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getFPGAFirmwareVersion_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_getPSOCVersion_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_getCpuVersion_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_getCpuSubVersion_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED int STDCALL NextGenNetwork_getDetectorType_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setDetectorType_stdcall(NEXTGENNETWORK_T c_next_gen_network, int type);
	EXPORTED void STDCALL NextGenNetwork_setScansToAverage_stdcall(NEXTGENNETWORK_T c_next_gen_network, int scans);
	EXPORTED int STDCALL NextGenNetwork_getScansToAverage_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_getFirmwareVersion_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_getInfo_stdcall(NEXTGENNETWORK_T c_next_gen_network, int slot, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_getInfoBytes_stdcall(NEXTGENNETWORK_T c_next_gen_network, int slot, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getStatusArray_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_initialize_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setInfo_stdcall(NEXTGENNETWORK_T c_next_gen_network, int slot, JSTRING_T str);
	EXPORTED void STDCALL NextGenNetwork_setInfoBytes_stdcall(NEXTGENNETWORK_T c_next_gen_network, int slot, CHARARRAY_T byteArray);
	EXPORTED void STDCALL NextGenNetwork_setIntegrationTime_stdcall(NEXTGENNETWORK_T c_next_gen_network, int intTime);
	EXPORTED void STDCALL NextGenNetwork_getIrradianceCalibrationFactors_stdcall(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_setIrradianceCalibrationFactors_stdcall(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T data);
	EXPORTED double STDCALL NextGenNetwork_getCollectionArea_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short STDCALL NextGenNetwork_hasCollectionArea_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setCollectionArea_stdcall(NEXTGENNETWORK_T c_next_gen_network, double area);
	EXPORTED void STDCALL NextGenNetwork_writeNonlinearityCoefficientsToSpectrometer_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL NextGenNetwork_readNonlinearityCoefficientsFromSpectrometer_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_setNonlinearityCoefficients_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL NextGenNetwork_getNonlinearityCoefficients_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getNonlinearityCoefficientsSingleChannel_stdcall(NEXTGENNETWORK_T c_next_gen_network, int channelIndex, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_setNonlinearityCoefficientsSingleChannel_stdcall(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T nonlinearities, int channelIndex);
	EXPORTED void STDCALL NextGenNetwork_setStrobeEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network, short enable);
	EXPORTED int STDCALL NextGenNetwork_getSpectrumReadThrottleMilliseconds_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setSpectrumReadThrottleMilliseconds_stdcall(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED int STDCALL NextGenNetwork_getSocketTimeoutMilliseconds_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setSocketTimeoutMilliseconds_stdcall(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED short STDCALL NextGenNetwork_isCheckForBytesAvailableEnabled_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setCheckForBytesAvailable_stdcall(NEXTGENNETWORK_T c_next_gen_network, short value);
	EXPORTED int STDCALL NextGenNetwork_getReadSpectrumRetryLimit_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setReadSpectrumRetryLimit_stdcall(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED void STDCALL NextGenNetwork_readBenchID_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeBenchID_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T id);
	EXPORTED void STDCALL NextGenNetwork_readBenchSerialNumber_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeBenchSerialNumber_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T sn);
	EXPORTED void STDCALL NextGenNetwork_readDetectorSerialNumber_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeDetectorSerialNumber_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T sn);
	EXPORTED void STDCALL NextGenNetwork_writeSlitWidthMicrons_stdcall(NEXTGENNETWORK_T c_next_gen_network, short microns);
	EXPORTED void STDCALL NextGenNetwork_writeFiberDiameterMicrons_stdcall(NEXTGENNETWORK_T c_next_gen_network, short microns);
	EXPORTED void STDCALL NextGenNetwork_readGrating_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeGrating_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T grating);
	EXPORTED void STDCALL NextGenNetwork_readCoating_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeCoating_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T coating);
	EXPORTED void STDCALL NextGenNetwork_readFilter_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeFilter_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T filter);
	EXPORTED void STDCALL NextGenNetwork_getGUIFeatures_stdcall(NEXTGENNETWORK_T c_next_gen_network, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_connectToSource_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T address, int port);
	EXPORTED short STDCALL NextGenNetwork_isConnected_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_disconnect_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_reconnect_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_queryDevice_stdcall(NEXTGENNETWORK_T c_next_gen_network, int messageType, CHARARRAY_T payload, CHARARRAY_T retval);
	EXPORTED short STDCALL NextGenNetwork_sendCommandToDevice_stdcall(NEXTGENNETWORK_T c_next_gen_network, int messageType, CHARARRAY_T payload);
	EXPORTED int STDCALL NextGenNetwork_getDarkValue_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setDarkValue_stdcall(NEXTGENNETWORK_T c_next_gen_network, int value);
	EXPORTED double STDCALL NextGenNetwork_getSaturationValue_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setSaturationValue_stdcall(NEXTGENNETWORK_T c_next_gen_network, double value);
	EXPORTED void STDCALL NextGenNetwork_recordSettings_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_getWavelengthCalibrationCoefficients_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getWavelengths_stdcall(NEXTGENNETWORK_T c_next_gen_network, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_setWavelengthCalibrationCoefficients_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL NextGenNetwork_setWavelengths_stdcall(NEXTGENNETWORK_T c_next_gen_network, DOUBLEARRAY_T wavelengths, int index);
	EXPORTED void STDCALL NextGenNetwork_writeWavelengthCoefficientsToSpectrometer_stdcall(NEXTGENNETWORK_T c_next_gen_network, COEFFICIENTSARRAY_T coefficients);
	EXPORTED double STDCALL NextGenNetwork_getSingleStrobeCountsToMicros_stdcall(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED int STDCALL NextGenNetwork_getSingleStrobeHigh_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getSingleStrobeIncrement_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getSingleStrobeLow_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getSingleStrobeMaximum_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getSingleStrobeMinimum_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setSingleStrobeHigh_stdcall(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED void STDCALL NextGenNetwork_setSingleStrobeLow_stdcall(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED double STDCALL NextGenNetwork_continuousStrobeCountsToMicros_stdcall(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED int STDCALL NextGenNetwork_getContinuousStrobeDelayIncrement_stdcall(NEXTGENNETWORK_T c_next_gen_network, int magnitude);
	EXPORTED int STDCALL NextGenNetwork_getContinuousStrobeDelayMaximum_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getContinuousStrobeDelayMinimum_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setContinuousStrobeDelay_stdcall(NEXTGENNETWORK_T c_next_gen_network, int durationOfPhase);
	EXPORTED void STDCALL NextGenNetwork_setContinuousModeType_stdcall(NEXTGENNETWORK_T c_next_gen_network, short mode);
	EXPORTED void STDCALL NextGenNetwork_setDelayAfterIntegration_stdcall(NEXTGENNETWORK_T c_next_gen_network, int delay);
	EXPORTED short STDCALL NextGenNetwork_getContinuousModeType_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getDelayAfterIntegration_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setContinuousEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network, short value);
	EXPORTED short STDCALL NextGenNetwork_getContinuousEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_getDirectionBits_stdcall(NEXTGENNETWORK_T c_next_gen_network, BITSET_T retval);
	EXPORTED void STDCALL NextGenNetwork_getMuxBits_stdcall(NEXTGENNETWORK_T c_next_gen_network, BITSET_T retval);
	EXPORTED int STDCALL NextGenNetwork_getNumberOfPins_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getTotalGPIOBits_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getValueBit_stdcall(NEXTGENNETWORK_T c_next_gen_network, int bitNumber);
	EXPORTED void STDCALL NextGenNetwork_getValueBits_stdcall(NEXTGENNETWORK_T c_next_gen_network, BITSET_T retval);
	EXPORTED void STDCALL NextGenNetwork_setDirectionAllBits_stdcall(NEXTGENNETWORK_T c_next_gen_network, BITSET_T bitSet);
	EXPORTED void STDCALL NextGenNetwork_setDirectionBit_stdcall(NEXTGENNETWORK_T c_next_gen_network, int bit, short value);
	EXPORTED void STDCALL NextGenNetwork_setDirectionBitmask_stdcall(NEXTGENNETWORK_T c_next_gen_network, short bitmask);
	EXPORTED void STDCALL NextGenNetwork_setMuxAllBits_stdcall(NEXTGENNETWORK_T c_next_gen_network, BITSET_T bitSet);
	EXPORTED void STDCALL NextGenNetwork_setMuxBit_stdcall(NEXTGENNETWORK_T c_next_gen_network, int bit, short value);
	EXPORTED void STDCALL NextGenNetwork_setMuxBitmask_stdcall(NEXTGENNETWORK_T c_next_gen_network, short bitmask);
	EXPORTED void STDCALL NextGenNetwork_setValueAllBits_stdcall(NEXTGENNETWORK_T c_next_gen_network, BITSET_T bitSet);
	EXPORTED void STDCALL NextGenNetwork_setValueBit_stdcall(NEXTGENNETWORK_T c_next_gen_network, int bit, short value);
	EXPORTED void STDCALL NextGenNetwork_setValueBitmask_stdcall(NEXTGENNETWORK_T c_next_gen_network, short bitmask);
	EXPORTED void STDCALL NextGenNetwork_setExternalTriggerDelay_stdcall(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED double STDCALL NextGenNetwork_triggerDelayCountsToMicroseconds_stdcall(NEXTGENNETWORK_T c_next_gen_network, int counts);
	EXPORTED int STDCALL NextGenNetwork_getExternalTriggerDelayMinimum_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getExternalTriggerDelayMaximum_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getExternalTriggerDelayIncrement_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setExternalTriggerMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, int mode);
	EXPORTED void STDCALL NextGenNetwork_getExternalTriggerModes_stdcall(NEXTGENNETWORK_T c_next_gen_network, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED double STDCALL NextGenNetwork_getBoardTemperatureCelsius_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED double STDCALL NextGenNetwork_getDetectorTemperatureCelsius_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setOffsetCount_stdcall(NEXTGENNETWORK_T c_next_gen_network, int baselineOffset);
	EXPORTED void STDCALL NextGenNetwork_setReferenceCount_stdcall(NEXTGENNETWORK_T c_next_gen_network, int referenceCnt);
	EXPORTED int STDCALL NextGenNetwork_getReferenceCount_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getOffsetCount_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_getOffsetConstraints_stdcall(NEXTGENNETWORK_T c_next_gen_network, OFFSETCONSTRAINTS_T retval);
	EXPORTED void STDCALL NextGenNetwork_getReferenceConstraints_stdcall(NEXTGENNETWORK_T c_next_gen_network, REFERENCECONSTRAINTS_T retval);
	EXPORTED long long STDCALL NextGenNetwork_readClock_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_writeClock_stdcall(NEXTGENNETWORK_T c_next_gen_network, long long value);
	EXPORTED void STDCALL NextGenNetwork_setCurrentTime_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_setI2CBytes_stdcall(NEXTGENNETWORK_T c_next_gen_network, signed char address, signed char numBytes, CHARARRAY_T i2C);
	EXPORTED void STDCALL NextGenNetwork_getI2CBytes_stdcall(NEXTGENNETWORK_T c_next_gen_network, signed char address, signed char numBytes, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_getSPIBytes_stdcall(NEXTGENNETWORK_T c_next_gen_network, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void STDCALL NextGenNetwork_writeMACAddress_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, JSTRING_T address);
	EXPORTED void STDCALL NextGenNetwork_readMACAddress_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, JSTRING_T retval);
	EXPORTED short STDCALL NextGenNetwork_runSelfTest_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface);
	EXPORTED short STDCALL NextGenNetwork_isDHCPEnabled_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface);
	EXPORTED void STDCALL NextGenNetwork_setDHCPEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, short enable);
	EXPORTED void STDCALL NextGenNetwork_getIPv4Address_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, int addrIndex, IPV4SUBNETADDRESS_T retval);
	EXPORTED void STDCALL NextGenNetwork_addIPv4Address_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, IPV4SUBNETADDRESS_T address);
	EXPORTED void STDCALL NextGenNetwork_removeIPv4Address_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, int addrIndex);
	EXPORTED void STDCALL NextGenNetwork_getIPv4Gateway_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, IPV4ADDRESS_T retval);
	EXPORTED void STDCALL NextGenNetwork_setIPv4Gateway_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, IPV4ADDRESS_T address);
	EXPORTED short STDCALL NextGenNetwork_supportsMulticast_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getNumberOfInterfaces_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short STDCALL NextGenNetwork_isInterfaceEnabled_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface);
	EXPORTED void STDCALL NextGenNetwork_setInterfaceEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network, int iface, short enable);
	EXPORTED void STDCALL NextGenNetwork_saveSettings_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short STDCALL NextGenNetwork_hasGigabitEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short STDCALL NextGenNetwork_isGigabitEnabled_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setGigabitEnable_stdcall(NEXTGENNETWORK_T c_next_gen_network, short enable);
	EXPORTED void STDCALL NextGenNetwork_getSSID_stdcall(NEXTGENNETWORK_T c_next_gen_network, WIFISSID_T retval);
	EXPORTED void STDCALL NextGenNetwork_setSSID_stdcall(NEXTGENNETWORK_T c_next_gen_network, WIFISSID_T id);
	EXPORTED void STDCALL NextGenNetwork_getWiFiMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_setWiFiMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T mode);
	EXPORTED void STDCALL NextGenNetwork_getWiFiSecurity_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T retval);
	EXPORTED void STDCALL NextGenNetwork_setWiFiSecurity_stdcall(NEXTGENNETWORK_T c_next_gen_network, JSTRING_T mode);
	EXPORTED void STDCALL NextGenNetwork_setWiFiPassphrase_stdcall(NEXTGENNETWORK_T c_next_gen_network, WIFIPASSPHRASE_T passPhrase);
	EXPORTED short STDCALL NextGenNetwork_isDhcpServer_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_setDhcpServer_stdcall(NEXTGENNETWORK_T c_next_gen_network, short enable);
	EXPORTED void STDCALL NextGenNetwork_getDhcpBaseAddress_stdcall(NEXTGENNETWORK_T c_next_gen_network, IPV4SUBNETADDRESS_T retval);
	EXPORTED void STDCALL NextGenNetwork_setDhcpBaseAddress_stdcall(NEXTGENNETWORK_T c_next_gen_network, IPV4SUBNETADDRESS_T address);
	EXPORTED int STDCALL NextGenNetwork_getNumberOfBuses_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getNumberOfChipSelects_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int STDCALL NextGenNetwork_getMaxMasterFrequency_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int STDCALL NextGenNetwork_getMaxSlaveFrequency_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int STDCALL NextGenNetwork_getBusControllerMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int STDCALL NextGenNetwork_getBusTransferMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex);
	EXPORTED int STDCALL NextGenNetwork_getPolarity_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex);
	EXPORTED int STDCALL NextGenNetwork_getChipSelectDelay_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED int STDCALL NextGenNetwork_getBusWaitStateDelay_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex);
	EXPORTED void STDCALL NextGenNetwork_setClockSpeed_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int speed);
	EXPORTED void STDCALL NextGenNetwork_setBusControllerMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int busMode);
	EXPORTED void STDCALL NextGenNetwork_setBusTransferMode_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex, int transferMode);
	EXPORTED void STDCALL NextGenNetwork_setPolarity_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int chipIndex, int polarity);
	EXPORTED void STDCALL NextGenNetwork_setChipSelectDelay_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int delay);
	EXPORTED void STDCALL NextGenNetwork_setBusWaitStateDelay_stdcall(NEXTGENNETWORK_T c_next_gen_network, int busIndex, int period);
	EXPORTED void STDCALL NextGenNetwork_saveSPISettings_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short STDCALL NextGenNetwork_hasBattery_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED int STDCALL NextGenNetwork_getChargeLevel_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED short STDCALL NextGenNetwork_isCharging_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED double STDCALL NextGenNetwork_getBatteryTemperature_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_chargeAccumulator_stdcall(NEXTGENNETWORK_T c_next_gen_network);
	EXPORTED void STDCALL NextGenNetwork_Destroy_stdcall(NEXTGENNETWORK_T next_gen_network);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* NEXTGENNETWORK_H */
