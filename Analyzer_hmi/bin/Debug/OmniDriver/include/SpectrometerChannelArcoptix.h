/**
 * File: SpectrometerChannelArcoptix.h
 * Autogenerated on Fri Mar 23 13:38:50 EDT 2018 based on
 * SpectrometerChannelArcoptix.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/arcoptix/SpectrometerChannelArcoptix
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTROMETERCHANNELARCOPTIX_H
#define SPECTROMETERCHANNELARCOPTIX_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerChannel.h"
#include "Spectrometer.h"
#include "ArcoptixTransport.h"
#include "Coefficients.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerChannel;
class Spectrometer;
class ArcoptixTransport;
class Coefficients;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SpectrometerChannelArcoptix : public SpectrometerChannel // CPPClass.tag001
{
public: 
	SpectrometerChannelArcoptix(Spectrometer& spectrometer, ArcoptixTransport& transport, Coefficients& coefficients, int index);
	double getWavelength(int pixelIndex);
	~SpectrometerChannelArcoptix();
	// No public default Java constructor; creating one:
	SpectrometerChannelArcoptix();
	// No public Java copy constructor; creating one:
	SpectrometerChannelArcoptix(const SpectrometerChannelArcoptix &that);
	// Creating assignment operator declaration:
	SpectrometerChannelArcoptix &operator=(const SpectrometerChannelArcoptix &that);

private:
	jmethodID mid_SpectrometerChannelArcoptix3282;
	jmethodID mid_getWavelength3283;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
	typedef void* SPECTROMETERCHANNEL_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_ARCOPTIXTRANSPORT_T
#define EXTERN_TYPEDEF_ARCOPTIXTRANSPORT_T
	typedef void* ARCOPTIXTRANSPORT_T;
#endif /* EXTERN_TYPEDEF_ARCOPTIXTRANSPORT_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTS_T
#define EXTERN_TYPEDEF_COEFFICIENTS_T
	typedef void* COEFFICIENTS_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTS_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELARCOPTIX_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELARCOPTIX_T
	typedef void* SPECTROMETERCHANNELARCOPTIX_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELARCOPTIX_T */

	// No public default Java constructor; creating one:
	EXPORTED SPECTROMETERCHANNELARCOPTIX_T SpectrometerChannelArcoptix_Create();
	EXPORTED SPECTROMETERCHANNELARCOPTIX_T SpectrometerChannelArcoptix_Create_1(SPECTROMETER_T spectrometer, ARCOPTIXTRANSPORT_T transport, COEFFICIENTS_T coefficients, int index);
	EXPORTED double SpectrometerChannelArcoptix_getWavelength(SPECTROMETERCHANNELARCOPTIX_T c_spectrometer_channel_arcoptix, int pixelIndex);
	EXPORTED void SpectrometerChannelArcoptix_Destroy(SPECTROMETERCHANNELARCOPTIX_T spectrometer_channel_arcoptix);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SPECTROMETERCHANNELARCOPTIX_T STDCALL SpectrometerChannelArcoptix_Create_stdcall_1(SPECTROMETER_T spectrometer, ARCOPTIXTRANSPORT_T transport, COEFFICIENTS_T coefficients, int index);
	EXPORTED double STDCALL SpectrometerChannelArcoptix_getWavelength_stdcall(SPECTROMETERCHANNELARCOPTIX_T c_spectrometer_channel_arcoptix, int pixelIndex);
	EXPORTED void STDCALL SpectrometerChannelArcoptix_Destroy_stdcall(SPECTROMETERCHANNELARCOPTIX_T spectrometer_channel_arcoptix);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTROMETERCHANNELARCOPTIX_H */
