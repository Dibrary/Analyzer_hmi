/**
 * File: InternalTrigger.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * InternalTrigger.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/internaltrigger/InternalTrigger
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INTERNALTRIGGER_H
#define INTERNALTRIGGER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "TriggerSource.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class TriggerSource;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED InternalTrigger : public BaseJavaClass // CPPClass.tag001
{
public: 
	void setInternalTriggerPeriodMicros(int param0);
	int getInternalTriggerPeriodMinimum();
	int getInternalTriggerPeriodMaximum();
	int getInternalTriggerPeriodIncrement();
	void setTriggerSource(TriggerSource& param0);
	TriggerSource getTriggerSource();
	~InternalTrigger();
	// No public default Java constructor; creating one:
	InternalTrigger();
	// No public Java copy constructor; creating one:
	InternalTrigger(const InternalTrigger &that);
	// Creating assignment operator declaration:
	InternalTrigger &operator=(const InternalTrigger &that);

private:
	jmethodID mid_setInternalTriggerPeriodMicros1576;
	jmethodID mid_getInternalTriggerPeriodMinimum1577;
	jmethodID mid_getInternalTriggerPeriodMaximum1578;
	jmethodID mid_getInternalTriggerPeriodIncrement1579;
	jmethodID mid_setTriggerSource1580;
	jmethodID mid_getTriggerSource1581;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_TRIGGERSOURCE_T
#define EXTERN_TYPEDEF_TRIGGERSOURCE_T
	typedef void* TRIGGERSOURCE_T;
#endif /* EXTERN_TYPEDEF_TRIGGERSOURCE_T */
#ifndef EXTERN_TYPEDEF_INTERNALTRIGGER_T
#define EXTERN_TYPEDEF_INTERNALTRIGGER_T
	typedef void* INTERNALTRIGGER_T;
#endif /* EXTERN_TYPEDEF_INTERNALTRIGGER_T */

	// No public default Java constructor; creating one:
	EXPORTED INTERNALTRIGGER_T InternalTrigger_Create();
	EXPORTED void InternalTrigger_setInternalTriggerPeriodMicros(INTERNALTRIGGER_T c_internal_trigger, int param0);
	EXPORTED int InternalTrigger_getInternalTriggerPeriodMinimum(INTERNALTRIGGER_T c_internal_trigger);
	EXPORTED int InternalTrigger_getInternalTriggerPeriodMaximum(INTERNALTRIGGER_T c_internal_trigger);
	EXPORTED int InternalTrigger_getInternalTriggerPeriodIncrement(INTERNALTRIGGER_T c_internal_trigger);
	EXPORTED void InternalTrigger_setTriggerSource(INTERNALTRIGGER_T c_internal_trigger, TRIGGERSOURCE_T param0);
	EXPORTED void InternalTrigger_getTriggerSource(INTERNALTRIGGER_T c_internal_trigger, TRIGGERSOURCE_T retval);
	EXPORTED void InternalTrigger_Destroy(INTERNALTRIGGER_T internal_trigger);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL InternalTrigger_setInternalTriggerPeriodMicros_stdcall(INTERNALTRIGGER_T c_internal_trigger, int param0);
	EXPORTED int STDCALL InternalTrigger_getInternalTriggerPeriodMinimum_stdcall(INTERNALTRIGGER_T c_internal_trigger);
	EXPORTED int STDCALL InternalTrigger_getInternalTriggerPeriodMaximum_stdcall(INTERNALTRIGGER_T c_internal_trigger);
	EXPORTED int STDCALL InternalTrigger_getInternalTriggerPeriodIncrement_stdcall(INTERNALTRIGGER_T c_internal_trigger);
	EXPORTED void STDCALL InternalTrigger_setTriggerSource_stdcall(INTERNALTRIGGER_T c_internal_trigger, TRIGGERSOURCE_T param0);
	EXPORTED void STDCALL InternalTrigger_getTriggerSource_stdcall(INTERNALTRIGGER_T c_internal_trigger, TRIGGERSOURCE_T retval);
	EXPORTED void STDCALL InternalTrigger_Destroy_stdcall(INTERNALTRIGGER_T internal_trigger);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INTERNALTRIGGER_H */
