/**
 * File: EndProgramSequence.h
 * Autogenerated on Fri Mar 23 13:38:22 EDT 2018 based on
 * EndProgramSequence.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/endprogramsequence/EndProgramSequence
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ENDPROGRAMSEQUENCE_H
#define ENDPROGRAMSEQUENCE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Node.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Node;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED EndProgramSequence : public BaseJavaClass // CPPClass.tag001
{
public: 
	void endProgramSequence(Node& param0);
	~EndProgramSequence();
	// No public default Java constructor; creating one:
	EndProgramSequence();
	// No public Java copy constructor; creating one:
	EndProgramSequence(const EndProgramSequence &that);
	// Creating assignment operator declaration:
	EndProgramSequence &operator=(const EndProgramSequence &that);

private:
	jmethodID mid_endProgramSequence55;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_ENDPROGRAMSEQUENCE_T
#define EXTERN_TYPEDEF_ENDPROGRAMSEQUENCE_T
	typedef void* ENDPROGRAMSEQUENCE_T;
#endif /* EXTERN_TYPEDEF_ENDPROGRAMSEQUENCE_T */

	// No public default Java constructor; creating one:
	EXPORTED ENDPROGRAMSEQUENCE_T EndProgramSequence_Create();
	EXPORTED void EndProgramSequence_endProgramSequence(ENDPROGRAMSEQUENCE_T c_end_program_sequence, NODE_T param0);
	EXPORTED void EndProgramSequence_Destroy(ENDPROGRAMSEQUENCE_T end_program_sequence);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL EndProgramSequence_endProgramSequence_stdcall(ENDPROGRAMSEQUENCE_T c_end_program_sequence, NODE_T param0);
	EXPORTED void STDCALL EndProgramSequence_Destroy_stdcall(ENDPROGRAMSEQUENCE_T end_program_sequence);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ENDPROGRAMSEQUENCE_H */
