/**
 * File: ThermoElectricImpl_Ventana.h
 * Autogenerated on Fri Mar 23 13:38:41 EDT 2018 based on
 * ThermoElectricImpl_Ventana.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/thermoelectric/ThermoElectricImpl_Ventana
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef THERMOELECTRICIMPL_VENTANA_H
#define THERMOELECTRICIMPL_VENTANA_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "ThermoElectricImpl.h"
#include "Ventana.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class ThermoElectricImpl;
class Ventana;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ThermoElectricImpl_Ventana : public ThermoElectricImpl // CPPClass.tag001
{
public: 
	ThermoElectricImpl_Ventana(Ventana& ventana, USBInterface& usbInt, double min, double max, double step);
	void setTECEnable(short enable);
	void setFanEnable(short enable);
	double getDetectorTemperatureCelsius();
	double getDetectorTemperatureSetPointCelsius();
	void setDetectorSetPointCelsius(double point);
	double getSetPointMinimumCelsius();
	double getSetPointMaximumCelsius();
	double getSetPointIncrementCelsius();
	short isSaveTECStateEnabled();
	void saveTECState();
	JStringArray getFeatureGUIClassnames();
	~ThermoElectricImpl_Ventana();
	// No public default Java constructor; creating one:
	ThermoElectricImpl_Ventana();
	// No public Java copy constructor; creating one:
	ThermoElectricImpl_Ventana(const ThermoElectricImpl_Ventana &that);
	// Creating assignment operator declaration:
	ThermoElectricImpl_Ventana &operator=(const ThermoElectricImpl_Ventana &that);

private:
	jmethodID mid_ThermoElectricImpl_Ventana2189;
	jmethodID mid_setTECEnable2190;
	jmethodID mid_setFanEnable2191;
	jmethodID mid_getDetectorTemperatureCelsius2192;
	jmethodID mid_getDetectorTemperatureSetPointCelsius2193;
	jmethodID mid_setDetectorSetPointCelsius2194;
	jmethodID mid_getSetPointMinimumCelsius2195;
	jmethodID mid_getSetPointMaximumCelsius2196;
	jmethodID mid_getSetPointIncrementCelsius2197;
	jmethodID mid_isSaveTECStateEnabled2198;
	jmethodID mid_saveTECState2199;
	jmethodID mid_getFeatureGUIClassnames2200;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_THERMOELECTRICIMPL_T
#define EXTERN_TYPEDEF_THERMOELECTRICIMPL_T
	typedef void* THERMOELECTRICIMPL_T;
#endif /* EXTERN_TYPEDEF_THERMOELECTRICIMPL_T */
#ifndef EXTERN_TYPEDEF_VENTANA_T
#define EXTERN_TYPEDEF_VENTANA_T
	typedef void* VENTANA_T;
#endif /* EXTERN_TYPEDEF_VENTANA_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_THERMOELECTRICIMPL_VENTANA_T
#define EXTERN_TYPEDEF_THERMOELECTRICIMPL_VENTANA_T
	typedef void* THERMOELECTRICIMPL_VENTANA_T;
#endif /* EXTERN_TYPEDEF_THERMOELECTRICIMPL_VENTANA_T */

	// No public default Java constructor; creating one:
	EXPORTED THERMOELECTRICIMPL_VENTANA_T ThermoElectricImpl_Ventana_Create();
	EXPORTED THERMOELECTRICIMPL_VENTANA_T ThermoElectricImpl_Ventana_Create_1(VENTANA_T ventana, USBINTERFACE_T usbInt, double min, double max, double step);
	EXPORTED void ThermoElectricImpl_Ventana_setTECEnable(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, short enable);
	EXPORTED void ThermoElectricImpl_Ventana_setFanEnable(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, short enable);
	EXPORTED double ThermoElectricImpl_Ventana_getDetectorTemperatureCelsius(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED double ThermoElectricImpl_Ventana_getDetectorTemperatureSetPointCelsius(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED void ThermoElectricImpl_Ventana_setDetectorSetPointCelsius(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, double point);
	EXPORTED double ThermoElectricImpl_Ventana_getSetPointMinimumCelsius(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED double ThermoElectricImpl_Ventana_getSetPointMaximumCelsius(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED double ThermoElectricImpl_Ventana_getSetPointIncrementCelsius(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED short ThermoElectricImpl_Ventana_isSaveTECStateEnabled(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED void ThermoElectricImpl_Ventana_saveTECState(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED void ThermoElectricImpl_Ventana_getFeatureGUIClassnames(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, JSTRINGARRAY_T retval);
	EXPORTED void ThermoElectricImpl_Ventana_Destroy(THERMOELECTRICIMPL_VENTANA_T thermo_electric_impl_ventana);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED THERMOELECTRICIMPL_VENTANA_T STDCALL ThermoElectricImpl_Ventana_Create_stdcall_1(VENTANA_T ventana, USBINTERFACE_T usbInt, double min, double max, double step);
	EXPORTED void STDCALL ThermoElectricImpl_Ventana_setTECEnable_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, short enable);
	EXPORTED void STDCALL ThermoElectricImpl_Ventana_setFanEnable_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, short enable);
	EXPORTED double STDCALL ThermoElectricImpl_Ventana_getDetectorTemperatureCelsius_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED double STDCALL ThermoElectricImpl_Ventana_getDetectorTemperatureSetPointCelsius_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED void STDCALL ThermoElectricImpl_Ventana_setDetectorSetPointCelsius_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, double point);
	EXPORTED double STDCALL ThermoElectricImpl_Ventana_getSetPointMinimumCelsius_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED double STDCALL ThermoElectricImpl_Ventana_getSetPointMaximumCelsius_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED double STDCALL ThermoElectricImpl_Ventana_getSetPointIncrementCelsius_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED short STDCALL ThermoElectricImpl_Ventana_isSaveTECStateEnabled_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED void STDCALL ThermoElectricImpl_Ventana_saveTECState_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana);
	EXPORTED void STDCALL ThermoElectricImpl_Ventana_getFeatureGUIClassnames_stdcall(THERMOELECTRICIMPL_VENTANA_T c_thermo_electric_impl_ventana, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL ThermoElectricImpl_Ventana_Destroy_stdcall(THERMOELECTRICIMPL_VENTANA_T thermo_electric_impl_ventana);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* THERMOELECTRICIMPL_VENTANA_H */
