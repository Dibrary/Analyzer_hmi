/**
 * File: MethodDescriptorProvider.h
 * Autogenerated on Fri Mar 23 13:38:46 EDT 2018 based on
 * MethodDescriptorProvider.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/MethodDescriptorProvider
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef METHODDESCRIPTORPROVIDER_H
#define METHODDESCRIPTORPROVIDER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "MethodDescriptorArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class MethodDescriptorArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED MethodDescriptorProvider : public BaseJavaClass // CPPClass.tag001
{
public: 
	MethodDescriptorArray getMethodDescriptors();
	~MethodDescriptorProvider();
	// No public default Java constructor; creating one:
	MethodDescriptorProvider();
	// No public Java copy constructor; creating one:
	MethodDescriptorProvider(const MethodDescriptorProvider &that);
	// Creating assignment operator declaration:
	MethodDescriptorProvider &operator=(const MethodDescriptorProvider &that);

private:
	jmethodID mid_getMethodDescriptors2913;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_METHODDESCRIPTORARRAY_T
#define EXTERN_TYPEDEF_METHODDESCRIPTORARRAY_T
	typedef void* METHODDESCRIPTORARRAY_T;
#endif /* EXTERN_TYPEDEF_METHODDESCRIPTORARRAY_T */
#ifndef EXTERN_TYPEDEF_METHODDESCRIPTORPROVIDER_T
#define EXTERN_TYPEDEF_METHODDESCRIPTORPROVIDER_T
	typedef void* METHODDESCRIPTORPROVIDER_T;
#endif /* EXTERN_TYPEDEF_METHODDESCRIPTORPROVIDER_T */

	// No public default Java constructor; creating one:
	EXPORTED METHODDESCRIPTORPROVIDER_T MethodDescriptorProvider_Create();
	EXPORTED void MethodDescriptorProvider_getMethodDescriptors(METHODDESCRIPTORPROVIDER_T c_method_descriptor_provider, METHODDESCRIPTORARRAY_T retval);
	EXPORTED void MethodDescriptorProvider_Destroy(METHODDESCRIPTORPROVIDER_T method_descriptor_provider);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL MethodDescriptorProvider_getMethodDescriptors_stdcall(METHODDESCRIPTORPROVIDER_T c_method_descriptor_provider, METHODDESCRIPTORARRAY_T retval);
	EXPORTED void STDCALL MethodDescriptorProvider_Destroy_stdcall(METHODDESCRIPTORPROVIDER_T method_descriptor_provider);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* METHODDESCRIPTORPROVIDER_H */
