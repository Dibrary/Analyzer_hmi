/**
 * File: NetworkSource.h
 * Autogenerated on Fri Mar 23 13:38:39 EDT 2018 based on
 * NetworkSource.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/networksource/NetworkSource
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef NETWORKSOURCE_H
#define NETWORKSOURCE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED NetworkSource : public BaseJavaClass // CPPClass.tag001
{
public: 
	void connectToSource(JString& param0, int param1);
	short isConnected();
	void disconnect();
	void reconnect();
	JString getAddress();
	int getPort();
	~NetworkSource();
	// No public default Java constructor; creating one:
	NetworkSource();
	// No public Java copy constructor; creating one:
	NetworkSource(const NetworkSource &that);
	// Creating assignment operator declaration:
	NetworkSource &operator=(const NetworkSource &that);

private:
	jmethodID mid_connectToSource1869;
	jmethodID mid_isConnected1870;
	jmethodID mid_disconnect1871;
	jmethodID mid_reconnect1872;
	jmethodID mid_getAddress1873;
	jmethodID mid_getPort1874;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_NETWORKSOURCE_T
#define EXTERN_TYPEDEF_NETWORKSOURCE_T
	typedef void* NETWORKSOURCE_T;
#endif /* EXTERN_TYPEDEF_NETWORKSOURCE_T */

	// No public default Java constructor; creating one:
	EXPORTED NETWORKSOURCE_T NetworkSource_Create();
	EXPORTED void NetworkSource_connectToSource(NETWORKSOURCE_T c_network_source, JSTRING_T param0, int param1);
	EXPORTED short NetworkSource_isConnected(NETWORKSOURCE_T c_network_source);
	EXPORTED void NetworkSource_disconnect(NETWORKSOURCE_T c_network_source);
	EXPORTED void NetworkSource_reconnect(NETWORKSOURCE_T c_network_source);
	EXPORTED void NetworkSource_getAddress(NETWORKSOURCE_T c_network_source, JSTRING_T retval);
	EXPORTED int NetworkSource_getPort(NETWORKSOURCE_T c_network_source);
	EXPORTED void NetworkSource_Destroy(NETWORKSOURCE_T network_source);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL NetworkSource_connectToSource_stdcall(NETWORKSOURCE_T c_network_source, JSTRING_T param0, int param1);
	EXPORTED short STDCALL NetworkSource_isConnected_stdcall(NETWORKSOURCE_T c_network_source);
	EXPORTED void STDCALL NetworkSource_disconnect_stdcall(NETWORKSOURCE_T c_network_source);
	EXPORTED void STDCALL NetworkSource_reconnect_stdcall(NETWORKSOURCE_T c_network_source);
	EXPORTED void STDCALL NetworkSource_getAddress_stdcall(NETWORKSOURCE_T c_network_source, JSTRING_T retval);
	EXPORTED int STDCALL NetworkSource_getPort_stdcall(NETWORKSOURCE_T c_network_source);
	EXPORTED void STDCALL NetworkSource_Destroy_stdcall(NETWORKSOURCE_T network_source);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* NETWORKSOURCE_H */
