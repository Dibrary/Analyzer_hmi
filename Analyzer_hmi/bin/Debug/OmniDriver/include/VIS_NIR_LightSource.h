/**
 * File: VIS_NIR_LightSource.h
 * Autogenerated on Fri Mar 23 13:38:42 EDT 2018 based on
 * VIS_NIR_LightSource.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/visnirlightsource/VIS_NIR_LightSource
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef VIS_NIR_LIGHTSOURCE_H
#define VIS_NIR_LIGHTSOURCE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED VIS_NIR_LightSource : public BaseJavaClass // CPPClass.tag001
{
public: 
	ShortArray getPOTValues();
	void setPOTValue(int param0, short param1);
	void setNIRLampOn(short param0);
	short isNIRLampOn();
	void setVisLampOn(short param0);
	short isVisLampOn();
	void setVisLampIntensity(short param0);
	short getVisLampIntensity();
	void setNIRLampIntensity(short param0);
	short getNIRLampIntensity();
	int getLampIntensityMinimum();
	int getLampIntensityMaximum();
	int getLampIntensityIncrement();
	void initialize();
	~VIS_NIR_LightSource();
	// No public default Java constructor; creating one:
	VIS_NIR_LightSource();
	// No public Java copy constructor; creating one:
	VIS_NIR_LightSource(const VIS_NIR_LightSource &that);
	// Creating assignment operator declaration:
	VIS_NIR_LightSource &operator=(const VIS_NIR_LightSource &that);

private:
	jmethodID mid_getPOTValues2332;
	jmethodID mid_setPOTValue2333;
	jmethodID mid_setNIRLampOn2334;
	jmethodID mid_isNIRLampOn2335;
	jmethodID mid_setVisLampOn2336;
	jmethodID mid_isVisLampOn2337;
	jmethodID mid_setVisLampIntensity2338;
	jmethodID mid_getVisLampIntensity2339;
	jmethodID mid_setNIRLampIntensity2340;
	jmethodID mid_getNIRLampIntensity2341;
	jmethodID mid_getLampIntensityMinimum2342;
	jmethodID mid_getLampIntensityMaximum2343;
	jmethodID mid_getLampIntensityIncrement2344;
	jmethodID mid_initialize2345;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_VIS_NIR_LIGHTSOURCE_T
#define EXTERN_TYPEDEF_VIS_NIR_LIGHTSOURCE_T
	typedef void* VIS_NIR_LIGHTSOURCE_T;
#endif /* EXTERN_TYPEDEF_VIS_NIR_LIGHTSOURCE_T */

	// No public default Java constructor; creating one:
	EXPORTED VIS_NIR_LIGHTSOURCE_T VIS_NIR_LightSource_Create();
	EXPORTED void VIS_NIR_LightSource_getPOTValues(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, SHORTARRAY_T retval);
	EXPORTED void VIS_NIR_LightSource_setPOTValue(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, int param0, short param1);
	EXPORTED void VIS_NIR_LightSource_setNIRLampOn(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short VIS_NIR_LightSource_isNIRLampOn(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void VIS_NIR_LightSource_setVisLampOn(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short VIS_NIR_LightSource_isVisLampOn(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void VIS_NIR_LightSource_setVisLampIntensity(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short VIS_NIR_LightSource_getVisLampIntensity(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void VIS_NIR_LightSource_setNIRLampIntensity(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short VIS_NIR_LightSource_getNIRLampIntensity(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED int VIS_NIR_LightSource_getLampIntensityMinimum(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED int VIS_NIR_LightSource_getLampIntensityMaximum(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED int VIS_NIR_LightSource_getLampIntensityIncrement(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void VIS_NIR_LightSource_initialize(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void VIS_NIR_LightSource_Destroy(VIS_NIR_LIGHTSOURCE_T vis_nir_lightsource);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL VIS_NIR_LightSource_getPOTValues_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, SHORTARRAY_T retval);
	EXPORTED void STDCALL VIS_NIR_LightSource_setPOTValue_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, int param0, short param1);
	EXPORTED void STDCALL VIS_NIR_LightSource_setNIRLampOn_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short STDCALL VIS_NIR_LightSource_isNIRLampOn_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void STDCALL VIS_NIR_LightSource_setVisLampOn_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short STDCALL VIS_NIR_LightSource_isVisLampOn_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void STDCALL VIS_NIR_LightSource_setVisLampIntensity_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short STDCALL VIS_NIR_LightSource_getVisLampIntensity_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void STDCALL VIS_NIR_LightSource_setNIRLampIntensity_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource, short param0);
	EXPORTED short STDCALL VIS_NIR_LightSource_getNIRLampIntensity_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED int STDCALL VIS_NIR_LightSource_getLampIntensityMinimum_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED int STDCALL VIS_NIR_LightSource_getLampIntensityMaximum_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED int STDCALL VIS_NIR_LightSource_getLampIntensityIncrement_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void STDCALL VIS_NIR_LightSource_initialize_stdcall(VIS_NIR_LIGHTSOURCE_T c_vis_nir_lightsource);
	EXPORTED void STDCALL VIS_NIR_LightSource_Destroy_stdcall(VIS_NIR_LIGHTSOURCE_T vis_nir_lightsource);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* VIS_NIR_LIGHTSOURCE_H */
