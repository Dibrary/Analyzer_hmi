/**
 * File: ContinuousStrobeImpl.h
 * Autogenerated on Fri Mar 23 13:38:32 EDT 2018 based on
 * ContinuousStrobeImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/continuousstrobe/ContinuousStrobeImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef CONTINUOUSSTROBEIMPL_H
#define CONTINUOUSSTROBEIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "FPGAImpl.h"
#include "USBInterface.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class FPGAImpl;
class USBInterface;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ContinuousStrobeImpl : public FPGAImpl // CPPClass.tag001
{
public: 
	ContinuousStrobeImpl(USBInterface& usbInt);
	void setContinuousStrobeDelay(int param0);
	int getContinuousStrobeDelayMinimum();
	int getContinuousStrobeDelayMaximum();
	int getContinuousStrobeDelayIncrement(int param0);
	double continuousStrobeCountsToMicros(int param0);
	void setContinuousModeType(short param0);
	short getContinuousModeType();
	void setDelayAfterIntegration(int param0);
	int getDelayAfterIntegration();
	void setContinuousEnable(short param0);
	short getContinuousEnable();
	~ContinuousStrobeImpl();
	// No public default Java constructor; creating one:
	ContinuousStrobeImpl();
	// No public Java copy constructor; creating one:
	ContinuousStrobeImpl(const ContinuousStrobeImpl &that);
	// Creating assignment operator declaration:
	ContinuousStrobeImpl &operator=(const ContinuousStrobeImpl &that);

private:
	jmethodID mid_ContinuousStrobeImpl1009;
	jmethodID mid_setContinuousStrobeDelay1010;
	jmethodID mid_getContinuousStrobeDelayMinimum1011;
	jmethodID mid_getContinuousStrobeDelayMaximum1012;
	jmethodID mid_getContinuousStrobeDelayIncrement1013;
	jmethodID mid_continuousStrobeCountsToMicros1014;
	jmethodID mid_setContinuousModeType1015;
	jmethodID mid_getContinuousModeType1016;
	jmethodID mid_setDelayAfterIntegration1017;
	jmethodID mid_getDelayAfterIntegration1018;
	jmethodID mid_setContinuousEnable1019;
	jmethodID mid_getContinuousEnable1020;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_FPGAIMPL_T
#define EXTERN_TYPEDEF_FPGAIMPL_T
	typedef void* FPGAIMPL_T;
#endif /* EXTERN_TYPEDEF_FPGAIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_T
#define EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_T
	typedef void* CONTINUOUSSTROBEIMPL_T;
#endif /* EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED CONTINUOUSSTROBEIMPL_T ContinuousStrobeImpl_Create();
	EXPORTED CONTINUOUSSTROBEIMPL_T ContinuousStrobeImpl_Create_1(USBINTERFACE_T usbInt);
	EXPORTED void ContinuousStrobeImpl_setContinuousStrobeDelay(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED int ContinuousStrobeImpl_getContinuousStrobeDelayMinimum(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED int ContinuousStrobeImpl_getContinuousStrobeDelayMaximum(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED int ContinuousStrobeImpl_getContinuousStrobeDelayIncrement(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED double ContinuousStrobeImpl_continuousStrobeCountsToMicros(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED void ContinuousStrobeImpl_setContinuousModeType(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, short param0);
	EXPORTED short ContinuousStrobeImpl_getContinuousModeType(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED void ContinuousStrobeImpl_setDelayAfterIntegration(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED int ContinuousStrobeImpl_getDelayAfterIntegration(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED void ContinuousStrobeImpl_setContinuousEnable(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, short param0);
	EXPORTED short ContinuousStrobeImpl_getContinuousEnable(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED void ContinuousStrobeImpl_Destroy(CONTINUOUSSTROBEIMPL_T continuous_strobe_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED CONTINUOUSSTROBEIMPL_T STDCALL ContinuousStrobeImpl_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED void STDCALL ContinuousStrobeImpl_setContinuousStrobeDelay_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED int STDCALL ContinuousStrobeImpl_getContinuousStrobeDelayMinimum_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED int STDCALL ContinuousStrobeImpl_getContinuousStrobeDelayMaximum_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED int STDCALL ContinuousStrobeImpl_getContinuousStrobeDelayIncrement_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED double STDCALL ContinuousStrobeImpl_continuousStrobeCountsToMicros_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED void STDCALL ContinuousStrobeImpl_setContinuousModeType_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, short param0);
	EXPORTED short STDCALL ContinuousStrobeImpl_getContinuousModeType_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED void STDCALL ContinuousStrobeImpl_setDelayAfterIntegration_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, int param0);
	EXPORTED int STDCALL ContinuousStrobeImpl_getDelayAfterIntegration_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED void STDCALL ContinuousStrobeImpl_setContinuousEnable_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl, short param0);
	EXPORTED short STDCALL ContinuousStrobeImpl_getContinuousEnable_stdcall(CONTINUOUSSTROBEIMPL_T c_continuous_strobe_impl);
	EXPORTED void STDCALL ContinuousStrobeImpl_Destroy_stdcall(CONTINUOUSSTROBEIMPL_T continuous_strobe_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* CONTINUOUSSTROBEIMPL_H */
