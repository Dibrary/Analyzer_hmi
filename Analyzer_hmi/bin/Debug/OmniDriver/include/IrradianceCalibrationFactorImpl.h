/**
 * File: IrradianceCalibrationFactorImpl.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * IrradianceCalibrationFactorImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/irradiancecalibrationfactor/IrradianceCalibrationFactorImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef IRRADIANCECALIBRATIONFACTORIMPL_H
#define IRRADIANCECALIBRATIONFACTORIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED IrradianceCalibrationFactorImpl : public USBFeature // CPPClass.tag001
{
public: 
	IrradianceCalibrationFactorImpl(USBInterface& usbInt, int pixelCount);
	DoubleArray getIrradianceCalibrationFactors();
	void setIrradianceCalibrationFactors(DoubleArray& data);
	short hasCollectionArea();
	double getCollectionArea();
	void setCollectionArea(double area);
	JStringArray getFeatureGUIClassnames();
	~IrradianceCalibrationFactorImpl();
	// No public default Java constructor; creating one:
	IrradianceCalibrationFactorImpl();
	// No public Java copy constructor; creating one:
	IrradianceCalibrationFactorImpl(const IrradianceCalibrationFactorImpl &that);
	// Creating assignment operator declaration:
	IrradianceCalibrationFactorImpl &operator=(const IrradianceCalibrationFactorImpl &that);

private:
	jmethodID mid_IrradianceCalibrationFactorImpl1607;
	jmethodID mid_getIrradianceCalibrationFactors1608;
	jmethodID mid_setIrradianceCalibrationFactors1609;
	jmethodID mid_hasCollectionArea1610;
	jmethodID mid_getCollectionArea1611;
	jmethodID mid_setCollectionArea1612;
	jmethodID mid_getFeatureGUIClassnames1613;
	jfieldID fid_dataOutEndPoint;
	jfieldID fid_lowSpeedInEndPoint;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_IRRADIANCECALIBRATIONFACTORIMPL_T
#define EXTERN_TYPEDEF_IRRADIANCECALIBRATIONFACTORIMPL_T
	typedef void* IRRADIANCECALIBRATIONFACTORIMPL_T;
#endif /* EXTERN_TYPEDEF_IRRADIANCECALIBRATIONFACTORIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED IRRADIANCECALIBRATIONFACTORIMPL_T IrradianceCalibrationFactorImpl_Create();
	EXPORTED IRRADIANCECALIBRATIONFACTORIMPL_T IrradianceCalibrationFactorImpl_Create_1(USBINTERFACE_T usbInt, int pixelCount);
	EXPORTED void IrradianceCalibrationFactorImpl_getIrradianceCalibrationFactors(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, DOUBLEARRAY_T retval);
	EXPORTED void IrradianceCalibrationFactorImpl_setIrradianceCalibrationFactors(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, DOUBLEARRAY_T data);
	EXPORTED short IrradianceCalibrationFactorImpl_hasCollectionArea(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl);
	EXPORTED double IrradianceCalibrationFactorImpl_getCollectionArea(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl);
	EXPORTED void IrradianceCalibrationFactorImpl_setCollectionArea(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, double area);
	EXPORTED void IrradianceCalibrationFactorImpl_getFeatureGUIClassnames(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, JSTRINGARRAY_T retval);
	EXPORTED void IrradianceCalibrationFactorImpl_Destroy(IRRADIANCECALIBRATIONFACTORIMPL_T irradiance_calibration_factor_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED IRRADIANCECALIBRATIONFACTORIMPL_T STDCALL IrradianceCalibrationFactorImpl_Create_stdcall_1(USBINTERFACE_T usbInt, int pixelCount);
	EXPORTED void STDCALL IrradianceCalibrationFactorImpl_getIrradianceCalibrationFactors_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL IrradianceCalibrationFactorImpl_setIrradianceCalibrationFactors_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, DOUBLEARRAY_T data);
	EXPORTED short STDCALL IrradianceCalibrationFactorImpl_hasCollectionArea_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl);
	EXPORTED double STDCALL IrradianceCalibrationFactorImpl_getCollectionArea_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl);
	EXPORTED void STDCALL IrradianceCalibrationFactorImpl_setCollectionArea_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, double area);
	EXPORTED void STDCALL IrradianceCalibrationFactorImpl_getFeatureGUIClassnames_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T c_irradiance_calibration_factor_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL IrradianceCalibrationFactorImpl_Destroy_stdcall(IRRADIANCECALIBRATIONFACTORIMPL_T irradiance_calibration_factor_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* IRRADIANCECALIBRATIONFACTORIMPL_H */
