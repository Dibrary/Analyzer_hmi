/**
 * File: USBStringDescriptor.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * USBStringDescriptor.java
 * for the Java class
 * com/oceanoptics/uniusb/USBStringDescriptor
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USBSTRINGDESCRIPTOR_H
#define USBSTRINGDESCRIPTOR_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED USBStringDescriptor : public BaseJavaClass // CPPClass.tag001
{
public: 
	USBStringDescriptor();
	~USBStringDescriptor();
	// No public Java copy constructor; creating one:
	USBStringDescriptor(const USBStringDescriptor &that);
	// Creating assignment operator declaration:
	USBStringDescriptor &operator=(const USBStringDescriptor &that);
	signed char bLength;
	signed char bDescriptorType;

private:
	jmethodID mid_USBStringDescriptor6657;
	jfieldID fid_bLength;
	jfieldID fid_bDescriptorType;
	jfieldID fid_bString;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSTRINGDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBSTRINGDESCRIPTOR_T
	typedef void* USBSTRINGDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBSTRINGDESCRIPTOR_T */

	EXPORTED USBSTRINGDESCRIPTOR_T USBStringDescriptor_Create();
	EXPORTED void USBStringDescriptor_Destroy(USBSTRINGDESCRIPTOR_T usbstringdescriptor);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USBSTRINGDESCRIPTOR_T STDCALL USBStringDescriptor_Create_stdcall();
	EXPORTED void STDCALL USBStringDescriptor_Destroy_stdcall(USBSTRINGDESCRIPTOR_T usbstringdescriptor);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USBSTRINGDESCRIPTOR_H */
