/**
 * File: MMSRamanChannel.h
 * Autogenerated on Fri Mar 23 13:38:58 EDT 2018 based on
 * MMSRamanChannel.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/mmsraman/ramanspectrometer/MMSRamanChannel
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MMSRAMANCHANNEL_H
#define MMSRAMANCHANNEL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerChannel.h"
#include "MMSRaman.h"
#include "Coefficients.h"
#include "SpectrometerInfo.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerChannel;
class MMSRaman;
class Coefficients;
class SpectrometerInfo;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED MMSRamanChannel : public SpectrometerChannel // CPPClass.tag001
{
public: 
	MMSRamanChannel(MMSRaman& spectrometer, Coefficients& coefficients, int channel);
	void generateMetadata(SpectrometerInfo& sb, int index);
	void getCoefficientsFromSpectrometer();
	~MMSRamanChannel();
	// No public default Java constructor; creating one:
	MMSRamanChannel();
	// No public Java copy constructor; creating one:
	MMSRamanChannel(const MMSRamanChannel &that);
	// Creating assignment operator declaration:
	MMSRamanChannel &operator=(const MMSRamanChannel &that);

private:
	jmethodID mid_MMSRamanChannel4470;
	jmethodID mid_generateMetadata4471;
	jmethodID mid_getCoefficientsFromSpectrometer4472;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
	typedef void* SPECTROMETERCHANNEL_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T */
#ifndef EXTERN_TYPEDEF_MMSRAMAN_T
#define EXTERN_TYPEDEF_MMSRAMAN_T
	typedef void* MMSRAMAN_T;
#endif /* EXTERN_TYPEDEF_MMSRAMAN_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTS_T
#define EXTERN_TYPEDEF_COEFFICIENTS_T
	typedef void* COEFFICIENTS_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTS_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERINFO_T
#define EXTERN_TYPEDEF_SPECTROMETERINFO_T
	typedef void* SPECTROMETERINFO_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERINFO_T */
#ifndef EXTERN_TYPEDEF_MMSRAMANCHANNEL_T
#define EXTERN_TYPEDEF_MMSRAMANCHANNEL_T
	typedef void* MMSRAMANCHANNEL_T;
#endif /* EXTERN_TYPEDEF_MMSRAMANCHANNEL_T */

	// No public default Java constructor; creating one:
	EXPORTED MMSRAMANCHANNEL_T MMSRamanChannel_Create();
	EXPORTED MMSRAMANCHANNEL_T MMSRamanChannel_Create_1(MMSRAMAN_T spectrometer, COEFFICIENTS_T coefficients, int channel);
	EXPORTED void MMSRamanChannel_generateMetadata(MMSRAMANCHANNEL_T c_mmsramanchannel, SPECTROMETERINFO_T sb, int index);
	EXPORTED void MMSRamanChannel_getCoefficientsFromSpectrometer(MMSRAMANCHANNEL_T c_mmsramanchannel);
	EXPORTED void MMSRamanChannel_Destroy(MMSRAMANCHANNEL_T mmsramanchannel);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED MMSRAMANCHANNEL_T STDCALL MMSRamanChannel_Create_stdcall_1(MMSRAMAN_T spectrometer, COEFFICIENTS_T coefficients, int channel);
	EXPORTED void STDCALL MMSRamanChannel_generateMetadata_stdcall(MMSRAMANCHANNEL_T c_mmsramanchannel, SPECTROMETERINFO_T sb, int index);
	EXPORTED void STDCALL MMSRamanChannel_getCoefficientsFromSpectrometer_stdcall(MMSRAMANCHANNEL_T c_mmsramanchannel);
	EXPORTED void STDCALL MMSRamanChannel_Destroy_stdcall(MMSRAMANCHANNEL_T mmsramanchannel);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MMSRAMANCHANNEL_H */
