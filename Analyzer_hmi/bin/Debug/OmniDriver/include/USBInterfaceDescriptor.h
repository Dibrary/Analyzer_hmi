/**
 * File: USBInterfaceDescriptor.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * USBInterfaceDescriptor.java
 * for the Java class
 * com/oceanoptics/uniusb/USBInterfaceDescriptor
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USBINTERFACEDESCRIPTOR_H
#define USBINTERFACEDESCRIPTOR_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USBInterfaceDescriptor : public BaseJavaClass // CPPClass.tag001
{
public: 
	USBInterfaceDescriptor();
	JString toString();
	signed char getLength();
	signed char getDescriptorType();
	signed char getInterfaceNumber();
	signed char getAlternateSetting();
	signed char getNumEndpoints();
	signed char getInterfaceClass();
	signed char getInterfaceSubClass();
	signed char getInterfaceProtocol();
	signed char getInterface();
	~USBInterfaceDescriptor();
	// No public Java copy constructor; creating one:
	USBInterfaceDescriptor(const USBInterfaceDescriptor &that);
	// Creating assignment operator declaration:
	USBInterfaceDescriptor &operator=(const USBInterfaceDescriptor &that);

private:
	jmethodID mid_USBInterfaceDescriptor6646;
	jmethodID mid_toString6647;
	jmethodID mid_getLength6648;
	jmethodID mid_getDescriptorType6649;
	jmethodID mid_getInterfaceNumber6650;
	jmethodID mid_getAlternateSetting6651;
	jmethodID mid_getNumEndpoints6652;
	jmethodID mid_getInterfaceClass6653;
	jmethodID mid_getInterfaceSubClass6654;
	jmethodID mid_getInterfaceProtocol6655;
	jmethodID mid_getInterface6656;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
	typedef void* USBINTERFACEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T */

	EXPORTED USBINTERFACEDESCRIPTOR_T USBInterfaceDescriptor_Create();
	EXPORTED void USBInterfaceDescriptor_toString(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor, JSTRING_T retval);
	EXPORTED signed char USBInterfaceDescriptor_getLength(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getDescriptorType(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getInterfaceNumber(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getAlternateSetting(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getNumEndpoints(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getInterfaceClass(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getInterfaceSubClass(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getInterfaceProtocol(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char USBInterfaceDescriptor_getInterface(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED void USBInterfaceDescriptor_Destroy(USBINTERFACEDESCRIPTOR_T usbinterfacedescriptor);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USBINTERFACEDESCRIPTOR_T STDCALL USBInterfaceDescriptor_Create_stdcall();
	EXPORTED void STDCALL USBInterfaceDescriptor_toString_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor, JSTRING_T retval);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getLength_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getDescriptorType_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getInterfaceNumber_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getAlternateSetting_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getNumEndpoints_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getInterfaceClass_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getInterfaceSubClass_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getInterfaceProtocol_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED signed char STDCALL USBInterfaceDescriptor_getInterface_stdcall(USBINTERFACEDESCRIPTOR_T c_usbinterfacedescriptor);
	EXPORTED void STDCALL USBInterfaceDescriptor_Destroy_stdcall(USBINTERFACEDESCRIPTOR_T usbinterfacedescriptor);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USBINTERFACEDESCRIPTOR_H */
