/**
 * File: NextGenConfiguration.h
 * Autogenerated on Fri Mar 23 13:38:58 EDT 2018 based on
 * NextGenConfiguration.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/nextgen/NextGenConfiguration
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef NEXTGENCONFIGURATION_H
#define NEXTGENCONFIGURATION_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Configuration.h"
#include "Spectrometer.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Configuration;
class Spectrometer;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED NextGenConfiguration : public Configuration // CPPClass.tag001
{
public: 
	NextGenConfiguration(Spectrometer& spec);
	void getConfigurationFromSpectrometer();
	void setConfigurationToSpectrometer();
	short isBenchDefined();
	short isCPLDVersionDefined();
	short isDetectorSerialNumberDefined();
	short isSpectrometerConfigurationDefined();
	~NextGenConfiguration();
	// No public default Java constructor; creating one:
	NextGenConfiguration();
	// No public Java copy constructor; creating one:
	NextGenConfiguration(const NextGenConfiguration &that);
	// Creating assignment operator declaration:
	NextGenConfiguration &operator=(const NextGenConfiguration &that);

private:
	jmethodID mid_NextGenConfiguration4510;
	jmethodID mid_getConfigurationFromSpectrometer4511;
	jmethodID mid_setConfigurationToSpectrometer4512;
	jmethodID mid_isBenchDefined4513;
	jmethodID mid_isCPLDVersionDefined4514;
	jmethodID mid_isDetectorSerialNumberDefined4515;
	jmethodID mid_isSpectrometerConfigurationDefined4516;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_CONFIGURATION_T
#define EXTERN_TYPEDEF_CONFIGURATION_T
	typedef void* CONFIGURATION_T;
#endif /* EXTERN_TYPEDEF_CONFIGURATION_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_NEXTGENCONFIGURATION_T
#define EXTERN_TYPEDEF_NEXTGENCONFIGURATION_T
	typedef void* NEXTGENCONFIGURATION_T;
#endif /* EXTERN_TYPEDEF_NEXTGENCONFIGURATION_T */

	// No public default Java constructor; creating one:
	EXPORTED NEXTGENCONFIGURATION_T NextGenConfiguration_Create();
	EXPORTED NEXTGENCONFIGURATION_T NextGenConfiguration_Create_1(SPECTROMETER_T spec);
	EXPORTED void NextGenConfiguration_getConfigurationFromSpectrometer(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED void NextGenConfiguration_setConfigurationToSpectrometer(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short NextGenConfiguration_isBenchDefined(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short NextGenConfiguration_isCPLDVersionDefined(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short NextGenConfiguration_isDetectorSerialNumberDefined(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short NextGenConfiguration_isSpectrometerConfigurationDefined(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED void NextGenConfiguration_Destroy(NEXTGENCONFIGURATION_T next_gen_configuration);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED NEXTGENCONFIGURATION_T STDCALL NextGenConfiguration_Create_stdcall_1(SPECTROMETER_T spec);
	EXPORTED void STDCALL NextGenConfiguration_getConfigurationFromSpectrometer_stdcall(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED void STDCALL NextGenConfiguration_setConfigurationToSpectrometer_stdcall(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short STDCALL NextGenConfiguration_isBenchDefined_stdcall(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short STDCALL NextGenConfiguration_isCPLDVersionDefined_stdcall(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short STDCALL NextGenConfiguration_isDetectorSerialNumberDefined_stdcall(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED short STDCALL NextGenConfiguration_isSpectrometerConfigurationDefined_stdcall(NEXTGENCONFIGURATION_T c_next_gen_configuration);
	EXPORTED void STDCALL NextGenConfiguration_Destroy_stdcall(NEXTGENCONFIGURATION_T next_gen_configuration);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* NEXTGENCONFIGURATION_H */
