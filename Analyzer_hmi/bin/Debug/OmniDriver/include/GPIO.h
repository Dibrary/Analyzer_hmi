/**
 * File: GPIO.h
 * Autogenerated on Fri Mar 23 13:38:34 EDT 2018 based on
 * GPIO.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/gpio/GPIO
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GPIO_H
#define GPIO_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "BitSet.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class BitSet;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GPIO : public BaseJavaClass // CPPClass.tag001
{
public: 
	BitSet getValueBits();
	int getValueBit(int param0);
	void setValueAllBits(BitSet& param0);
	void setValueBitmask(short param0);
	void setValueBit(int param0, short param1);
	BitSet getDirectionBits();
	void setDirectionAllBits(BitSet& param0);
	void setDirectionBitmask(short param0);
	void setDirectionBit(int param0, short param1);
	BitSet getMuxBits();
	int getNumberOfPins();
	void setMuxAllBits(BitSet& param0);
	void setMuxBitmask(short param0);
	void setMuxBit(int param0, short param1);
	int getTotalGPIOBits();
	~GPIO();
	// No public default Java constructor; creating one:
	GPIO();
	// No public Java copy constructor; creating one:
	GPIO(const GPIO &that);
	// Creating assignment operator declaration:
	GPIO &operator=(const GPIO &that);

private:
	jmethodID mid_getValueBits1273;
	jmethodID mid_getValueBit1274;
	jmethodID mid_setValueAllBits1275;
	jmethodID mid_setValueBitmask1276;
	jmethodID mid_setValueBit1277;
	jmethodID mid_getDirectionBits1278;
	jmethodID mid_setDirectionAllBits1279;
	jmethodID mid_setDirectionBitmask1280;
	jmethodID mid_setDirectionBit1281;
	jmethodID mid_getMuxBits1282;
	jmethodID mid_getNumberOfPins1283;
	jmethodID mid_setMuxAllBits1284;
	jmethodID mid_setMuxBitmask1285;
	jmethodID mid_setMuxBit1286;
	jmethodID mid_getTotalGPIOBits1287;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_BITSET_T
#define EXTERN_TYPEDEF_BITSET_T
	typedef void* BITSET_T;
#endif /* EXTERN_TYPEDEF_BITSET_T */
#ifndef EXTERN_TYPEDEF_GPIO_T
#define EXTERN_TYPEDEF_GPIO_T
	typedef void* GPIO_T;
#endif /* EXTERN_TYPEDEF_GPIO_T */

	// No public default Java constructor; creating one:
	EXPORTED GPIO_T GPIO_Create();
	EXPORTED void GPIO_getValueBits(GPIO_T c_gpio, BITSET_T retval);
	EXPORTED int GPIO_getValueBit(GPIO_T c_gpio, int param0);
	EXPORTED void GPIO_setValueAllBits(GPIO_T c_gpio, BITSET_T param0);
	EXPORTED void GPIO_setValueBitmask(GPIO_T c_gpio, short param0);
	EXPORTED void GPIO_setValueBit(GPIO_T c_gpio, int param0, short param1);
	EXPORTED void GPIO_getDirectionBits(GPIO_T c_gpio, BITSET_T retval);
	EXPORTED void GPIO_setDirectionAllBits(GPIO_T c_gpio, BITSET_T param0);
	EXPORTED void GPIO_setDirectionBitmask(GPIO_T c_gpio, short param0);
	EXPORTED void GPIO_setDirectionBit(GPIO_T c_gpio, int param0, short param1);
	EXPORTED void GPIO_getMuxBits(GPIO_T c_gpio, BITSET_T retval);
	EXPORTED int GPIO_getNumberOfPins(GPIO_T c_gpio);
	EXPORTED void GPIO_setMuxAllBits(GPIO_T c_gpio, BITSET_T param0);
	EXPORTED void GPIO_setMuxBitmask(GPIO_T c_gpio, short param0);
	EXPORTED void GPIO_setMuxBit(GPIO_T c_gpio, int param0, short param1);
	EXPORTED int GPIO_getTotalGPIOBits(GPIO_T c_gpio);
	EXPORTED void GPIO_Destroy(GPIO_T gpio);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL GPIO_getValueBits_stdcall(GPIO_T c_gpio, BITSET_T retval);
	EXPORTED int STDCALL GPIO_getValueBit_stdcall(GPIO_T c_gpio, int param0);
	EXPORTED void STDCALL GPIO_setValueAllBits_stdcall(GPIO_T c_gpio, BITSET_T param0);
	EXPORTED void STDCALL GPIO_setValueBitmask_stdcall(GPIO_T c_gpio, short param0);
	EXPORTED void STDCALL GPIO_setValueBit_stdcall(GPIO_T c_gpio, int param0, short param1);
	EXPORTED void STDCALL GPIO_getDirectionBits_stdcall(GPIO_T c_gpio, BITSET_T retval);
	EXPORTED void STDCALL GPIO_setDirectionAllBits_stdcall(GPIO_T c_gpio, BITSET_T param0);
	EXPORTED void STDCALL GPIO_setDirectionBitmask_stdcall(GPIO_T c_gpio, short param0);
	EXPORTED void STDCALL GPIO_setDirectionBit_stdcall(GPIO_T c_gpio, int param0, short param1);
	EXPORTED void STDCALL GPIO_getMuxBits_stdcall(GPIO_T c_gpio, BITSET_T retval);
	EXPORTED int STDCALL GPIO_getNumberOfPins_stdcall(GPIO_T c_gpio);
	EXPORTED void STDCALL GPIO_setMuxAllBits_stdcall(GPIO_T c_gpio, BITSET_T param0);
	EXPORTED void STDCALL GPIO_setMuxBitmask_stdcall(GPIO_T c_gpio, short param0);
	EXPORTED void STDCALL GPIO_setMuxBit_stdcall(GPIO_T c_gpio, int param0, short param1);
	EXPORTED int STDCALL GPIO_getTotalGPIOBits_stdcall(GPIO_T c_gpio);
	EXPORTED void STDCALL GPIO_Destroy_stdcall(GPIO_T gpio);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GPIO_H */
