/**
 * File: GramsSPCHeader.h
 * Autogenerated on Fri Mar 23 13:38:42 EDT 2018 based on
 * GramsSPCHeader.java
 * for the Java class
 * com/oceanoptics/omnidriver/gramsspc/GramsSPCHeader
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GRAMSSPCHEADER_H
#define GRAMSSPCHEADER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GramsSPCHeader : public BaseJavaClass // CPPClass.tag001
{
public: 
	GramsSPCHeader(signed char version);
	GramsSPCHeader(CharArray& rawBytes);
	signed char getFlags();
	void setFlags(signed char b);
	signed char getVersion();
	signed char getExperiment();
	void setExperiment(signed char e);
	signed char getExponent();
	void setExponent(signed char b);
	int getNumberOfPoints();
	void setNumberOfPoints(int number);
	double getFirstPointX();
	void setFirstPointX(double first);
	double getLastPointX();
	void setLastPointX(double last);
	int getNumberOfSubfiles();
	void setNumberOfSubfiles(int n);
	signed char getXType();
	void setXType(signed char type);
	signed char getYType();
	void setYType(signed char type);
	signed char getZType();
	void setZType(signed char type);
	signed char getPostingDisposition();
	void setPostingDisposition(signed char pd);
	JString getResolutionDescription();
	void setResolutionDescription(JString& description);
	JString getSourceDescription();
	void setSourceDescription(JString& desc);
	short getPeakPoint();
	void setPeakPoint(short point);
	JString getComment();
	void setComment(JString& comment);
	JString getAxisLabelStrings();
	void setAxisLabelStrings(JString& labels);
	int getLogOffset();
	void setLogOffset(int offset);
	int getModificationFlags();
	void setModificationFlags(int flags);
	float getZSubfileIncrement();
	void setZSubfileIncrement(float inc);
	int getNumberOfWPlanes();
	void setNumberOfWPlanes(int planes);
	float getWPlaneIncrement();
	void setWPlaneIncrement(float inc);
	signed char getWType();
	void setWType(signed char type);
	int getLength();
	CharArray getByteStream();
	~GramsSPCHeader();
	// No public default Java constructor; creating one:
	GramsSPCHeader();
	// No public Java copy constructor; creating one:
	GramsSPCHeader(const GramsSPCHeader &that);
	// Creating assignment operator declaration:
	GramsSPCHeader &operator=(const GramsSPCHeader &that);

private:
	jmethodID mid_GramsSPCHeader2388;
	jmethodID mid_GramsSPCHeader2389;
	jmethodID mid_getFlags2390;
	jmethodID mid_setFlags2391;
	jmethodID mid_getVersion2392;
	jmethodID mid_getExperiment2393;
	jmethodID mid_setExperiment2394;
	jmethodID mid_getExponent2395;
	jmethodID mid_setExponent2396;
	jmethodID mid_getNumberOfPoints2397;
	jmethodID mid_setNumberOfPoints2398;
	jmethodID mid_getFirstPointX2399;
	jmethodID mid_setFirstPointX2400;
	jmethodID mid_getLastPointX2401;
	jmethodID mid_setLastPointX2402;
	jmethodID mid_getNumberOfSubfiles2403;
	jmethodID mid_setNumberOfSubfiles2404;
	jmethodID mid_getXType2405;
	jmethodID mid_setXType2406;
	jmethodID mid_getYType2407;
	jmethodID mid_setYType2408;
	jmethodID mid_getZType2409;
	jmethodID mid_setZType2410;
	jmethodID mid_getPostingDisposition2411;
	jmethodID mid_setPostingDisposition2412;
	jmethodID mid_getResolutionDescription2413;
	jmethodID mid_setResolutionDescription2414;
	jmethodID mid_getSourceDescription2415;
	jmethodID mid_setSourceDescription2416;
	jmethodID mid_getPeakPoint2417;
	jmethodID mid_setPeakPoint2418;
	jmethodID mid_getComment2419;
	jmethodID mid_setComment2420;
	jmethodID mid_getAxisLabelStrings2421;
	jmethodID mid_setAxisLabelStrings2422;
	jmethodID mid_getLogOffset2423;
	jmethodID mid_setLogOffset2424;
	jmethodID mid_getModificationFlags2425;
	jmethodID mid_setModificationFlags2426;
	jmethodID mid_getZSubfileIncrement2427;
	jmethodID mid_setZSubfileIncrement2428;
	jmethodID mid_getNumberOfWPlanes2429;
	jmethodID mid_setNumberOfWPlanes2430;
	jmethodID mid_getWPlaneIncrement2431;
	jmethodID mid_setWPlaneIncrement2432;
	jmethodID mid_getWType2433;
	jmethodID mid_setWType2434;
	jmethodID mid_getLength2435;
	jmethodID mid_getByteStream2436;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_GRAMSSPCHEADER_T
#define EXTERN_TYPEDEF_GRAMSSPCHEADER_T
	typedef void* GRAMSSPCHEADER_T;
#endif /* EXTERN_TYPEDEF_GRAMSSPCHEADER_T */

	// No public default Java constructor; creating one:
	EXPORTED GRAMSSPCHEADER_T GramsSPCHeader_Create();
	EXPORTED GRAMSSPCHEADER_T GramsSPCHeader_Create_1(signed char version);
	EXPORTED GRAMSSPCHEADER_T GramsSPCHeader_Create_2(CHARARRAY_T rawBytes);
	EXPORTED signed char GramsSPCHeader_getFlags(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setFlags(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char b);
	EXPORTED signed char GramsSPCHeader_getVersion(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED signed char GramsSPCHeader_getExperiment(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setExperiment(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char e);
	EXPORTED signed char GramsSPCHeader_getExponent(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setExponent(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char b);
	EXPORTED int GramsSPCHeader_getNumberOfPoints(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setNumberOfPoints(GRAMSSPCHEADER_T c_grams_s_p_c_header, int number);
	EXPORTED double GramsSPCHeader_getFirstPointX(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setFirstPointX(GRAMSSPCHEADER_T c_grams_s_p_c_header, double first);
	EXPORTED double GramsSPCHeader_getLastPointX(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setLastPointX(GRAMSSPCHEADER_T c_grams_s_p_c_header, double last);
	EXPORTED int GramsSPCHeader_getNumberOfSubfiles(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setNumberOfSubfiles(GRAMSSPCHEADER_T c_grams_s_p_c_header, int n);
	EXPORTED signed char GramsSPCHeader_getXType(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setXType(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED signed char GramsSPCHeader_getYType(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setYType(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED signed char GramsSPCHeader_getZType(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setZType(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED signed char GramsSPCHeader_getPostingDisposition(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setPostingDisposition(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char pd);
	EXPORTED void GramsSPCHeader_getResolutionDescription(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void GramsSPCHeader_setResolutionDescription(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T description);
	EXPORTED void GramsSPCHeader_getSourceDescription(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void GramsSPCHeader_setSourceDescription(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T desc);
	EXPORTED short GramsSPCHeader_getPeakPoint(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setPeakPoint(GRAMSSPCHEADER_T c_grams_s_p_c_header, short point);
	EXPORTED void GramsSPCHeader_getComment(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void GramsSPCHeader_setComment(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T comment);
	EXPORTED void GramsSPCHeader_getAxisLabelStrings(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void GramsSPCHeader_setAxisLabelStrings(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T labels);
	EXPORTED int GramsSPCHeader_getLogOffset(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setLogOffset(GRAMSSPCHEADER_T c_grams_s_p_c_header, int offset);
	EXPORTED int GramsSPCHeader_getModificationFlags(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setModificationFlags(GRAMSSPCHEADER_T c_grams_s_p_c_header, int flags);
	EXPORTED float GramsSPCHeader_getZSubfileIncrement(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setZSubfileIncrement(GRAMSSPCHEADER_T c_grams_s_p_c_header, float inc);
	EXPORTED int GramsSPCHeader_getNumberOfWPlanes(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setNumberOfWPlanes(GRAMSSPCHEADER_T c_grams_s_p_c_header, int planes);
	EXPORTED float GramsSPCHeader_getWPlaneIncrement(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setWPlaneIncrement(GRAMSSPCHEADER_T c_grams_s_p_c_header, float inc);
	EXPORTED signed char GramsSPCHeader_getWType(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_setWType(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED int GramsSPCHeader_getLength(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void GramsSPCHeader_getByteStream(GRAMSSPCHEADER_T c_grams_s_p_c_header, CHARARRAY_T retval);
	EXPORTED void GramsSPCHeader_Destroy(GRAMSSPCHEADER_T grams_s_p_c_header);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED GRAMSSPCHEADER_T STDCALL GramsSPCHeader_Create_stdcall_1(signed char version);
	EXPORTED GRAMSSPCHEADER_T STDCALL GramsSPCHeader_Create_stdcall_2(CHARARRAY_T rawBytes);
	EXPORTED signed char STDCALL GramsSPCHeader_getFlags_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setFlags_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char b);
	EXPORTED signed char STDCALL GramsSPCHeader_getVersion_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED signed char STDCALL GramsSPCHeader_getExperiment_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setExperiment_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char e);
	EXPORTED signed char STDCALL GramsSPCHeader_getExponent_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setExponent_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char b);
	EXPORTED int STDCALL GramsSPCHeader_getNumberOfPoints_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setNumberOfPoints_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, int number);
	EXPORTED double STDCALL GramsSPCHeader_getFirstPointX_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setFirstPointX_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, double first);
	EXPORTED double STDCALL GramsSPCHeader_getLastPointX_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setLastPointX_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, double last);
	EXPORTED int STDCALL GramsSPCHeader_getNumberOfSubfiles_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setNumberOfSubfiles_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, int n);
	EXPORTED signed char STDCALL GramsSPCHeader_getXType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setXType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED signed char STDCALL GramsSPCHeader_getYType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setYType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED signed char STDCALL GramsSPCHeader_getZType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setZType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED signed char STDCALL GramsSPCHeader_getPostingDisposition_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setPostingDisposition_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char pd);
	EXPORTED void STDCALL GramsSPCHeader_getResolutionDescription_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void STDCALL GramsSPCHeader_setResolutionDescription_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T description);
	EXPORTED void STDCALL GramsSPCHeader_getSourceDescription_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void STDCALL GramsSPCHeader_setSourceDescription_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T desc);
	EXPORTED short STDCALL GramsSPCHeader_getPeakPoint_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setPeakPoint_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, short point);
	EXPORTED void STDCALL GramsSPCHeader_getComment_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void STDCALL GramsSPCHeader_setComment_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T comment);
	EXPORTED void STDCALL GramsSPCHeader_getAxisLabelStrings_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T retval);
	EXPORTED void STDCALL GramsSPCHeader_setAxisLabelStrings_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, JSTRING_T labels);
	EXPORTED int STDCALL GramsSPCHeader_getLogOffset_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setLogOffset_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, int offset);
	EXPORTED int STDCALL GramsSPCHeader_getModificationFlags_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setModificationFlags_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, int flags);
	EXPORTED float STDCALL GramsSPCHeader_getZSubfileIncrement_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setZSubfileIncrement_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, float inc);
	EXPORTED int STDCALL GramsSPCHeader_getNumberOfWPlanes_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setNumberOfWPlanes_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, int planes);
	EXPORTED float STDCALL GramsSPCHeader_getWPlaneIncrement_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setWPlaneIncrement_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, float inc);
	EXPORTED signed char STDCALL GramsSPCHeader_getWType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_setWType_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, signed char type);
	EXPORTED int STDCALL GramsSPCHeader_getLength_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header);
	EXPORTED void STDCALL GramsSPCHeader_getByteStream_stdcall(GRAMSSPCHEADER_T c_grams_s_p_c_header, CHARARRAY_T retval);
	EXPORTED void STDCALL GramsSPCHeader_Destroy_stdcall(GRAMSSPCHEADER_T grams_s_p_c_header);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GRAMSSPCHEADER_H */
