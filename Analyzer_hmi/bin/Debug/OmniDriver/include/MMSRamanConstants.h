/**
 * File: MMSRamanConstants.h
 * Autogenerated on Fri Mar 23 13:38:56 EDT 2018 based on
 * MMSRamanConstants.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/mmsraman/constants/MMSRamanConstants
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MMSRAMANCONSTANTS_H
#define MMSRAMANCONSTANTS_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED MMSRamanConstants : public BaseJavaClass // CPPClass.tag001
{
public: 
	MMSRamanConstants();
	~MMSRamanConstants();
	// No public Java copy constructor; creating one:
	MMSRamanConstants(const MMSRamanConstants &that);
	// Creating assignment operator declaration:
	MMSRamanConstants &operator=(const MMSRamanConstants &that);
	signed char DEFAULT_SCHEMA_NUMBER;
	signed char OP_GET_CCDTEMP;
	signed char OP_SET_CCDTEMP;
	signed char OP_GET_CALIBRATION;
	signed char OP_SET_CALIBRATION;
	signed char OP_OPEN_SHUTTER;
	signed char OP_CLOSE_SHUTTER;
	signed char OP_GET_EXPOSURETIME;
	signed char OP_SET_EXPOSURETIME;
	signed char OP_START_EXPOSURE;
	signed char OP_QUERY_EXPOSURE;
	signed char OP_END_EXPOSURE;
	signed char OP_GET_EXPOSURE;
	signed char OP_GET_RECONSTRUCTION;
	signed char OP_SET_RECONSTRUCTION;
	signed char OP_GET_LASTERROR;
	signed char OP_GET_MODELNUMBER;
	signed char OP_SET_MODELNUMBER;
	signed char OP_GET_SERIALNUMBER;
	signed char OP_SET_SERIALNUMBER;
	signed char OP_GET_INFO;
	signed char OP_UPDATE_FX2;
	signed char OP_UPDATE_DSP;
	signed char OP_UPDATE_FPGA;
	signed char OP_DUMP_RAM;
	signed char OP_GET_CLOCKRATE;
	signed char OP_SET_CLOCKRATE;
	signed char OP_GET_PIXELMODE;
	signed char OP_SET_PIXELMODE;
	signed char OP_RESET;
	signed char OP_GET_LASER;
	signed char OP_SET_LASER;
	signed char OP_GET_LASERTEMPINFO;
	signed char OP_SET_LASERTEMPINFO;
	signed char OP_GET_LASERPOWERINFO;
	signed char OP_SET_LASERPOWERINFO;
	signed char OP_GET_IOCONFIG;
	signed char OP_SET_IOCONFIG;
	signed char OP_GET_IOVALUE;
	signed char OP_SET_IOVALUE;
	signed char OP_GET_AFEPARAMS;
	signed char OP_SET_AFEPARAMS;
	signed char SHUTTER_STATE_CLOSE;
	signed char SHUTTER_STATE_OPEN;
	signed char SHUTTER_STATE_CURRENT;
	signed char EXPOSURE_TYPE_NONE;
	signed char EXPOSURE_TYPE_LIGHT;
	signed char EXPOSURE_TYPE_DARK;
	signed char EXPOSURE_TYPE_REFERENCE;
	signed char TRANSFORM_ALGORITHM_HADAMARD;
	signed char CLOCK_FREQUENCY_NA;
	signed char CLOCK_FREQUENCY_DEFAULT;
	signed char CLOCK_FREQUENCY_150KHZ;
	signed char CLOCK_FREQUENCY_300KHZ;
	signed char CLOCK_FREQUENCY_500KHZ;
	signed char CLOCK_FREQUENCY_1000KHZ;
	signed char PIXEL_MODE_NA;
	signed char PIXEL_MODE_FULL_WELL;
	signed char PIXEL_MODE_DARK_CURRENT;
	signed char PIXEL_MODE_LINE_BINNING;
	short ERROR_CODE_NONE;
	short ERROR_CODE_MEMORY;
	short ERROR_CODE_IO;
	short ERROR_CODE_INTERRUPT;
	short ERROR_CODE_TIMER;
	short ERROR_CODE_I2C;
	short ERROR_CODE_ADC;
	short ERROR_CODE_AFE;
	short ERROR_CODE_EEPROM_DSP;
	short ERROR_CODE_EEPROM_USB;
	short ERROR_CODE_USB_CONTROLLER;
	short ERROR_CODE_VOLTAGE;
	short ERROR_CODE_USB_COMMAND;
	short ERROR_CODE_NON_SPECIFIC;
	short ERROR_CODE_CALIBRATION;
	short ERROR_CODE_FPGA;
	short ERROR_TYPE_NONE;
	short ERROR_TYPE_READ_WRITE_FAILURE;
	short ERROR_TYPE_INVALID_ADDRESS;
	short ERROR_TYPE_INVALID_PARAMETER;
	short ERROR_TYPE_INVALID_STATE;
	short ERROR_TYPE_ALLOCATION;
	short ERROR_TYPE_LIMIT;
	short ERROR_TYPE_TEST_FAILURE;
	short ERROR_TYPE_NON_SPECIFIC;
	int PACKET_SIZE;
	int PIXELS_PER_MASK_ELEMENT;
	int RECONSTRUCTION_DEPTH;

private:
	jmethodID mid_MMSRamanConstants4176;
	jfieldID fid_DEFAULT_SCHEMA_NUMBER;
	jfieldID fid_OP_GET_CCDTEMP;
	jfieldID fid_OP_SET_CCDTEMP;
	jfieldID fid_OP_GET_CALIBRATION;
	jfieldID fid_OP_SET_CALIBRATION;
	jfieldID fid_OP_OPEN_SHUTTER;
	jfieldID fid_OP_CLOSE_SHUTTER;
	jfieldID fid_OP_GET_EXPOSURETIME;
	jfieldID fid_OP_SET_EXPOSURETIME;
	jfieldID fid_OP_START_EXPOSURE;
	jfieldID fid_OP_QUERY_EXPOSURE;
	jfieldID fid_OP_END_EXPOSURE;
	jfieldID fid_OP_GET_EXPOSURE;
	jfieldID fid_OP_GET_RECONSTRUCTION;
	jfieldID fid_OP_SET_RECONSTRUCTION;
	jfieldID fid_OP_GET_LASTERROR;
	jfieldID fid_OP_GET_MODELNUMBER;
	jfieldID fid_OP_SET_MODELNUMBER;
	jfieldID fid_OP_GET_SERIALNUMBER;
	jfieldID fid_OP_SET_SERIALNUMBER;
	jfieldID fid_OP_GET_INFO;
	jfieldID fid_OP_UPDATE_FX2;
	jfieldID fid_OP_UPDATE_DSP;
	jfieldID fid_OP_UPDATE_FPGA;
	jfieldID fid_OP_DUMP_RAM;
	jfieldID fid_OP_GET_CLOCKRATE;
	jfieldID fid_OP_SET_CLOCKRATE;
	jfieldID fid_OP_GET_PIXELMODE;
	jfieldID fid_OP_SET_PIXELMODE;
	jfieldID fid_OP_RESET;
	jfieldID fid_OP_GET_LASER;
	jfieldID fid_OP_SET_LASER;
	jfieldID fid_OP_GET_LASERTEMPINFO;
	jfieldID fid_OP_SET_LASERTEMPINFO;
	jfieldID fid_OP_GET_LASERPOWERINFO;
	jfieldID fid_OP_SET_LASERPOWERINFO;
	jfieldID fid_OP_GET_IOCONFIG;
	jfieldID fid_OP_SET_IOCONFIG;
	jfieldID fid_OP_GET_IOVALUE;
	jfieldID fid_OP_SET_IOVALUE;
	jfieldID fid_OP_GET_AFEPARAMS;
	jfieldID fid_OP_SET_AFEPARAMS;
	jfieldID fid_SHUTTER_STATE_CLOSE;
	jfieldID fid_SHUTTER_STATE_OPEN;
	jfieldID fid_SHUTTER_STATE_CURRENT;
	jfieldID fid_EXPOSURE_TYPE_NONE;
	jfieldID fid_EXPOSURE_TYPE_LIGHT;
	jfieldID fid_EXPOSURE_TYPE_DARK;
	jfieldID fid_EXPOSURE_TYPE_REFERENCE;
	jfieldID fid_TRANSFORM_ALGORITHM_HADAMARD;
	jfieldID fid_CLOCK_FREQUENCY_NA;
	jfieldID fid_CLOCK_FREQUENCY_DEFAULT;
	jfieldID fid_CLOCK_FREQUENCY_150KHZ;
	jfieldID fid_CLOCK_FREQUENCY_300KHZ;
	jfieldID fid_CLOCK_FREQUENCY_500KHZ;
	jfieldID fid_CLOCK_FREQUENCY_1000KHZ;
	jfieldID fid_PIXEL_MODE_NA;
	jfieldID fid_PIXEL_MODE_FULL_WELL;
	jfieldID fid_PIXEL_MODE_DARK_CURRENT;
	jfieldID fid_PIXEL_MODE_LINE_BINNING;
	jfieldID fid_ERROR_CODE_NONE;
	jfieldID fid_ERROR_CODE_MEMORY;
	jfieldID fid_ERROR_CODE_IO;
	jfieldID fid_ERROR_CODE_INTERRUPT;
	jfieldID fid_ERROR_CODE_TIMER;
	jfieldID fid_ERROR_CODE_I2C;
	jfieldID fid_ERROR_CODE_ADC;
	jfieldID fid_ERROR_CODE_AFE;
	jfieldID fid_ERROR_CODE_EEPROM_DSP;
	jfieldID fid_ERROR_CODE_EEPROM_USB;
	jfieldID fid_ERROR_CODE_USB_CONTROLLER;
	jfieldID fid_ERROR_CODE_VOLTAGE;
	jfieldID fid_ERROR_CODE_USB_COMMAND;
	jfieldID fid_ERROR_CODE_NON_SPECIFIC;
	jfieldID fid_ERROR_CODE_CALIBRATION;
	jfieldID fid_ERROR_CODE_FPGA;
	jfieldID fid_ERROR_TYPE_NONE;
	jfieldID fid_ERROR_TYPE_READ_WRITE_FAILURE;
	jfieldID fid_ERROR_TYPE_INVALID_ADDRESS;
	jfieldID fid_ERROR_TYPE_INVALID_PARAMETER;
	jfieldID fid_ERROR_TYPE_INVALID_STATE;
	jfieldID fid_ERROR_TYPE_ALLOCATION;
	jfieldID fid_ERROR_TYPE_LIMIT;
	jfieldID fid_ERROR_TYPE_TEST_FAILURE;
	jfieldID fid_ERROR_TYPE_NON_SPECIFIC;
	jfieldID fid_PACKET_SIZE;
	jfieldID fid_PIXELS_PER_MASK_ELEMENT;
	jfieldID fid_RECONSTRUCTION_DEPTH;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_MMSRAMANCONSTANTS_T
#define EXTERN_TYPEDEF_MMSRAMANCONSTANTS_T
	typedef void* MMSRAMANCONSTANTS_T;
#endif /* EXTERN_TYPEDEF_MMSRAMANCONSTANTS_T */

	EXPORTED MMSRAMANCONSTANTS_T MMSRamanConstants_Create();
	EXPORTED void MMSRamanConstants_Destroy(MMSRAMANCONSTANTS_T mmsramanconstants);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED MMSRAMANCONSTANTS_T STDCALL MMSRamanConstants_Create_stdcall();
	EXPORTED void STDCALL MMSRamanConstants_Destroy_stdcall(MMSRAMANCONSTANTS_T mmsramanconstants);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MMSRAMANCONSTANTS_H */
