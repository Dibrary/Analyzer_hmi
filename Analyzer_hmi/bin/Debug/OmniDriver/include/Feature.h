/**
 * File: Feature.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * Feature.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/Feature
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FEATURE_H
#define FEATURE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#include "FeatureListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
class FeatureListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Feature : public BaseJavaClass // CPPClass.tag001
{
public: 
	JString getFeatureName();
	void addFeatureListener(FeatureListener& param0);
	void removeFeatureListener(FeatureListener& param0);
	~Feature();
	// No public default Java constructor; creating one:
	Feature();
	// No public Java copy constructor; creating one:
	Feature(const Feature &that);
	// Creating assignment operator declaration:
	Feature &operator=(const Feature &that);

private:
	jmethodID mid_getFeatureName2540;
	jmethodID mid_addFeatureListener2541;
	jmethodID mid_removeFeatureListener2542;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_FEATURELISTENER_T
#define EXTERN_TYPEDEF_FEATURELISTENER_T
	typedef void* FEATURELISTENER_T;
#endif /* EXTERN_TYPEDEF_FEATURELISTENER_T */
#ifndef EXTERN_TYPEDEF_FEATURE_T
#define EXTERN_TYPEDEF_FEATURE_T
	typedef void* FEATURE_T;
#endif /* EXTERN_TYPEDEF_FEATURE_T */

	// No public default Java constructor; creating one:
	EXPORTED FEATURE_T Feature_Create();
	EXPORTED void Feature_getFeatureName(FEATURE_T c_feature, JSTRING_T retval);
	EXPORTED void Feature_addFeatureListener(FEATURE_T c_feature, FEATURELISTENER_T param0);
	EXPORTED void Feature_removeFeatureListener(FEATURE_T c_feature, FEATURELISTENER_T param0);
	EXPORTED void Feature_Destroy(FEATURE_T feature);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL Feature_getFeatureName_stdcall(FEATURE_T c_feature, JSTRING_T retval);
	EXPORTED void STDCALL Feature_addFeatureListener_stdcall(FEATURE_T c_feature, FEATURELISTENER_T param0);
	EXPORTED void STDCALL Feature_removeFeatureListener_stdcall(FEATURE_T c_feature, FEATURELISTENER_T param0);
	EXPORTED void STDCALL Feature_Destroy_stdcall(FEATURE_T feature);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FEATURE_H */
