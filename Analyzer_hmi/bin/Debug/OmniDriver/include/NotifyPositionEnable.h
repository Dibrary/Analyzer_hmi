/**
 * File: NotifyPositionEnable.h
 * Autogenerated on Fri Mar 23 13:38:23 EDT 2018 based on
 * NotifyPositionEnable.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/notifypositionenable/NotifyPositionEnable
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef NOTIFYPOSITIONENABLE_H
#define NOTIFYPOSITIONENABLE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Node.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Node;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED NotifyPositionEnable : public BaseJavaClass // CPPClass.tag001
{
public: 
	void notifyPositionEnable(Node& param0);
	~NotifyPositionEnable();
	// No public default Java constructor; creating one:
	NotifyPositionEnable();
	// No public Java copy constructor; creating one:
	NotifyPositionEnable(const NotifyPositionEnable &that);
	// Creating assignment operator declaration:
	NotifyPositionEnable &operator=(const NotifyPositionEnable &that);

private:
	jmethodID mid_notifyPositionEnable132;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_NOTIFYPOSITIONENABLE_T
#define EXTERN_TYPEDEF_NOTIFYPOSITIONENABLE_T
	typedef void* NOTIFYPOSITIONENABLE_T;
#endif /* EXTERN_TYPEDEF_NOTIFYPOSITIONENABLE_T */

	// No public default Java constructor; creating one:
	EXPORTED NOTIFYPOSITIONENABLE_T NotifyPositionEnable_Create();
	EXPORTED void NotifyPositionEnable_notifyPositionEnable(NOTIFYPOSITIONENABLE_T c_notify_position_enable, NODE_T param0);
	EXPORTED void NotifyPositionEnable_Destroy(NOTIFYPOSITIONENABLE_T notify_position_enable);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL NotifyPositionEnable_notifyPositionEnable_stdcall(NOTIFYPOSITIONENABLE_T c_notify_position_enable, NODE_T param0);
	EXPORTED void STDCALL NotifyPositionEnable_Destroy_stdcall(NOTIFYPOSITIONENABLE_T notify_position_enable);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* NOTIFYPOSITIONENABLE_H */
