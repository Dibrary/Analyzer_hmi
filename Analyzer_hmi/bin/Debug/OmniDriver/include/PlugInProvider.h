/**
 * File: PlugInProvider.h
 * Autogenerated on Fri Mar 23 13:38:39 EDT 2018 based on
 * PlugInProvider.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/pluginprovider/PlugInProvider
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef PLUGINPROVIDER_H
#define PLUGINPROVIDER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerPlugInArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerPlugInArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED PlugInProvider : public BaseJavaClass // CPPClass.tag001
{
public: 
	SpectrometerPlugInArray getPlugIns();
	CharArray initializePlugIns();
	void detectPlugIns();
	short isPlugInDetected(int param0);
	int getNumberOfPlugIns();
	~PlugInProvider();
	// No public default Java constructor; creating one:
	PlugInProvider();
	// No public Java copy constructor; creating one:
	PlugInProvider(const PlugInProvider &that);
	// Creating assignment operator declaration:
	PlugInProvider &operator=(const PlugInProvider &that);

private:
	jmethodID mid_getPlugIns1932;
	jmethodID mid_initializePlugIns1933;
	jmethodID mid_detectPlugIns1934;
	jmethodID mid_isPlugInDetected1935;
	jmethodID mid_getNumberOfPlugIns1936;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
	typedef void* SPECTROMETERPLUGINARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T */
#ifndef EXTERN_TYPEDEF_PLUGINPROVIDER_T
#define EXTERN_TYPEDEF_PLUGINPROVIDER_T
	typedef void* PLUGINPROVIDER_T;
#endif /* EXTERN_TYPEDEF_PLUGINPROVIDER_T */

	// No public default Java constructor; creating one:
	EXPORTED PLUGINPROVIDER_T PlugInProvider_Create();
	EXPORTED void PlugInProvider_getPlugIns(PLUGINPROVIDER_T c_plug_in_provider, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED void PlugInProvider_initializePlugIns(PLUGINPROVIDER_T c_plug_in_provider, CHARARRAY_T retval);
	EXPORTED void PlugInProvider_detectPlugIns(PLUGINPROVIDER_T c_plug_in_provider);
	EXPORTED short PlugInProvider_isPlugInDetected(PLUGINPROVIDER_T c_plug_in_provider, int param0);
	EXPORTED int PlugInProvider_getNumberOfPlugIns(PLUGINPROVIDER_T c_plug_in_provider);
	EXPORTED void PlugInProvider_Destroy(PLUGINPROVIDER_T plug_in_provider);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL PlugInProvider_getPlugIns_stdcall(PLUGINPROVIDER_T c_plug_in_provider, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED void STDCALL PlugInProvider_initializePlugIns_stdcall(PLUGINPROVIDER_T c_plug_in_provider, CHARARRAY_T retval);
	EXPORTED void STDCALL PlugInProvider_detectPlugIns_stdcall(PLUGINPROVIDER_T c_plug_in_provider);
	EXPORTED short STDCALL PlugInProvider_isPlugInDetected_stdcall(PLUGINPROVIDER_T c_plug_in_provider, int param0);
	EXPORTED int STDCALL PlugInProvider_getNumberOfPlugIns_stdcall(PLUGINPROVIDER_T c_plug_in_provider);
	EXPORTED void STDCALL PlugInProvider_Destroy_stdcall(PLUGINPROVIDER_T plug_in_provider);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* PLUGINPROVIDER_H */
