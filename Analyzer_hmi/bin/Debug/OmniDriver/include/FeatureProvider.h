/**
 * File: FeatureProvider.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * FeatureProvider.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/FeatureProvider
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FEATUREPROVIDER_H
#define FEATUREPROVIDER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "GUIProviderArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class GUIProviderArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED FeatureProvider : public BaseJavaClass // CPPClass.tag001
{
public: 
	GUIProviderArray getGUIFeatures();
	~FeatureProvider();
	// No public default Java constructor; creating one:
	FeatureProvider();
	// No public Java copy constructor; creating one:
	FeatureProvider(const FeatureProvider &that);
	// Creating assignment operator declaration:
	FeatureProvider &operator=(const FeatureProvider &that);

private:
	jmethodID mid_getGUIFeatures2556;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_FEATUREPROVIDER_T
#define EXTERN_TYPEDEF_FEATUREPROVIDER_T
	typedef void* FEATUREPROVIDER_T;
#endif /* EXTERN_TYPEDEF_FEATUREPROVIDER_T */

	// No public default Java constructor; creating one:
	EXPORTED FEATUREPROVIDER_T FeatureProvider_Create();
	EXPORTED void FeatureProvider_getGUIFeatures(FEATUREPROVIDER_T c_feature_provider, GUIPROVIDERARRAY_T retval);
	EXPORTED void FeatureProvider_Destroy(FEATUREPROVIDER_T feature_provider);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL FeatureProvider_getGUIFeatures_stdcall(FEATUREPROVIDER_T c_feature_provider, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL FeatureProvider_Destroy_stdcall(FEATUREPROVIDER_T feature_provider);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FEATUREPROVIDER_H */
