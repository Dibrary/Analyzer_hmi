/**
 * File: SpectrometerExposure.h
 * Autogenerated on Fri Mar 23 13:38:45 EDT 2018 based on
 * SpectrometerExposure.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectra/SpectrometerExposure
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTROMETEREXPOSURE_H
#define SPECTROMETEREXPOSURE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "EventObject.h"
#include "ExposureImageable.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class EventObject;
class ExposureImageable;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SpectrometerExposure : public EventObject // CPPClass.tag001
{
public: 
	SpectrometerExposure(ExposureImageable& source);
	signed char getShutterState();
	void setShutterState(signed char shutterState);
	signed char getExposureType();
	void setExposureType(signed char exposureType);
	short getExposuresToAverage();
	void setExposuresToAverage(short exposuresToAverage);
#if 0
	ArrayOfArrays getImageData();
#endif
#if 0
	void setImageData(ArrayOfArrays& imageData);
#endif
	JString getStrExposureType();
	int getBitsPerPixel();
	void setBitsPerPixel(int bitsPerPixel);
	int getExposureTime();
	void setExposureTime(int exposureTime);
	~SpectrometerExposure();
	// No public default Java constructor; creating one:
	SpectrometerExposure();
	// No public Java copy constructor; creating one:
	SpectrometerExposure(const SpectrometerExposure &that);
	// Creating assignment operator declaration:
	SpectrometerExposure &operator=(const SpectrometerExposure &that);

private:
	jmethodID mid_SpectrometerExposure2785;
	jmethodID mid_getShutterState2786;
	jmethodID mid_setShutterState2787;
	jmethodID mid_getExposureType2788;
	jmethodID mid_setExposureType2789;
	jmethodID mid_getExposuresToAverage2790;
	jmethodID mid_setExposuresToAverage2791;
	jmethodID mid_getImageData2792;
	jmethodID mid_setImageData2793;
	jmethodID mid_getStrExposureType2794;
	jmethodID mid_getBitsPerPixel2795;
	jmethodID mid_setBitsPerPixel2796;
	jmethodID mid_getExposureTime2797;
	jmethodID mid_setExposureTime2798;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_EVENTOBJECT_T
#define EXTERN_TYPEDEF_EVENTOBJECT_T
	typedef void* EVENTOBJECT_T;
#endif /* EXTERN_TYPEDEF_EVENTOBJECT_T */
#ifndef EXTERN_TYPEDEF_EXPOSUREIMAGEABLE_T
#define EXTERN_TYPEDEF_EXPOSUREIMAGEABLE_T
	typedef void* EXPOSUREIMAGEABLE_T;
#endif /* EXTERN_TYPEDEF_EXPOSUREIMAGEABLE_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETEREXPOSURE_T
#define EXTERN_TYPEDEF_SPECTROMETEREXPOSURE_T
	typedef void* SPECTROMETEREXPOSURE_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETEREXPOSURE_T */

	// No public default Java constructor; creating one:
	EXPORTED SPECTROMETEREXPOSURE_T SpectrometerExposure_Create();
	EXPORTED SPECTROMETEREXPOSURE_T SpectrometerExposure_Create_1(EXPOSUREIMAGEABLE_T source);
	EXPORTED signed char SpectrometerExposure_getShutterState(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void SpectrometerExposure_setShutterState(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, signed char shutterState);
	EXPORTED signed char SpectrometerExposure_getExposureType(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void SpectrometerExposure_setExposureType(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, signed char exposureType);
	EXPORTED short SpectrometerExposure_getExposuresToAverage(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void SpectrometerExposure_setExposuresToAverage(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, short exposuresToAverage);
	EXPORTED void SpectrometerExposure_getImageData(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, ARRAYOFARRAYS_T retval);
	EXPORTED void SpectrometerExposure_setImageData(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, ARRAYOFARRAYS_T imageData);
	EXPORTED void SpectrometerExposure_getStrExposureType(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, JSTRING_T retval);
	EXPORTED int SpectrometerExposure_getBitsPerPixel(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void SpectrometerExposure_setBitsPerPixel(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, int bitsPerPixel);
	EXPORTED int SpectrometerExposure_getExposureTime(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void SpectrometerExposure_setExposureTime(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, int exposureTime);
	EXPORTED void SpectrometerExposure_Destroy(SPECTROMETEREXPOSURE_T spectrometer_exposure);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SPECTROMETEREXPOSURE_T STDCALL SpectrometerExposure_Create_stdcall_1(EXPOSUREIMAGEABLE_T source);
	EXPORTED signed char STDCALL SpectrometerExposure_getShutterState_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void STDCALL SpectrometerExposure_setShutterState_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, signed char shutterState);
	EXPORTED signed char STDCALL SpectrometerExposure_getExposureType_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void STDCALL SpectrometerExposure_setExposureType_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, signed char exposureType);
	EXPORTED short STDCALL SpectrometerExposure_getExposuresToAverage_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void STDCALL SpectrometerExposure_setExposuresToAverage_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, short exposuresToAverage);
	EXPORTED void STDCALL SpectrometerExposure_getImageData_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, ARRAYOFARRAYS_T retval);
	EXPORTED void STDCALL SpectrometerExposure_setImageData_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, ARRAYOFARRAYS_T imageData);
	EXPORTED void STDCALL SpectrometerExposure_getStrExposureType_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, JSTRING_T retval);
	EXPORTED int STDCALL SpectrometerExposure_getBitsPerPixel_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void STDCALL SpectrometerExposure_setBitsPerPixel_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, int bitsPerPixel);
	EXPORTED int STDCALL SpectrometerExposure_getExposureTime_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure);
	EXPORTED void STDCALL SpectrometerExposure_setExposureTime_stdcall(SPECTROMETEREXPOSURE_T c_spectrometer_exposure, int exposureTime);
	EXPORTED void STDCALL SpectrometerExposure_Destroy_stdcall(SPECTROMETEREXPOSURE_T spectrometer_exposure);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTROMETEREXPOSURE_H */
