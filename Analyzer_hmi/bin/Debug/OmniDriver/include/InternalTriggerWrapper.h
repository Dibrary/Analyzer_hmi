/**
 * File: InternalTriggerWrapper.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * InternalTriggerWrapper.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/internaltrigger/InternalTriggerWrapper
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INTERNALTRIGGERWRAPPER_H
#define INTERNALTRIGGERWRAPPER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "InternalTrigger.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class InternalTrigger;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED InternalTriggerWrapper : public BaseJavaClass // CPPClass.tag001
{
public: 
	InternalTriggerWrapper(InternalTrigger& internalTrigger);
	int setInternalTriggerPeriodMicros(int microseconds);
	int getInternalTriggerPeriodMicros();
	int getInternalTriggerPeriodMinimum();
	int getInternalTriggerPeriodMaximum();
	int getInternalTriggerPeriodIncrement();
	int setTriggerSource(int triggerSourceCode);
	int getTriggerSource();
	~InternalTriggerWrapper();
	// No public default Java constructor; creating one:
	InternalTriggerWrapper();
	// No public Java copy constructor; creating one:
	InternalTriggerWrapper(const InternalTriggerWrapper &that);
	// Creating assignment operator declaration:
	InternalTriggerWrapper &operator=(const InternalTriggerWrapper &that);

private:
	jmethodID mid_InternalTriggerWrapper1590;
	jmethodID mid_setInternalTriggerPeriodMicros1591;
	jmethodID mid_getInternalTriggerPeriodMicros1592;
	jmethodID mid_getInternalTriggerPeriodMinimum1593;
	jmethodID mid_getInternalTriggerPeriodMaximum1594;
	jmethodID mid_getInternalTriggerPeriodIncrement1595;
	jmethodID mid_setTriggerSource1596;
	jmethodID mid_getTriggerSource1597;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_INTERNALTRIGGER_T
#define EXTERN_TYPEDEF_INTERNALTRIGGER_T
	typedef void* INTERNALTRIGGER_T;
#endif /* EXTERN_TYPEDEF_INTERNALTRIGGER_T */
#ifndef EXTERN_TYPEDEF_INTERNALTRIGGERWRAPPER_T
#define EXTERN_TYPEDEF_INTERNALTRIGGERWRAPPER_T
	typedef void* INTERNALTRIGGERWRAPPER_T;
#endif /* EXTERN_TYPEDEF_INTERNALTRIGGERWRAPPER_T */

	// No public default Java constructor; creating one:
	EXPORTED INTERNALTRIGGERWRAPPER_T InternalTriggerWrapper_Create();
	EXPORTED INTERNALTRIGGERWRAPPER_T InternalTriggerWrapper_Create_1(INTERNALTRIGGER_T internalTrigger);
	EXPORTED int InternalTriggerWrapper_setInternalTriggerPeriodMicros(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper, int microseconds);
	EXPORTED int InternalTriggerWrapper_getInternalTriggerPeriodMicros(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int InternalTriggerWrapper_getInternalTriggerPeriodMinimum(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int InternalTriggerWrapper_getInternalTriggerPeriodMaximum(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int InternalTriggerWrapper_getInternalTriggerPeriodIncrement(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int InternalTriggerWrapper_setTriggerSource(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper, int triggerSourceCode);
	EXPORTED int InternalTriggerWrapper_getTriggerSource(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED void InternalTriggerWrapper_Destroy(INTERNALTRIGGERWRAPPER_T internal_trigger_wrapper);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED INTERNALTRIGGERWRAPPER_T STDCALL InternalTriggerWrapper_Create_stdcall_1(INTERNALTRIGGER_T internalTrigger);
	EXPORTED int STDCALL InternalTriggerWrapper_setInternalTriggerPeriodMicros_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper, int microseconds);
	EXPORTED int STDCALL InternalTriggerWrapper_getInternalTriggerPeriodMicros_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int STDCALL InternalTriggerWrapper_getInternalTriggerPeriodMinimum_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int STDCALL InternalTriggerWrapper_getInternalTriggerPeriodMaximum_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int STDCALL InternalTriggerWrapper_getInternalTriggerPeriodIncrement_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED int STDCALL InternalTriggerWrapper_setTriggerSource_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper, int triggerSourceCode);
	EXPORTED int STDCALL InternalTriggerWrapper_getTriggerSource_stdcall(INTERNALTRIGGERWRAPPER_T c_internal_trigger_wrapper);
	EXPORTED void STDCALL InternalTriggerWrapper_Destroy_stdcall(INTERNALTRIGGERWRAPPER_T internal_trigger_wrapper);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INTERNALTRIGGERWRAPPER_H */
