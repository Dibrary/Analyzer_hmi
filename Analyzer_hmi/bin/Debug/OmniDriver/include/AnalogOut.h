/**
 * File: AnalogOut.h
 * Autogenerated on Fri Mar 23 13:38:30 EDT 2018 based on
 * AnalogOut.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/analogout/AnalogOut
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ANALOGOUT_H
#define ANALOGOUT_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED AnalogOut : public BaseJavaClass // CPPClass.tag001
{
public: 
	void setDACCounts(int param0, int param1);
	int getDACMinimum();
	int getDACMaximum();
	int getDACIncrement();
	double analogOutCountsToVolts(int param0);
	short isDACPresent();
	int getDACPins();
	~AnalogOut();
	// No public default Java constructor; creating one:
	AnalogOut();
	// No public Java copy constructor; creating one:
	AnalogOut(const AnalogOut &that);
	// Creating assignment operator declaration:
	AnalogOut &operator=(const AnalogOut &that);

private:
	jmethodID mid_setDACCounts793;
	jmethodID mid_getDACMinimum794;
	jmethodID mid_getDACMaximum795;
	jmethodID mid_getDACIncrement796;
	jmethodID mid_analogOutCountsToVolts797;
	jmethodID mid_isDACPresent798;
	jmethodID mid_getDACPins799;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_ANALOGOUT_T
#define EXTERN_TYPEDEF_ANALOGOUT_T
	typedef void* ANALOGOUT_T;
#endif /* EXTERN_TYPEDEF_ANALOGOUT_T */

	// No public default Java constructor; creating one:
	EXPORTED ANALOGOUT_T AnalogOut_Create();
	EXPORTED void AnalogOut_setDACCounts(ANALOGOUT_T c_analog_out, int param0, int param1);
	EXPORTED int AnalogOut_getDACMinimum(ANALOGOUT_T c_analog_out);
	EXPORTED int AnalogOut_getDACMaximum(ANALOGOUT_T c_analog_out);
	EXPORTED int AnalogOut_getDACIncrement(ANALOGOUT_T c_analog_out);
	EXPORTED double AnalogOut_analogOutCountsToVolts(ANALOGOUT_T c_analog_out, int param0);
	EXPORTED short AnalogOut_isDACPresent(ANALOGOUT_T c_analog_out);
	EXPORTED int AnalogOut_getDACPins(ANALOGOUT_T c_analog_out);
	EXPORTED void AnalogOut_Destroy(ANALOGOUT_T analog_out);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL AnalogOut_setDACCounts_stdcall(ANALOGOUT_T c_analog_out, int param0, int param1);
	EXPORTED int STDCALL AnalogOut_getDACMinimum_stdcall(ANALOGOUT_T c_analog_out);
	EXPORTED int STDCALL AnalogOut_getDACMaximum_stdcall(ANALOGOUT_T c_analog_out);
	EXPORTED int STDCALL AnalogOut_getDACIncrement_stdcall(ANALOGOUT_T c_analog_out);
	EXPORTED double STDCALL AnalogOut_analogOutCountsToVolts_stdcall(ANALOGOUT_T c_analog_out, int param0);
	EXPORTED short STDCALL AnalogOut_isDACPresent_stdcall(ANALOGOUT_T c_analog_out);
	EXPORTED int STDCALL AnalogOut_getDACPins_stdcall(ANALOGOUT_T c_analog_out);
	EXPORTED void STDCALL AnalogOut_Destroy_stdcall(ANALOGOUT_T analog_out);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ANALOGOUT_H */
