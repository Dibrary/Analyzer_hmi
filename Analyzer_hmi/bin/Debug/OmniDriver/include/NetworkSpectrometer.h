/**
 * File: NetworkSpectrometer.h
 * Autogenerated on Fri Mar 23 13:38:46 EDT 2018 based on
 * NetworkSpectrometer.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/NetworkSpectrometer
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef NETWORKSPECTROMETER_H
#define NETWORKSPECTROMETER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBSpectrometer.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBSpectrometer;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED NetworkSpectrometer : public USBSpectrometer // CPPClass.tag001
{
public: 
	NetworkSpectrometer();
	JString getAddress();
	int getPort();
	short isNetworkSpectrometer();
	~NetworkSpectrometer();
	// No public Java copy constructor; creating one:
	NetworkSpectrometer(const NetworkSpectrometer &that);
	// Creating assignment operator declaration:
	NetworkSpectrometer &operator=(const NetworkSpectrometer &that);

private:
	jmethodID mid_NetworkSpectrometer2914;
	jmethodID mid_getAddress2915;
	jmethodID mid_getPort2916;
	jmethodID mid_isNetworkSpectrometer2917;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_NETWORKSPECTROMETER_T
#define EXTERN_TYPEDEF_NETWORKSPECTROMETER_T
	typedef void* NETWORKSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_NETWORKSPECTROMETER_T */

	EXPORTED NETWORKSPECTROMETER_T NetworkSpectrometer_Create();
	EXPORTED void NetworkSpectrometer_getAddress(NETWORKSPECTROMETER_T c_network_spectrometer, JSTRING_T retval);
	EXPORTED int NetworkSpectrometer_getPort(NETWORKSPECTROMETER_T c_network_spectrometer);
	EXPORTED short NetworkSpectrometer_isNetworkSpectrometer(NETWORKSPECTROMETER_T c_network_spectrometer);
	EXPORTED void NetworkSpectrometer_Destroy(NETWORKSPECTROMETER_T network_spectrometer);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED NETWORKSPECTROMETER_T STDCALL NetworkSpectrometer_Create_stdcall();
	EXPORTED void STDCALL NetworkSpectrometer_getAddress_stdcall(NETWORKSPECTROMETER_T c_network_spectrometer, JSTRING_T retval);
	EXPORTED int STDCALL NetworkSpectrometer_getPort_stdcall(NETWORKSPECTROMETER_T c_network_spectrometer);
	EXPORTED short STDCALL NetworkSpectrometer_isNetworkSpectrometer_stdcall(NETWORKSPECTROMETER_T c_network_spectrometer);
	EXPORTED void STDCALL NetworkSpectrometer_Destroy_stdcall(NETWORKSPECTROMETER_T network_spectrometer);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* NETWORKSPECTROMETER_H */
