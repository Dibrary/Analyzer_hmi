/**
 * File: DefaultTableModel.h
 * Autogenerated on Mon Aug 04 16:04:22 EDT 2008 based on
 * DefaultTableModel.java
 * for the Java class
 * javax/swing/table/DefaultTableModel
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef DEFAULTTABLEMODEL_H
#define DEFAULTTABLEMODEL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "AbstractTableModel.h"
#include "JString.h"
#include "Vector.h"
#include "TableModelEvent.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class AbstractTableModel;
class JString;
class Vector;
class TableModelEvent;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED DefaultTableModel : public AbstractTableModel // CPPClass.getClassDeclaration
{
public: 
	int getColumnCount();
	int getRowCount();
	DefaultTableModel();
	void removeRow(int param0);
	void setColumnCount(int param0);
	void setNumRows(int param0);
	void setRowCount(int param0);
	DefaultTableModel(int param0, int param1);
	unsigned char isCellEditable(int param0, int param1);
	void moveRow(int param0, int param1, int param2);
	JString getColumnName(int param0);
	Vector getDataVector();
	void insertRow(int param0, Vector& param1);
	void addRow(Vector& param0);
	void setColumnIdentifiers(Vector& param0);
	DefaultTableModel(Vector& param0, int param1);
	void newDataAvailable(TableModelEvent& param0);
	void newRowsAdded(TableModelEvent& param0);
	void rowsRemoved(TableModelEvent& param0);
	DefaultTableModel(Vector& param0, Vector& param1);
	void setDataVector(Vector& param0, Vector& param1);
	~DefaultTableModel();
	// No public Java copy constructor; creating one:
	DefaultTableModel(const DefaultTableModel &that);
	// Creating assignment operator declaration:
	DefaultTableModel &operator=(const DefaultTableModel &that);

private:
	jmethodID mid_getColumnCount165;
	jmethodID mid_getRowCount166;
	jmethodID mid_DefaultTableModel167;
	jmethodID mid_removeRow168;
	jmethodID mid_setColumnCount169;
	jmethodID mid_setNumRows170;
	jmethodID mid_setRowCount171;
	jmethodID mid_DefaultTableModel172;
	jmethodID mid_isCellEditable173;
	jmethodID mid_moveRow174;
	jmethodID mid_getColumnName175;
	jmethodID mid_getDataVector176;
	jmethodID mid_insertRow177;
	jmethodID mid_addRow178;
	jmethodID mid_setColumnIdentifiers179;
	jmethodID mid_DefaultTableModel180;
	jmethodID mid_newDataAvailable181;
	jmethodID mid_newRowsAdded182;
	jmethodID mid_rowsRemoved183;
	jmethodID mid_DefaultTableModel184;
	jmethodID mid_setDataVector185;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_ABSTRACTTABLEMODEL_T
#define EXTERN_TYPEDEF_ABSTRACTTABLEMODEL_T
	typedef void* ABSTRACTTABLEMODEL_T;
#endif /* EXTERN_TYPEDEF_ABSTRACTTABLEMODEL_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_VECTOR_T
#define EXTERN_TYPEDEF_VECTOR_T
	typedef void* VECTOR_T;
#endif /* EXTERN_TYPEDEF_VECTOR_T */
#ifndef EXTERN_TYPEDEF_TABLEMODELEVENT_T
#define EXTERN_TYPEDEF_TABLEMODELEVENT_T
	typedef void* TABLEMODELEVENT_T;
#endif /* EXTERN_TYPEDEF_TABLEMODELEVENT_T */
#ifndef EXTERN_TYPEDEF_DEFAULTTABLEMODEL_T
#define EXTERN_TYPEDEF_DEFAULTTABLEMODEL_T
	typedef void* DEFAULTTABLEMODEL_T;
#endif /* EXTERN_TYPEDEF_DEFAULTTABLEMODEL_T */

	EXPORTED int DefaultTableModel_getColumnCount(DEFAULTTABLEMODEL_T c_default_table_model);
	EXPORTED int DefaultTableModel_getRowCount(DEFAULTTABLEMODEL_T c_default_table_model);
	EXPORTED DEFAULTTABLEMODEL_T DefaultTableModel_Create();
	EXPORTED void DefaultTableModel_removeRow(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED void DefaultTableModel_setColumnCount(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED void DefaultTableModel_setNumRows(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED void DefaultTableModel_setRowCount(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED DEFAULTTABLEMODEL_T DefaultTableModel_Create_1(int param0, int param1);
	EXPORTED unsigned char DefaultTableModel_isCellEditable(DEFAULTTABLEMODEL_T c_default_table_model, int param0, int param1);
	EXPORTED void DefaultTableModel_moveRow(DEFAULTTABLEMODEL_T c_default_table_model, int param0, int param1, int param2);
	EXPORTED void DefaultTableModel_getColumnName(DEFAULTTABLEMODEL_T c_default_table_model, int param0, JSTRING_T retval);
	EXPORTED void DefaultTableModel_getDataVector(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T retval);
	EXPORTED void DefaultTableModel_insertRow_1(DEFAULTTABLEMODEL_T c_default_table_model, int param0, VECTOR_T param1);
	EXPORTED void DefaultTableModel_addRow_1(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T param0);
	EXPORTED void DefaultTableModel_setColumnIdentifiers_1(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T param0);
	EXPORTED DEFAULTTABLEMODEL_T DefaultTableModel_Create_3(VECTOR_T param0, int param1);
	EXPORTED void DefaultTableModel_newDataAvailable(DEFAULTTABLEMODEL_T c_default_table_model, TABLEMODELEVENT_T param0);
	EXPORTED void DefaultTableModel_newRowsAdded(DEFAULTTABLEMODEL_T c_default_table_model, TABLEMODELEVENT_T param0);
	EXPORTED void DefaultTableModel_rowsRemoved(DEFAULTTABLEMODEL_T c_default_table_model, TABLEMODELEVENT_T param0);
	EXPORTED DEFAULTTABLEMODEL_T DefaultTableModel_Create_5(VECTOR_T param0, VECTOR_T param1);
	EXPORTED void DefaultTableModel_setDataVector_1(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T param0, VECTOR_T param1);
	EXPORTED void DefaultTableModel_Destroy(DEFAULTTABLEMODEL_T default_table_model);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED int STDCALL DefaultTableModel_getColumnCount_stdcall(DEFAULTTABLEMODEL_T c_default_table_model);
	EXPORTED int STDCALL DefaultTableModel_getRowCount_stdcall(DEFAULTTABLEMODEL_T c_default_table_model);
	EXPORTED DEFAULTTABLEMODEL_T STDCALL DefaultTableModel_Create_stdcall();
	EXPORTED void STDCALL DefaultTableModel_removeRow_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED void STDCALL DefaultTableModel_setColumnCount_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED void STDCALL DefaultTableModel_setNumRows_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED void STDCALL DefaultTableModel_setRowCount_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0);
	EXPORTED DEFAULTTABLEMODEL_T STDCALL DefaultTableModel_Create_stdcall_1(int param0, int param1);
	EXPORTED unsigned char STDCALL DefaultTableModel_isCellEditable_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0, int param1);
	EXPORTED void STDCALL DefaultTableModel_moveRow_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0, int param1, int param2);
	EXPORTED void STDCALL DefaultTableModel_getColumnName_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, int param0, JSTRING_T retval);
	EXPORTED void STDCALL DefaultTableModel_getDataVector_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T retval);
	EXPORTED void STDCALL DefaultTableModel_insertRow_stdcall_1(DEFAULTTABLEMODEL_T c_default_table_model, int param0, VECTOR_T param1);
	EXPORTED void STDCALL DefaultTableModel_addRow_stdcall_1(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T param0);
	EXPORTED void STDCALL DefaultTableModel_setColumnIdentifiers_stdcall_1(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T param0);
	EXPORTED DEFAULTTABLEMODEL_T STDCALL DefaultTableModel_Create_stdcall_3(VECTOR_T param0, int param1);
	EXPORTED void STDCALL DefaultTableModel_newDataAvailable_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, TABLEMODELEVENT_T param0);
	EXPORTED void STDCALL DefaultTableModel_newRowsAdded_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, TABLEMODELEVENT_T param0);
	EXPORTED void STDCALL DefaultTableModel_rowsRemoved_stdcall(DEFAULTTABLEMODEL_T c_default_table_model, TABLEMODELEVENT_T param0);
	EXPORTED DEFAULTTABLEMODEL_T STDCALL DefaultTableModel_Create_stdcall_5(VECTOR_T param0, VECTOR_T param1);
	EXPORTED void STDCALL DefaultTableModel_setDataVector_stdcall_1(DEFAULTTABLEMODEL_T c_default_table_model, VECTOR_T param0, VECTOR_T param1);
	EXPORTED void STDCALL DefaultTableModel_Destroy_stdcall(DEFAULTTABLEMODEL_T default_table_model);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* DEFAULTTABLEMODEL_H */
