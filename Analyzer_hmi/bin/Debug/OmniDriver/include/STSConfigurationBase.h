/**
 * File: STSConfigurationBase.h
 * Autogenerated on Fri Mar 23 13:39:14 EDT 2018 based on
 * STSConfigurationBase.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/sts/STSConfigurationBase
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef STSCONFIGURATIONBASE_H
#define STSCONFIGURATIONBASE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Configuration.h"
#include "Spectrometer.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Configuration;
class Spectrometer;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED STSConfigurationBase : public Configuration // CPPClass.tag001
{
public: 
	STSConfigurationBase(Spectrometer& spec);
	void getConfigurationFromSpectrometer();
	void setConfigurationToSpectrometer();
	short isBenchDefined();
	short isCPLDVersionDefined();
	short isDetectorSerialNumberDefined();
	short isSpectrometerConfigurationDefined();
	~STSConfigurationBase();
	// No public default Java constructor; creating one:
	STSConfigurationBase();
	// No public Java copy constructor; creating one:
	STSConfigurationBase(const STSConfigurationBase &that);
	// Creating assignment operator declaration:
	STSConfigurationBase &operator=(const STSConfigurationBase &that);

private:
	jmethodID mid_STSConfigurationBase5812;
	jmethodID mid_getConfigurationFromSpectrometer5813;
	jmethodID mid_setConfigurationToSpectrometer5814;
	jmethodID mid_isBenchDefined5815;
	jmethodID mid_isCPLDVersionDefined5816;
	jmethodID mid_isDetectorSerialNumberDefined5817;
	jmethodID mid_isSpectrometerConfigurationDefined5818;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_CONFIGURATION_T
#define EXTERN_TYPEDEF_CONFIGURATION_T
	typedef void* CONFIGURATION_T;
#endif /* EXTERN_TYPEDEF_CONFIGURATION_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_STSCONFIGURATIONBASE_T
#define EXTERN_TYPEDEF_STSCONFIGURATIONBASE_T
	typedef void* STSCONFIGURATIONBASE_T;
#endif /* EXTERN_TYPEDEF_STSCONFIGURATIONBASE_T */

	// No public default Java constructor; creating one:
	EXPORTED STSCONFIGURATIONBASE_T STSConfigurationBase_Create();
	EXPORTED STSCONFIGURATIONBASE_T STSConfigurationBase_Create_1(SPECTROMETER_T spec);
	EXPORTED void STSConfigurationBase_getConfigurationFromSpectrometer(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED void STSConfigurationBase_setConfigurationToSpectrometer(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STSConfigurationBase_isBenchDefined(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STSConfigurationBase_isCPLDVersionDefined(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STSConfigurationBase_isDetectorSerialNumberDefined(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STSConfigurationBase_isSpectrometerConfigurationDefined(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED void STSConfigurationBase_Destroy(STSCONFIGURATIONBASE_T stsconfigurationbase);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED STSCONFIGURATIONBASE_T STDCALL STSConfigurationBase_Create_stdcall_1(SPECTROMETER_T spec);
	EXPORTED void STDCALL STSConfigurationBase_getConfigurationFromSpectrometer_stdcall(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED void STDCALL STSConfigurationBase_setConfigurationToSpectrometer_stdcall(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STDCALL STSConfigurationBase_isBenchDefined_stdcall(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STDCALL STSConfigurationBase_isCPLDVersionDefined_stdcall(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STDCALL STSConfigurationBase_isDetectorSerialNumberDefined_stdcall(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED short STDCALL STSConfigurationBase_isSpectrometerConfigurationDefined_stdcall(STSCONFIGURATIONBASE_T c_stsconfigurationbase);
	EXPORTED void STDCALL STSConfigurationBase_Destroy_stdcall(STSCONFIGURATIONBASE_T stsconfigurationbase);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* STSCONFIGURATIONBASE_H */
