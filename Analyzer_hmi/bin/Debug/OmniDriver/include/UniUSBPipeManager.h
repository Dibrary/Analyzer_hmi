/**
 * File: UniUSBPipeManager.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * UniUSBPipeManager.java
 * for the Java class
 * com/oceanoptics/uniusb/UniUSBPipeManager
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef UNIUSBPIPEMANAGER_H
#define UNIUSBPIPEMANAGER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "EndpointToPipeMapping.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class EndpointToPipeMapping;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED UniUSBPipeManager : public BaseJavaClass // CPPClass.tag001
{
public: 
	UniUSBPipeManager();
	void addDeviceMapping(long long devID, EndpointToPipeMapping& mapping);
	int getPipe(long long devID, short endpoint);
	void removeDeviceMapping(long long devID);
	~UniUSBPipeManager();
	// No public Java copy constructor; creating one:
	UniUSBPipeManager(const UniUSBPipeManager &that);
	// Creating assignment operator declaration:
	UniUSBPipeManager &operator=(const UniUSBPipeManager &that);

private:
	jmethodID mid_UniUSBPipeManager6672;
	jmethodID mid_addDeviceMapping6673;
	jmethodID mid_getPipe6674;
	jmethodID mid_removeDeviceMapping6675;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_ENDPOINTTOPIPEMAPPING_T
#define EXTERN_TYPEDEF_ENDPOINTTOPIPEMAPPING_T
	typedef void* ENDPOINTTOPIPEMAPPING_T;
#endif /* EXTERN_TYPEDEF_ENDPOINTTOPIPEMAPPING_T */
#ifndef EXTERN_TYPEDEF_UNIUSBPIPEMANAGER_T
#define EXTERN_TYPEDEF_UNIUSBPIPEMANAGER_T
	typedef void* UNIUSBPIPEMANAGER_T;
#endif /* EXTERN_TYPEDEF_UNIUSBPIPEMANAGER_T */

	EXPORTED UNIUSBPIPEMANAGER_T UniUSBPipeManager_Create();
	EXPORTED void UniUSBPipeManager_addDeviceMapping(UNIUSBPIPEMANAGER_T c_uni_u_s_b_pipe_manager, long long devID, ENDPOINTTOPIPEMAPPING_T mapping);
	EXPORTED int UniUSBPipeManager_getPipe(UNIUSBPIPEMANAGER_T c_uni_u_s_b_pipe_manager, long long devID, short endpoint);
	EXPORTED void UniUSBPipeManager_removeDeviceMapping(UNIUSBPIPEMANAGER_T c_uni_u_s_b_pipe_manager, long long devID);
	EXPORTED void UniUSBPipeManager_Destroy(UNIUSBPIPEMANAGER_T uni_u_s_b_pipe_manager);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED UNIUSBPIPEMANAGER_T STDCALL UniUSBPipeManager_Create_stdcall();
	EXPORTED void STDCALL UniUSBPipeManager_addDeviceMapping_stdcall(UNIUSBPIPEMANAGER_T c_uni_u_s_b_pipe_manager, long long devID, ENDPOINTTOPIPEMAPPING_T mapping);
	EXPORTED int STDCALL UniUSBPipeManager_getPipe_stdcall(UNIUSBPIPEMANAGER_T c_uni_u_s_b_pipe_manager, long long devID, short endpoint);
	EXPORTED void STDCALL UniUSBPipeManager_removeDeviceMapping_stdcall(UNIUSBPIPEMANAGER_T c_uni_u_s_b_pipe_manager, long long devID);
	EXPORTED void STDCALL UniUSBPipeManager_Destroy_stdcall(UNIUSBPIPEMANAGER_T uni_u_s_b_pipe_manager);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* UNIUSBPIPEMANAGER_H */
