/**
 * File: HighGainModeImpl.h
 * Autogenerated on Fri Mar 23 13:38:35 EDT 2018 based on
 * HighGainModeImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/highgainmode/HighGainModeImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HIGHGAINMODEIMPL_H
#define HIGHGAINMODEIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "Spectrometer.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class Spectrometer;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HighGainModeImpl : public USBFeature // CPPClass.tag001
{
public: 
	HighGainModeImpl(USBInterface& usb, Spectrometer& spec);
	void setHighGain(short gain);
	void setHighGainDefault(short gain);
	short getHighGainDefault();
	short hasHighGainDefault();
	JStringArray getFeatureGUIClassnames();
	~HighGainModeImpl();
	// No public default Java constructor; creating one:
	HighGainModeImpl();
	// No public Java copy constructor; creating one:
	HighGainModeImpl(const HighGainModeImpl &that);
	// Creating assignment operator declaration:
	HighGainModeImpl &operator=(const HighGainModeImpl &that);

private:
	jmethodID mid_HighGainModeImpl1369;
	jmethodID mid_setHighGain1370;
	jmethodID mid_setHighGainDefault1371;
	jmethodID mid_getHighGainDefault1372;
	jmethodID mid_hasHighGainDefault1373;
	jmethodID mid_getFeatureGUIClassnames1374;
	jfieldID fid_dataOutEndPoint;
	jfieldID fid_lowSpeedInEndPoint;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_HIGHGAINMODEIMPL_T
#define EXTERN_TYPEDEF_HIGHGAINMODEIMPL_T
	typedef void* HIGHGAINMODEIMPL_T;
#endif /* EXTERN_TYPEDEF_HIGHGAINMODEIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED HIGHGAINMODEIMPL_T HighGainModeImpl_Create();
	EXPORTED HIGHGAINMODEIMPL_T HighGainModeImpl_Create_1(USBINTERFACE_T usb, SPECTROMETER_T spec);
	EXPORTED void HighGainModeImpl_setHighGain(HIGHGAINMODEIMPL_T c_high_gain_mode_impl, short gain);
	EXPORTED void HighGainModeImpl_setHighGainDefault(HIGHGAINMODEIMPL_T c_high_gain_mode_impl, short gain);
	EXPORTED short HighGainModeImpl_getHighGainDefault(HIGHGAINMODEIMPL_T c_high_gain_mode_impl);
	EXPORTED short HighGainModeImpl_hasHighGainDefault(HIGHGAINMODEIMPL_T c_high_gain_mode_impl);
	EXPORTED void HighGainModeImpl_getFeatureGUIClassnames(HIGHGAINMODEIMPL_T c_high_gain_mode_impl, JSTRINGARRAY_T retval);
	EXPORTED void HighGainModeImpl_Destroy(HIGHGAINMODEIMPL_T high_gain_mode_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HIGHGAINMODEIMPL_T STDCALL HighGainModeImpl_Create_stdcall_1(USBINTERFACE_T usb, SPECTROMETER_T spec);
	EXPORTED void STDCALL HighGainModeImpl_setHighGain_stdcall(HIGHGAINMODEIMPL_T c_high_gain_mode_impl, short gain);
	EXPORTED void STDCALL HighGainModeImpl_setHighGainDefault_stdcall(HIGHGAINMODEIMPL_T c_high_gain_mode_impl, short gain);
	EXPORTED short STDCALL HighGainModeImpl_getHighGainDefault_stdcall(HIGHGAINMODEIMPL_T c_high_gain_mode_impl);
	EXPORTED short STDCALL HighGainModeImpl_hasHighGainDefault_stdcall(HIGHGAINMODEIMPL_T c_high_gain_mode_impl);
	EXPORTED void STDCALL HighGainModeImpl_getFeatureGUIClassnames_stdcall(HIGHGAINMODEIMPL_T c_high_gain_mode_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL HighGainModeImpl_Destroy_stdcall(HIGHGAINMODEIMPL_T high_gain_mode_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HIGHGAINMODEIMPL_H */
