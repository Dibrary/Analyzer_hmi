/**
 * File: DataBufferImpl.h
 * Autogenerated on Fri Mar 23 13:38:31 EDT 2018 based on
 * DataBufferImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/buffer/DataBufferImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef DATABUFFERIMPL_H
#define DATABUFFERIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED DataBufferImpl : public USBFeature // CPPClass.tag001
{
public: 
	DataBufferImpl(USBInterface& usbInt);
	void clearBuffer();
	int getBufferCapacity();
	int getBufferCapacityMaximum();
	int getBufferCapacityMinimum();
	int getNumberOfElements();
	void setBufferCapacity(int param0);
	void abortAcquisition();
	void startAcquisition();
	void enableBuffer(short param0);
	short isEnableBuffer();
	JStringArray getFeatureGUIClassnames();
	~DataBufferImpl();
	// No public default Java constructor; creating one:
	DataBufferImpl();
	// No public Java copy constructor; creating one:
	DataBufferImpl(const DataBufferImpl &that);
	// Creating assignment operator declaration:
	DataBufferImpl &operator=(const DataBufferImpl &that);

private:
	jmethodID mid_DataBufferImpl946;
	jmethodID mid_clearBuffer947;
	jmethodID mid_getBufferCapacity948;
	jmethodID mid_getBufferCapacityMaximum949;
	jmethodID mid_getBufferCapacityMinimum950;
	jmethodID mid_getNumberOfElements951;
	jmethodID mid_setBufferCapacity952;
	jmethodID mid_abortAcquisition953;
	jmethodID mid_startAcquisition954;
	jmethodID mid_enableBuffer955;
	jmethodID mid_isEnableBuffer956;
	jmethodID mid_getFeatureGUIClassnames957;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_DATABUFFERIMPL_T
#define EXTERN_TYPEDEF_DATABUFFERIMPL_T
	typedef void* DATABUFFERIMPL_T;
#endif /* EXTERN_TYPEDEF_DATABUFFERIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED DATABUFFERIMPL_T DataBufferImpl_Create();
	EXPORTED DATABUFFERIMPL_T DataBufferImpl_Create_1(USBINTERFACE_T usbInt);
	EXPORTED void DataBufferImpl_clearBuffer(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int DataBufferImpl_getBufferCapacity(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int DataBufferImpl_getBufferCapacityMaximum(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int DataBufferImpl_getBufferCapacityMinimum(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int DataBufferImpl_getNumberOfElements(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void DataBufferImpl_setBufferCapacity(DATABUFFERIMPL_T c_data_buffer_impl, int param0);
	EXPORTED void DataBufferImpl_abortAcquisition(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void DataBufferImpl_startAcquisition(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void DataBufferImpl_enableBuffer(DATABUFFERIMPL_T c_data_buffer_impl, short param0);
	EXPORTED short DataBufferImpl_isEnableBuffer(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void DataBufferImpl_getFeatureGUIClassnames(DATABUFFERIMPL_T c_data_buffer_impl, JSTRINGARRAY_T retval);
	EXPORTED void DataBufferImpl_Destroy(DATABUFFERIMPL_T data_buffer_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED DATABUFFERIMPL_T STDCALL DataBufferImpl_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED void STDCALL DataBufferImpl_clearBuffer_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int STDCALL DataBufferImpl_getBufferCapacity_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int STDCALL DataBufferImpl_getBufferCapacityMaximum_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int STDCALL DataBufferImpl_getBufferCapacityMinimum_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED int STDCALL DataBufferImpl_getNumberOfElements_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void STDCALL DataBufferImpl_setBufferCapacity_stdcall(DATABUFFERIMPL_T c_data_buffer_impl, int param0);
	EXPORTED void STDCALL DataBufferImpl_abortAcquisition_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void STDCALL DataBufferImpl_startAcquisition_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void STDCALL DataBufferImpl_enableBuffer_stdcall(DATABUFFERIMPL_T c_data_buffer_impl, short param0);
	EXPORTED short STDCALL DataBufferImpl_isEnableBuffer_stdcall(DATABUFFERIMPL_T c_data_buffer_impl);
	EXPORTED void STDCALL DataBufferImpl_getFeatureGUIClassnames_stdcall(DATABUFFERIMPL_T c_data_buffer_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL DataBufferImpl_Destroy_stdcall(DATABUFFERIMPL_T data_buffer_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* DATABUFFERIMPL_H */
