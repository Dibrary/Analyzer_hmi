/**
 * File: UV_VIS_LightSource.h
 * Autogenerated on Fri Mar 23 13:38:41 EDT 2018 based on
 * UV_VIS_LightSource.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/uvvislightsource/UV_VIS_LightSource
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef UV_VIS_LIGHTSOURCE_H
#define UV_VIS_LIGHTSOURCE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED UV_VIS_LightSource : public BaseJavaClass // CPPClass.tag001
{
public: 
	void setPowerUpPOTValues();
	void setPOTValue(int param0, int param1);
	CharArray getPOTValues();
	void setLampOn(short param0);
	short isLampOn();
	void setVisLampOn(short param0);
	short isVisLampOn();
	void setVisLampIntensity(short param0);
	short getVisLampIntensity();
	void setUVLampIntensity(short param0);
	short getUVLampIntensity();
	int getLampIntensityMinimum();
	int getLampIntensityMaximum();
	int getLampIntensityIncrement();
	void initialize();
	~UV_VIS_LightSource();
	// No public default Java constructor; creating one:
	UV_VIS_LightSource();
	// No public Java copy constructor; creating one:
	UV_VIS_LightSource(const UV_VIS_LightSource &that);
	// Creating assignment operator declaration:
	UV_VIS_LightSource &operator=(const UV_VIS_LightSource &that);

private:
	jmethodID mid_setPowerUpPOTValues2269;
	jmethodID mid_setPOTValue2270;
	jmethodID mid_getPOTValues2271;
	jmethodID mid_setLampOn2272;
	jmethodID mid_isLampOn2273;
	jmethodID mid_setVisLampOn2274;
	jmethodID mid_isVisLampOn2275;
	jmethodID mid_setVisLampIntensity2276;
	jmethodID mid_getVisLampIntensity2277;
	jmethodID mid_setUVLampIntensity2278;
	jmethodID mid_getUVLampIntensity2279;
	jmethodID mid_getLampIntensityMinimum2280;
	jmethodID mid_getLampIntensityMaximum2281;
	jmethodID mid_getLampIntensityIncrement2282;
	jmethodID mid_initialize2283;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_UV_VIS_LIGHTSOURCE_T
#define EXTERN_TYPEDEF_UV_VIS_LIGHTSOURCE_T
	typedef void* UV_VIS_LIGHTSOURCE_T;
#endif /* EXTERN_TYPEDEF_UV_VIS_LIGHTSOURCE_T */

	// No public default Java constructor; creating one:
	EXPORTED UV_VIS_LIGHTSOURCE_T UV_VIS_LightSource_Create();
	EXPORTED void UV_VIS_LightSource_setPowerUpPOTValues(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void UV_VIS_LightSource_setPOTValue(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, int param0, int param1);
	EXPORTED void UV_VIS_LightSource_getPOTValues(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, CHARARRAY_T retval);
	EXPORTED void UV_VIS_LightSource_setLampOn(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short UV_VIS_LightSource_isLampOn(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void UV_VIS_LightSource_setVisLampOn(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short UV_VIS_LightSource_isVisLampOn(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void UV_VIS_LightSource_setVisLampIntensity(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short UV_VIS_LightSource_getVisLampIntensity(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void UV_VIS_LightSource_setUVLampIntensity(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short UV_VIS_LightSource_getUVLampIntensity(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED int UV_VIS_LightSource_getLampIntensityMinimum(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED int UV_VIS_LightSource_getLampIntensityMaximum(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED int UV_VIS_LightSource_getLampIntensityIncrement(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void UV_VIS_LightSource_initialize(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void UV_VIS_LightSource_Destroy(UV_VIS_LIGHTSOURCE_T uv_vis_lightsource);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL UV_VIS_LightSource_setPowerUpPOTValues_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void STDCALL UV_VIS_LightSource_setPOTValue_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, int param0, int param1);
	EXPORTED void STDCALL UV_VIS_LightSource_getPOTValues_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, CHARARRAY_T retval);
	EXPORTED void STDCALL UV_VIS_LightSource_setLampOn_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short STDCALL UV_VIS_LightSource_isLampOn_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void STDCALL UV_VIS_LightSource_setVisLampOn_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short STDCALL UV_VIS_LightSource_isVisLampOn_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void STDCALL UV_VIS_LightSource_setVisLampIntensity_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short STDCALL UV_VIS_LightSource_getVisLampIntensity_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void STDCALL UV_VIS_LightSource_setUVLampIntensity_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource, short param0);
	EXPORTED short STDCALL UV_VIS_LightSource_getUVLampIntensity_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED int STDCALL UV_VIS_LightSource_getLampIntensityMinimum_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED int STDCALL UV_VIS_LightSource_getLampIntensityMaximum_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED int STDCALL UV_VIS_LightSource_getLampIntensityIncrement_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void STDCALL UV_VIS_LightSource_initialize_stdcall(UV_VIS_LIGHTSOURCE_T c_uv_vis_lightsource);
	EXPORTED void STDCALL UV_VIS_LightSource_Destroy_stdcall(UV_VIS_LIGHTSOURCE_T uv_vis_lightsource);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* UV_VIS_LIGHTSOURCE_H */
