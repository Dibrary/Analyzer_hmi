/**
 * File: SpectrometerPlugIn.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * SpectrometerPlugIn.java
 * for the Java class
 * com/oceanoptics/omnidriver/plugin/SpectrometerPlugIn
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTROMETERPLUGIN_H
#define SPECTROMETERPLUGIN_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#include "USBSpectrometer.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
class USBSpectrometer;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SpectrometerPlugIn : public BaseJavaClass // CPPClass.tag001
{
public: 
	JString getName(int productID);
	JString getName();
	JString getClassName(int productID);
	JString getClassName();
	USBSpectrometer getUSBSpectrometer();
	~SpectrometerPlugIn();
	// No public default Java constructor; creating one:
	SpectrometerPlugIn();
	// No public Java copy constructor; creating one:
	SpectrometerPlugIn(const SpectrometerPlugIn &that);
	// Creating assignment operator declaration:
	SpectrometerPlugIn &operator=(const SpectrometerPlugIn &that);

private:
	jmethodID mid_getName2666;
	jmethodID mid_getName2667;
	jmethodID mid_getClassName2668;
	jmethodID mid_getClassName2669;
	jmethodID mid_getUSBSpectrometer2670;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T
	typedef void* SPECTROMETERPLUGIN_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGIN_T */

	// No public default Java constructor; creating one:
	EXPORTED SPECTROMETERPLUGIN_T SpectrometerPlugIn_Create();
	EXPORTED void SpectrometerPlugIn_getName(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, int productID, JSTRING_T retval);
	EXPORTED void SpectrometerPlugIn_getName_1(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, JSTRING_T retval);
	EXPORTED void SpectrometerPlugIn_getClassName(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, int productID, JSTRING_T retval);
	EXPORTED void SpectrometerPlugIn_getClassName_1(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, JSTRING_T retval);
	EXPORTED void SpectrometerPlugIn_getUSBSpectrometer(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, USBSPECTROMETER_T retval);
	EXPORTED void SpectrometerPlugIn_Destroy(SPECTROMETERPLUGIN_T spectrometer_plug_in);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL SpectrometerPlugIn_getName_stdcall(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, int productID, JSTRING_T retval);
	EXPORTED void STDCALL SpectrometerPlugIn_getName_stdcall_1(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, JSTRING_T retval);
	EXPORTED void STDCALL SpectrometerPlugIn_getClassName_stdcall(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, int productID, JSTRING_T retval);
	EXPORTED void STDCALL SpectrometerPlugIn_getClassName_stdcall_1(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, JSTRING_T retval);
	EXPORTED void STDCALL SpectrometerPlugIn_getUSBSpectrometer_stdcall(SPECTROMETERPLUGIN_T c_spectrometer_plug_in, USBSPECTROMETER_T retval);
	EXPORTED void STDCALL SpectrometerPlugIn_Destroy_stdcall(SPECTROMETERPLUGIN_T spectrometer_plug_in);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTROMETERPLUGIN_H */
