/**
 * File: ContinuousStrobeImpl_FPGA.h
 * Autogenerated on Fri Mar 23 13:38:32 EDT 2018 based on
 * ContinuousStrobeImpl_FPGA.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/continuousstrobe/ContinuousStrobeImpl_FPGA
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef CONTINUOUSSTROBEIMPL_FPGA_H
#define CONTINUOUSSTROBEIMPL_FPGA_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "ContinuousStrobeImpl.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class ContinuousStrobeImpl;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ContinuousStrobeImpl_FPGA : public ContinuousStrobeImpl // CPPClass.tag001
{
public: 
	ContinuousStrobeImpl_FPGA(USBInterface& usbInt);
	int getContinuousStrobeDelayIncrement(int magnitude);
	int getContinuousStrobeDelayMaximum();
	int getContinuousStrobeDelayMinimum();
	void setContinuousStrobeDelay(int delayMicros);
	double continuousStrobeCountsToMicros(int counts);
	void masterClockChanged(long long newValue);
	JStringArray getFeatureGUIClassnames();
	void setContinuousModeType(short mode);
	short getContinuousModeType();
	void setDelayAfterIntegration(int delay);
	int getDelayAfterIntegration();
	void setContinuousEnable(short value);
	short getContinuousEnable();
	~ContinuousStrobeImpl_FPGA();
	// No public default Java constructor; creating one:
	ContinuousStrobeImpl_FPGA();
	// No public Java copy constructor; creating one:
	ContinuousStrobeImpl_FPGA(const ContinuousStrobeImpl_FPGA &that);
	// Creating assignment operator declaration:
	ContinuousStrobeImpl_FPGA &operator=(const ContinuousStrobeImpl_FPGA &that);

private:
	jmethodID mid_ContinuousStrobeImpl_FPGA1034;
	jmethodID mid_getContinuousStrobeDelayIncrement1035;
	jmethodID mid_getContinuousStrobeDelayMaximum1036;
	jmethodID mid_getContinuousStrobeDelayMinimum1037;
	jmethodID mid_setContinuousStrobeDelay1038;
	jmethodID mid_continuousStrobeCountsToMicros1039;
	jmethodID mid_masterClockChanged1040;
	jmethodID mid_getFeatureGUIClassnames1041;
	jmethodID mid_setContinuousModeType1042;
	jmethodID mid_getContinuousModeType1043;
	jmethodID mid_setDelayAfterIntegration1044;
	jmethodID mid_getDelayAfterIntegration1045;
	jmethodID mid_setContinuousEnable1046;
	jmethodID mid_getContinuousEnable1047;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_T
#define EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_T
	typedef void* CONTINUOUSSTROBEIMPL_T;
#endif /* EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_FPGA_T
#define EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_FPGA_T
	typedef void* CONTINUOUSSTROBEIMPL_FPGA_T;
#endif /* EXTERN_TYPEDEF_CONTINUOUSSTROBEIMPL_FPGA_T */

	// No public default Java constructor; creating one:
	EXPORTED CONTINUOUSSTROBEIMPL_FPGA_T ContinuousStrobeImpl_FPGA_Create();
	EXPORTED CONTINUOUSSTROBEIMPL_FPGA_T ContinuousStrobeImpl_FPGA_Create_1(USBINTERFACE_T usbInt);
	EXPORTED int ContinuousStrobeImpl_FPGA_getContinuousStrobeDelayIncrement(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int magnitude);
	EXPORTED int ContinuousStrobeImpl_FPGA_getContinuousStrobeDelayMaximum(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED int ContinuousStrobeImpl_FPGA_getContinuousStrobeDelayMinimum(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void ContinuousStrobeImpl_FPGA_setContinuousStrobeDelay(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int delayMicros);
	EXPORTED double ContinuousStrobeImpl_FPGA_continuousStrobeCountsToMicros(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int counts);
	EXPORTED void ContinuousStrobeImpl_FPGA_masterClockChanged(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, long long newValue);
	EXPORTED void ContinuousStrobeImpl_FPGA_getFeatureGUIClassnames(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, JSTRINGARRAY_T retval);
	EXPORTED void ContinuousStrobeImpl_FPGA_setContinuousModeType(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, short mode);
	EXPORTED short ContinuousStrobeImpl_FPGA_getContinuousModeType(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void ContinuousStrobeImpl_FPGA_setDelayAfterIntegration(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int delay);
	EXPORTED int ContinuousStrobeImpl_FPGA_getDelayAfterIntegration(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void ContinuousStrobeImpl_FPGA_setContinuousEnable(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, short value);
	EXPORTED short ContinuousStrobeImpl_FPGA_getContinuousEnable(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void ContinuousStrobeImpl_FPGA_Destroy(CONTINUOUSSTROBEIMPL_FPGA_T continuous_strobe_impl_f_p_g_a);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED CONTINUOUSSTROBEIMPL_FPGA_T STDCALL ContinuousStrobeImpl_FPGA_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED int STDCALL ContinuousStrobeImpl_FPGA_getContinuousStrobeDelayIncrement_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int magnitude);
	EXPORTED int STDCALL ContinuousStrobeImpl_FPGA_getContinuousStrobeDelayMaximum_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED int STDCALL ContinuousStrobeImpl_FPGA_getContinuousStrobeDelayMinimum_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_setContinuousStrobeDelay_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int delayMicros);
	EXPORTED double STDCALL ContinuousStrobeImpl_FPGA_continuousStrobeCountsToMicros_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int counts);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_masterClockChanged_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, long long newValue);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_getFeatureGUIClassnames_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_setContinuousModeType_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, short mode);
	EXPORTED short STDCALL ContinuousStrobeImpl_FPGA_getContinuousModeType_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_setDelayAfterIntegration_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, int delay);
	EXPORTED int STDCALL ContinuousStrobeImpl_FPGA_getDelayAfterIntegration_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_setContinuousEnable_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a, short value);
	EXPORTED short STDCALL ContinuousStrobeImpl_FPGA_getContinuousEnable_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T c_continuous_strobe_impl_f_p_g_a);
	EXPORTED void STDCALL ContinuousStrobeImpl_FPGA_Destroy_stdcall(CONTINUOUSSTROBEIMPL_FPGA_T continuous_strobe_impl_f_p_g_a);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* CONTINUOUSSTROBEIMPL_FPGA_H */
