/**
 * File: UniWinUSB.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * UniWinUSB.java
 * for the Java class
 * com/oceanoptics/uniusb/UniWinUSB
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef UNIWINUSB_H
#define UNIWINUSB_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBEndpointDescriptor.h"
#include "USBConfigurationDescriptor.h"
#include "USBDeviceDescriptor.h"
#include "USBInterfaceDescriptor.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBEndpointDescriptor;
class USBConfigurationDescriptor;
class USBDeviceDescriptor;
class USBInterfaceDescriptor;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED UniWinUSB : public BaseJavaClass // CPPClass.tag001
{
public: 
	UniWinUSB();
	short isUSB2Mode();
	signed char USBBuildEndpointAddress(int address, int direction);
	long long openDevice(int vendID, int prodID, int number);
	void closeDevice(long long devID);
	int setTimeout(long long devID, USBEndpointDescriptor& endPointDescriptor, int timeoutMilliseconds);
	int bulkIn(long long devID, USBEndpointDescriptor& endPointDescriptor, CharArray& data, int size);
	int bulkOut(long long devID, USBEndpointDescriptor& endPointDescriptor, CharArray& data, int size);
	void resetPipe(long long devID, USBEndpointDescriptor& endPointDescriptor);
	void abortPipe(long long devID, USBEndpointDescriptor& endPointDescriptor);
	USBConfigurationDescriptor getUSBConfigurationDescriptor(long long devID, int configNum);
	USBDeviceDescriptor getUSBDeviceDescriptor(long long devID);
	USBInterfaceDescriptor getUSBInterfaceDescriptor(long long devID);
	JString getUSBStringDescriptor(long long devID, int index);
	~UniWinUSB();
	// No public Java copy constructor; creating one:
	UniWinUSB(const UniWinUSB &that);
	// Creating assignment operator declaration:
	UniWinUSB &operator=(const UniWinUSB &that);

private:
	jmethodID mid_UniWinUSB6676;
	jmethodID mid_isUSB2Mode6677;
	jmethodID mid_USBBuildEndpointAddress6678;
	jmethodID mid_openDevice6679;
	jmethodID mid_closeDevice6680;
	jmethodID mid_setTimeout6681;
	jmethodID mid_bulkIn6682;
	jmethodID mid_bulkOut6683;
	jmethodID mid_resetPipe6684;
	jmethodID mid_abortPipe6685;
	jmethodID mid_getUSBConfigurationDescriptor6686;
	jmethodID mid_getUSBDeviceDescriptor6687;
	jmethodID mid_getUSBInterfaceDescriptor6688;
	jmethodID mid_getUSBStringDescriptor6689;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T
	typedef void* USBCONFIGURATIONDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
	typedef void* USBDEVICEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
	typedef void* USBINTERFACEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_UNIWINUSB_T
#define EXTERN_TYPEDEF_UNIWINUSB_T
	typedef void* UNIWINUSB_T;
#endif /* EXTERN_TYPEDEF_UNIWINUSB_T */

	EXPORTED UNIWINUSB_T UniWinUSB_Create();
	EXPORTED short UniWinUSB_isUSB2Mode(UNIWINUSB_T c_uni_win_u_s_b);
	EXPORTED signed char UniWinUSB_USBBuildEndpointAddress(UNIWINUSB_T c_uni_win_u_s_b, int address, int direction);
	EXPORTED long long UniWinUSB_openDevice(UNIWINUSB_T c_uni_win_u_s_b, int vendID, int prodID, int number);
	EXPORTED void UniWinUSB_closeDevice(UNIWINUSB_T c_uni_win_u_s_b, long long devID);
	EXPORTED int UniWinUSB_setTimeout(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, int timeoutMilliseconds);
	EXPORTED int UniWinUSB_bulkIn(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED int UniWinUSB_bulkOut(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED void UniWinUSB_resetPipe(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void UniWinUSB_abortPipe(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void UniWinUSB_getUSBConfigurationDescriptor(UNIWINUSB_T c_uni_win_u_s_b, long long devID, int configNum, USBCONFIGURATIONDESCRIPTOR_T retval);
	EXPORTED void UniWinUSB_getUSBDeviceDescriptor(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBDEVICEDESCRIPTOR_T retval);
	EXPORTED void UniWinUSB_getUSBInterfaceDescriptor(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBINTERFACEDESCRIPTOR_T retval);
	EXPORTED void UniWinUSB_getUSBStringDescriptor(UNIWINUSB_T c_uni_win_u_s_b, long long devID, int index, JSTRING_T retval);
	EXPORTED void UniWinUSB_Destroy(UNIWINUSB_T uni_win_u_s_b);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED UNIWINUSB_T STDCALL UniWinUSB_Create_stdcall();
	EXPORTED short STDCALL UniWinUSB_isUSB2Mode_stdcall(UNIWINUSB_T c_uni_win_u_s_b);
	EXPORTED signed char STDCALL UniWinUSB_USBBuildEndpointAddress_stdcall(UNIWINUSB_T c_uni_win_u_s_b, int address, int direction);
	EXPORTED long long STDCALL UniWinUSB_openDevice_stdcall(UNIWINUSB_T c_uni_win_u_s_b, int vendID, int prodID, int number);
	EXPORTED void STDCALL UniWinUSB_closeDevice_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID);
	EXPORTED int STDCALL UniWinUSB_setTimeout_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, int timeoutMilliseconds);
	EXPORTED int STDCALL UniWinUSB_bulkIn_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED int STDCALL UniWinUSB_bulkOut_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED void STDCALL UniWinUSB_resetPipe_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void STDCALL UniWinUSB_abortPipe_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void STDCALL UniWinUSB_getUSBConfigurationDescriptor_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, int configNum, USBCONFIGURATIONDESCRIPTOR_T retval);
	EXPORTED void STDCALL UniWinUSB_getUSBDeviceDescriptor_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBDEVICEDESCRIPTOR_T retval);
	EXPORTED void STDCALL UniWinUSB_getUSBInterfaceDescriptor_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, USBINTERFACEDESCRIPTOR_T retval);
	EXPORTED void STDCALL UniWinUSB_getUSBStringDescriptor_stdcall(UNIWINUSB_T c_uni_win_u_s_b, long long devID, int index, JSTRING_T retval);
	EXPORTED void STDCALL UniWinUSB_Destroy_stdcall(UNIWINUSB_T uni_win_u_s_b);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* UNIWINUSB_H */
