/**
 * File: OceanBinaryProtocolProvider.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * OceanBinaryProtocolProvider.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/OceanBinaryProtocolProvider
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef OCEANBINARYPROTOCOLPROVIDER_H
#define OCEANBINARYPROTOCOLPROVIDER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED OceanBinaryProtocolProvider : public BaseJavaClass // CPPClass.tag001
{
public: 
	CharArray queryDevice(int param0, CharArray& param1);
	short sendCommandToDevice(int param0, CharArray& param1);
	~OceanBinaryProtocolProvider();
	// No public default Java constructor; creating one:
	OceanBinaryProtocolProvider();
	// No public Java copy constructor; creating one:
	OceanBinaryProtocolProvider(const OceanBinaryProtocolProvider &that);
	// Creating assignment operator declaration:
	OceanBinaryProtocolProvider &operator=(const OceanBinaryProtocolProvider &that);

private:
	jmethodID mid_queryDevice2560;
	jmethodID mid_sendCommandToDevice2561;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
	typedef void* OCEANBINARYPROTOCOLPROVIDER_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T */

	// No public default Java constructor; creating one:
	EXPORTED OCEANBINARYPROTOCOLPROVIDER_T OceanBinaryProtocolProvider_Create();
	EXPORTED void OceanBinaryProtocolProvider_queryDevice(OCEANBINARYPROTOCOLPROVIDER_T c_ocean_binary_protocol_provider, int param0, CHARARRAY_T param1, CHARARRAY_T retval);
	EXPORTED short OceanBinaryProtocolProvider_sendCommandToDevice(OCEANBINARYPROTOCOLPROVIDER_T c_ocean_binary_protocol_provider, int param0, CHARARRAY_T param1);
	EXPORTED void OceanBinaryProtocolProvider_Destroy(OCEANBINARYPROTOCOLPROVIDER_T ocean_binary_protocol_provider);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL OceanBinaryProtocolProvider_queryDevice_stdcall(OCEANBINARYPROTOCOLPROVIDER_T c_ocean_binary_protocol_provider, int param0, CHARARRAY_T param1, CHARARRAY_T retval);
	EXPORTED short STDCALL OceanBinaryProtocolProvider_sendCommandToDevice_stdcall(OCEANBINARYPROTOCOLPROVIDER_T c_ocean_binary_protocol_provider, int param0, CHARARRAY_T param1);
	EXPORTED void STDCALL OceanBinaryProtocolProvider_Destroy_stdcall(OCEANBINARYPROTOCOLPROVIDER_T ocean_binary_protocol_provider);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* OCEANBINARYPROTOCOLPROVIDER_H */
