/***
 * IndyCurrentSampleArray.h
 * Autogenerated on Fri Mar 23 13:39:21 EDT 2018
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */

#ifndef INDYCURRENTSAMPLEARRAY_H
#define INDYCURRENTSAMPLEARRAY_H
#include "ArrayTypes.h"
#include "IndyCurrentSample.h"

#ifdef __cplusplus

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class IndyCurrentSample;
#endif /* CLASS_PREDECLARATIONS */

class EXPORTED IndyCurrentSampleArray : public AbstractArray {
public:
	/* Default constructor */
	IndyCurrentSampleArray();

	/* Initialization constructor */
	IndyCurrentSampleArray(IndyCurrentSample *objects, int length);

	/* Copy constructor */
	IndyCurrentSampleArray(const IndyCurrentSampleArray &that);

	/* Destructor */
	~IndyCurrentSampleArray();

	/* Assignment operator */
	IndyCurrentSampleArray &operator=(const IndyCurrentSampleArray &that);

	/* Setter */
	void setObjects(IndyCurrentSample *objects, int length);

	/* Getter */
	IndyCurrentSample *getObjects();

	/* Getter for specific index */
	IndyCurrentSample getElementAt(int index);

	/* Utility method for internal use only */
	char *getClassDescriptor();

private:
	IndyCurrentSample *data;
	JNIBridge* jni;
	EnvWrapper* localenv;
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_INDYCURRENTSAMPLEARRAY_T
#define EXTERN_TYPEDEF_INDYCURRENTSAMPLEARRAY_T
	typedef void* INDYCURRENTSAMPLEARRAY_T;
#endif /* EXTERN_TYPEDEF_INDYCURRENTSAMPLEARRAY_T */

#ifndef EXTERN_TYPEDEF_INDYCURRENTSAMPLE_T
#define EXTERN_TYPEDEF_INDYCURRENTSAMPLE_T
	typedef void* INDYCURRENTSAMPLE_T;
#endif /* EXTERN_TYPEDEF_INDYCURRENTSAMPLE_T */

	EXPORTED INDYCURRENTSAMPLEARRAY_T IndyCurrentSampleArray_Create();
	EXPORTED INDYCURRENTSAMPLEARRAY_T IndyCurrentSampleArray_Create_1(INDYCURRENTSAMPLE_T* objects, int length);
	EXPORTED void IndyCurrentSampleArray_Destroy(INDYCURRENTSAMPLEARRAY_T indy_current_sample_array);
	EXPORTED int IndyCurrentSampleArray_getLength(INDYCURRENTSAMPLEARRAY_T indy_current_sample_array);
	EXPORTED void IndyCurrentSampleArray_setObjects(INDYCURRENTSAMPLEARRAY_T indy_current_sample_array, INDYCURRENTSAMPLE_T* objects, int length);
	EXPORTED void IndyCurrentSampleArray_getElementAt(INDYCURRENTSAMPLEARRAY_T indy_current_sample_array, int index, INDYCURRENTSAMPLE_T target);
	EXPORTED int IndyCurrentSampleArray_copyObjectsInto(INDYCURRENTSAMPLEARRAY_T indy_current_sample_array, INDYCURRENTSAMPLE_T* target, int length);
#ifdef __cplusplus
};
#endif /* __cplusplus */

#endif /* INDYCURRENTSAMPLEARRAY_H */
