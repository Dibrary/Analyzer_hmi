/**
 * File: AnnotatedSpectrum.h
 * Autogenerated on Fri Mar 23 13:38:45 EDT 2018 based on
 * AnnotatedSpectrum.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectra/AnnotatedSpectrum
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ANNOTATEDSPECTRUM_H
#define ANNOTATEDSPECTRUM_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "HighResTimeStamp.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class HighResTimeStamp;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED AnnotatedSpectrum : public BaseJavaClass // CPPClass.tag001
{
public: 
	AnnotatedSpectrum(DoubleArray& pixelArrayArgument, DoubleArray& wavelengthArrayArgument, short isSaturatedArgument, int integrationTimeArgument, short isStrobeEnabledArgument, HighResTimeStamp& timestampArgument, int boxcarWidthArgument, int scansToAverageArgument, short correctForElectricalDarkArgument, short correctForNonLinearityArgument, short correctForStrayLightArgument, short rotationEnabledArgument, JString& spectrometerSerialNumberArgument, int channelNumberArgument, JString& userNameArgument);
	int getBoxcarWidth();
	int getChannelNumber();
	DoubleArray getChannelWavelengths();
	short getCorrectForElectricalDark();
	short getCorrectForNonLinearity();
	short getCorrectForStrayLight();
	short isSaturated();
	short isStrobeEnabled();
	DoubleArray getPixelValues();
	HighResTimeStamp getAcquisitionTime();
	int getIntegrationTime();
	int getScansToAverage();
	JString getSpectrometerSerialNumber();
	JString getUserName();
	~AnnotatedSpectrum();
	// No public default Java constructor; creating one:
	AnnotatedSpectrum();
	// No public Java copy constructor; creating one:
	AnnotatedSpectrum(const AnnotatedSpectrum &that);
	// Creating assignment operator declaration:
	AnnotatedSpectrum &operator=(const AnnotatedSpectrum &that);

private:
	jmethodID mid_AnnotatedSpectrum2714;
	jmethodID mid_getBoxcarWidth2715;
	jmethodID mid_getChannelNumber2716;
	jmethodID mid_getChannelWavelengths2717;
	jmethodID mid_getCorrectForElectricalDark2718;
	jmethodID mid_getCorrectForNonLinearity2719;
	jmethodID mid_getCorrectForStrayLight2720;
	jmethodID mid_isSaturated2721;
	jmethodID mid_isStrobeEnabled2722;
	jmethodID mid_getPixelValues2723;
	jmethodID mid_getAcquisitionTime2724;
	jmethodID mid_getIntegrationTime2725;
	jmethodID mid_getScansToAverage2726;
	jmethodID mid_getSpectrometerSerialNumber2727;
	jmethodID mid_getUserName2728;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_HIGHRESTIMESTAMP_T
#define EXTERN_TYPEDEF_HIGHRESTIMESTAMP_T
	typedef void* HIGHRESTIMESTAMP_T;
#endif /* EXTERN_TYPEDEF_HIGHRESTIMESTAMP_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_ANNOTATEDSPECTRUM_T
#define EXTERN_TYPEDEF_ANNOTATEDSPECTRUM_T
	typedef void* ANNOTATEDSPECTRUM_T;
#endif /* EXTERN_TYPEDEF_ANNOTATEDSPECTRUM_T */

	// No public default Java constructor; creating one:
	EXPORTED ANNOTATEDSPECTRUM_T AnnotatedSpectrum_Create();
	EXPORTED ANNOTATEDSPECTRUM_T AnnotatedSpectrum_Create_1(DOUBLEARRAY_T pixelArrayArgument, DOUBLEARRAY_T wavelengthArrayArgument, short isSaturatedArgument, int integrationTimeArgument, short isStrobeEnabledArgument, HIGHRESTIMESTAMP_T timestampArgument, int boxcarWidthArgument, int scansToAverageArgument, short correctForElectricalDarkArgument, short correctForNonLinearityArgument, short correctForStrayLightArgument, short rotationEnabledArgument, JSTRING_T spectrometerSerialNumberArgument, int channelNumberArgument, JSTRING_T userNameArgument);
	EXPORTED int AnnotatedSpectrum_getBoxcarWidth(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED int AnnotatedSpectrum_getChannelNumber(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED void AnnotatedSpectrum_getChannelWavelengths(ANNOTATEDSPECTRUM_T c_annotated_spectrum, DOUBLEARRAY_T retval);
	EXPORTED short AnnotatedSpectrum_getCorrectForElectricalDark(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short AnnotatedSpectrum_getCorrectForNonLinearity(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short AnnotatedSpectrum_getCorrectForStrayLight(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short AnnotatedSpectrum_isSaturated(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short AnnotatedSpectrum_isStrobeEnabled(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED void AnnotatedSpectrum_getPixelValues(ANNOTATEDSPECTRUM_T c_annotated_spectrum, DOUBLEARRAY_T retval);
	EXPORTED void AnnotatedSpectrum_getAcquisitionTime(ANNOTATEDSPECTRUM_T c_annotated_spectrum, HIGHRESTIMESTAMP_T retval);
	EXPORTED int AnnotatedSpectrum_getIntegrationTime(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED int AnnotatedSpectrum_getScansToAverage(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED void AnnotatedSpectrum_getSpectrometerSerialNumber(ANNOTATEDSPECTRUM_T c_annotated_spectrum, JSTRING_T retval);
	EXPORTED void AnnotatedSpectrum_getUserName(ANNOTATEDSPECTRUM_T c_annotated_spectrum, JSTRING_T retval);
	EXPORTED void AnnotatedSpectrum_Destroy(ANNOTATEDSPECTRUM_T annotated_spectrum);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED ANNOTATEDSPECTRUM_T STDCALL AnnotatedSpectrum_Create_stdcall_1(DOUBLEARRAY_T pixelArrayArgument, DOUBLEARRAY_T wavelengthArrayArgument, short isSaturatedArgument, int integrationTimeArgument, short isStrobeEnabledArgument, HIGHRESTIMESTAMP_T timestampArgument, int boxcarWidthArgument, int scansToAverageArgument, short correctForElectricalDarkArgument, short correctForNonLinearityArgument, short correctForStrayLightArgument, short rotationEnabledArgument, JSTRING_T spectrometerSerialNumberArgument, int channelNumberArgument, JSTRING_T userNameArgument);
	EXPORTED int STDCALL AnnotatedSpectrum_getBoxcarWidth_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED int STDCALL AnnotatedSpectrum_getChannelNumber_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED void STDCALL AnnotatedSpectrum_getChannelWavelengths_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum, DOUBLEARRAY_T retval);
	EXPORTED short STDCALL AnnotatedSpectrum_getCorrectForElectricalDark_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short STDCALL AnnotatedSpectrum_getCorrectForNonLinearity_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short STDCALL AnnotatedSpectrum_getCorrectForStrayLight_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short STDCALL AnnotatedSpectrum_isSaturated_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED short STDCALL AnnotatedSpectrum_isStrobeEnabled_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED void STDCALL AnnotatedSpectrum_getPixelValues_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL AnnotatedSpectrum_getAcquisitionTime_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum, HIGHRESTIMESTAMP_T retval);
	EXPORTED int STDCALL AnnotatedSpectrum_getIntegrationTime_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED int STDCALL AnnotatedSpectrum_getScansToAverage_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum);
	EXPORTED void STDCALL AnnotatedSpectrum_getSpectrometerSerialNumber_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum, JSTRING_T retval);
	EXPORTED void STDCALL AnnotatedSpectrum_getUserName_stdcall(ANNOTATEDSPECTRUM_T c_annotated_spectrum, JSTRING_T retval);
	EXPORTED void STDCALL AnnotatedSpectrum_Destroy_stdcall(ANNOTATEDSPECTRUM_T annotated_spectrum);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ANNOTATEDSPECTRUM_H */
