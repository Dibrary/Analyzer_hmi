/**
 * File: USBInterface.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * USBInterface.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/USBInterface
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USBINTERFACE_H
#define USBINTERFACE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBEndpointDescriptor.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBEndpointDescriptor;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USBInterface : public BaseJavaClass // CPPClass.tag001
{
public: 
	CharArray getInputBuffer();
	CharArray getOutputBuffer();
	void increaseInputBufferSize(int param0);
	void increaseOutputBufferSize(int param0);
	void bulkIn(USBEndpointDescriptor& param0, CharArray& param1, int param2);
	void bulkOut(USBEndpointDescriptor& param0, CharArray& param1, int param2);
	void openDevice(int param0, int param1, int param2);
	void closeDevice();
	JString getUSBStringDescriptor(int param0);
	short isUSB2Mode();
	int setTimeout(USBEndpointDescriptor& param0, int param1);
	~USBInterface();
	// No public default Java constructor; creating one:
	USBInterface();
	// No public Java copy constructor; creating one:
	USBInterface(const USBInterface &that);
	// Creating assignment operator declaration:
	USBInterface &operator=(const USBInterface &that);

private:
	jmethodID mid_getInputBuffer2572;
	jmethodID mid_getOutputBuffer2573;
	jmethodID mid_increaseInputBufferSize2574;
	jmethodID mid_increaseOutputBufferSize2575;
	jmethodID mid_bulkIn2576;
	jmethodID mid_bulkOut2577;
	jmethodID mid_openDevice2578;
	jmethodID mid_closeDevice2579;
	jmethodID mid_getUSBStringDescriptor2580;
	jmethodID mid_isUSB2Mode2581;
	jmethodID mid_setTimeout2582;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */

	// No public default Java constructor; creating one:
	EXPORTED USBINTERFACE_T USBInterface_Create();
	EXPORTED void USBInterface_getInputBuffer(USBINTERFACE_T c_usbinterface, CHARARRAY_T retval);
	EXPORTED void USBInterface_getOutputBuffer(USBINTERFACE_T c_usbinterface, CHARARRAY_T retval);
	EXPORTED void USBInterface_increaseInputBufferSize(USBINTERFACE_T c_usbinterface, int param0);
	EXPORTED void USBInterface_increaseOutputBufferSize(USBINTERFACE_T c_usbinterface, int param0);
	EXPORTED void USBInterface_bulkIn(USBINTERFACE_T c_usbinterface, USBENDPOINTDESCRIPTOR_T param0, CHARARRAY_T param1, int param2);
	EXPORTED void USBInterface_bulkOut(USBINTERFACE_T c_usbinterface, USBENDPOINTDESCRIPTOR_T param0, CHARARRAY_T param1, int param2);
	EXPORTED void USBInterface_openDevice(USBINTERFACE_T c_usbinterface, int param0, int param1, int param2);
	EXPORTED void USBInterface_closeDevice(USBINTERFACE_T c_usbinterface);
	EXPORTED void USBInterface_getUSBStringDescriptor(USBINTERFACE_T c_usbinterface, int param0, JSTRING_T retval);
	EXPORTED short USBInterface_isUSB2Mode(USBINTERFACE_T c_usbinterface);
	EXPORTED int USBInterface_setTimeout(USBINTERFACE_T c_usbinterface, USBENDPOINTDESCRIPTOR_T param0, int param1);
	EXPORTED void USBInterface_Destroy(USBINTERFACE_T usbinterface);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL USBInterface_getInputBuffer_stdcall(USBINTERFACE_T c_usbinterface, CHARARRAY_T retval);
	EXPORTED void STDCALL USBInterface_getOutputBuffer_stdcall(USBINTERFACE_T c_usbinterface, CHARARRAY_T retval);
	EXPORTED void STDCALL USBInterface_increaseInputBufferSize_stdcall(USBINTERFACE_T c_usbinterface, int param0);
	EXPORTED void STDCALL USBInterface_increaseOutputBufferSize_stdcall(USBINTERFACE_T c_usbinterface, int param0);
	EXPORTED void STDCALL USBInterface_bulkIn_stdcall(USBINTERFACE_T c_usbinterface, USBENDPOINTDESCRIPTOR_T param0, CHARARRAY_T param1, int param2);
	EXPORTED void STDCALL USBInterface_bulkOut_stdcall(USBINTERFACE_T c_usbinterface, USBENDPOINTDESCRIPTOR_T param0, CHARARRAY_T param1, int param2);
	EXPORTED void STDCALL USBInterface_openDevice_stdcall(USBINTERFACE_T c_usbinterface, int param0, int param1, int param2);
	EXPORTED void STDCALL USBInterface_closeDevice_stdcall(USBINTERFACE_T c_usbinterface);
	EXPORTED void STDCALL USBInterface_getUSBStringDescriptor_stdcall(USBINTERFACE_T c_usbinterface, int param0, JSTRING_T retval);
	EXPORTED short STDCALL USBInterface_isUSB2Mode_stdcall(USBINTERFACE_T c_usbinterface);
	EXPORTED int STDCALL USBInterface_setTimeout_stdcall(USBINTERFACE_T c_usbinterface, USBENDPOINTDESCRIPTOR_T param0, int param1);
	EXPORTED void STDCALL USBInterface_Destroy_stdcall(USBINTERFACE_T usbinterface);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USBINTERFACE_H */
