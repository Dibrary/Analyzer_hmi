/**
 * File: BluetoothImpl.h
 * Autogenerated on Fri Mar 23 13:38:30 EDT 2018 based on
 * BluetoothImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/bluetooth/BluetoothImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef BLUETOOTHIMPL_H
#define BLUETOOTHIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "OceanBinaryProtocolProvider.h"
#include "USBInterface.h"
#include "BluetoothPin.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class OceanBinaryProtocolProvider;
class USBInterface;
class BluetoothPin;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED BluetoothImpl : public USBFeature // CPPClass.tag001
{
public: 
	BluetoothImpl(OceanBinaryProtocolProvider& device, USBInterface& usbInt);
	short isEnabled();
	void setEnable(short enable);
	void setPin(BluetoothPin& pin);
	void persist();
	void setDiscoveryMode();
	JString getDeviceName();
	int getChannelNumber();
	JString readDeviceAddress();
	~BluetoothImpl();
	// No public default Java constructor; creating one:
	BluetoothImpl();
	// No public Java copy constructor; creating one:
	BluetoothImpl(const BluetoothImpl &that);
	// Creating assignment operator declaration:
	BluetoothImpl &operator=(const BluetoothImpl &that);

private:
	jmethodID mid_BluetoothImpl912;
	jmethodID mid_isEnabled913;
	jmethodID mid_setEnable914;
	jmethodID mid_setPin915;
	jmethodID mid_persist916;
	jmethodID mid_setDiscoveryMode917;
	jmethodID mid_getDeviceName918;
	jmethodID mid_getChannelNumber919;
	jmethodID mid_readDeviceAddress920;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
	typedef void* OCEANBINARYPROTOCOLPROVIDER_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_BLUETOOTHPIN_T
#define EXTERN_TYPEDEF_BLUETOOTHPIN_T
	typedef void* BLUETOOTHPIN_T;
#endif /* EXTERN_TYPEDEF_BLUETOOTHPIN_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_BLUETOOTHIMPL_T
#define EXTERN_TYPEDEF_BLUETOOTHIMPL_T
	typedef void* BLUETOOTHIMPL_T;
#endif /* EXTERN_TYPEDEF_BLUETOOTHIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED BLUETOOTHIMPL_T BluetoothImpl_Create();
	EXPORTED BLUETOOTHIMPL_T BluetoothImpl_Create_1(OCEANBINARYPROTOCOLPROVIDER_T device, USBINTERFACE_T usbInt);
	EXPORTED short BluetoothImpl_isEnabled(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void BluetoothImpl_setEnable(BLUETOOTHIMPL_T c_bluetooth_impl, short enable);
	EXPORTED void BluetoothImpl_setPin(BLUETOOTHIMPL_T c_bluetooth_impl, BLUETOOTHPIN_T pin);
	EXPORTED void BluetoothImpl_persist(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void BluetoothImpl_setDiscoveryMode(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void BluetoothImpl_getDeviceName(BLUETOOTHIMPL_T c_bluetooth_impl, JSTRING_T retval);
	EXPORTED int BluetoothImpl_getChannelNumber(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void BluetoothImpl_readDeviceAddress(BLUETOOTHIMPL_T c_bluetooth_impl, JSTRING_T retval);
	EXPORTED void BluetoothImpl_Destroy(BLUETOOTHIMPL_T bluetooth_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED BLUETOOTHIMPL_T STDCALL BluetoothImpl_Create_stdcall_1(OCEANBINARYPROTOCOLPROVIDER_T device, USBINTERFACE_T usbInt);
	EXPORTED short STDCALL BluetoothImpl_isEnabled_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void STDCALL BluetoothImpl_setEnable_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl, short enable);
	EXPORTED void STDCALL BluetoothImpl_setPin_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl, BLUETOOTHPIN_T pin);
	EXPORTED void STDCALL BluetoothImpl_persist_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void STDCALL BluetoothImpl_setDiscoveryMode_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void STDCALL BluetoothImpl_getDeviceName_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl, JSTRING_T retval);
	EXPORTED int STDCALL BluetoothImpl_getChannelNumber_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl);
	EXPORTED void STDCALL BluetoothImpl_readDeviceAddress_stdcall(BLUETOOTHIMPL_T c_bluetooth_impl, JSTRING_T retval);
	EXPORTED void STDCALL BluetoothImpl_Destroy_stdcall(BLUETOOTHIMPL_T bluetooth_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* BLUETOOTHIMPL_H */
