/**
 * File: ADC1000Channel.h
 * Autogenerated on Fri Mar 23 13:38:47 EDT 2018 based on
 * ADC1000Channel.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/adc1000usb/ADC1000Channel
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ADC1000CHANNEL_H
#define ADC1000CHANNEL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerChannel.h"
#include "Spectrometer.h"
#include "Coefficients.h"
#include "Spectrum.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerChannel;
class Spectrometer;
class Coefficients;
class Spectrum;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ADC1000Channel : public SpectrometerChannel // CPPClass.tag001
{
public: 
	ADC1000Channel(Spectrometer& spectrometer, Coefficients& coefficients, int channel);
	void getCoefficientsFromSpectrometer();
	void setCoefficients();
	void setWavelengthCalibration();
	void setNonlinearityCoefficients();
	DoubleArray getAllWavelengths();
	double getWavelength(int pixel);
	double getDeepWellWavelength(int pixel);
	Spectrum getSpectrum(Spectrum& spectrum);
	Spectrum getSpectrum();
	void fixNumberOfPixels();
	short isMaster();
	short isEnabled();
	void setEnabled(short enabled);
	short isInterpolated();
	void setInterpolated(short interpolated);
	~ADC1000Channel();
	// No public default Java constructor; creating one:
	ADC1000Channel();
	// No public Java copy constructor; creating one:
	ADC1000Channel(const ADC1000Channel &that);
	// Creating assignment operator declaration:
	ADC1000Channel &operator=(const ADC1000Channel &that);

private:
	jmethodID mid_ADC1000Channel3095;
	jmethodID mid_getCoefficientsFromSpectrometer3096;
	jmethodID mid_setCoefficients3097;
	jmethodID mid_setWavelengthCalibration3098;
	jmethodID mid_setNonlinearityCoefficients3099;
	jmethodID mid_getAllWavelengths3100;
	jmethodID mid_getWavelength3101;
	jmethodID mid_getDeepWellWavelength3102;
	jmethodID mid_getSpectrum3103;
	jmethodID mid_getSpectrum3104;
	jmethodID mid_fixNumberOfPixels3105;
	jmethodID mid_isMaster3106;
	jmethodID mid_isEnabled3107;
	jmethodID mid_setEnabled3108;
	jmethodID mid_isInterpolated3109;
	jmethodID mid_setInterpolated3110;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
	typedef void* SPECTROMETERCHANNEL_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTS_T
#define EXTERN_TYPEDEF_COEFFICIENTS_T
	typedef void* COEFFICIENTS_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTS_T */
#ifndef EXTERN_TYPEDEF_SPECTRUM_T
#define EXTERN_TYPEDEF_SPECTRUM_T
	typedef void* SPECTRUM_T;
#endif /* EXTERN_TYPEDEF_SPECTRUM_T */
#ifndef EXTERN_TYPEDEF_ADC1000CHANNEL_T
#define EXTERN_TYPEDEF_ADC1000CHANNEL_T
	typedef void* ADC1000CHANNEL_T;
#endif /* EXTERN_TYPEDEF_ADC1000CHANNEL_T */

	// No public default Java constructor; creating one:
	EXPORTED ADC1000CHANNEL_T ADC1000Channel_Create();
	EXPORTED ADC1000CHANNEL_T ADC1000Channel_Create_1(SPECTROMETER_T spectrometer, COEFFICIENTS_T coefficients, int channel);
	EXPORTED void ADC1000Channel_getCoefficientsFromSpectrometer(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void ADC1000Channel_setCoefficients(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void ADC1000Channel_setWavelengthCalibration(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void ADC1000Channel_setNonlinearityCoefficients(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void ADC1000Channel_getAllWavelengths(ADC1000CHANNEL_T c_adc1000channel, DOUBLEARRAY_T retval);
	EXPORTED double ADC1000Channel_getWavelength(ADC1000CHANNEL_T c_adc1000channel, int pixel);
	EXPORTED double ADC1000Channel_getDeepWellWavelength(ADC1000CHANNEL_T c_adc1000channel, int pixel);
	EXPORTED void ADC1000Channel_getSpectrum(ADC1000CHANNEL_T c_adc1000channel, SPECTRUM_T spectrum, SPECTRUM_T retval);
	EXPORTED void ADC1000Channel_getSpectrum_1(ADC1000CHANNEL_T c_adc1000channel, SPECTRUM_T retval);
	EXPORTED void ADC1000Channel_fixNumberOfPixels(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED short ADC1000Channel_isMaster(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED short ADC1000Channel_isEnabled(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void ADC1000Channel_setEnabled(ADC1000CHANNEL_T c_adc1000channel, short enabled);
	EXPORTED short ADC1000Channel_isInterpolated(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void ADC1000Channel_setInterpolated(ADC1000CHANNEL_T c_adc1000channel, short interpolated);
	EXPORTED void ADC1000Channel_Destroy(ADC1000CHANNEL_T adc1000channel);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED ADC1000CHANNEL_T STDCALL ADC1000Channel_Create_stdcall_1(SPECTROMETER_T spectrometer, COEFFICIENTS_T coefficients, int channel);
	EXPORTED void STDCALL ADC1000Channel_getCoefficientsFromSpectrometer_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void STDCALL ADC1000Channel_setCoefficients_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void STDCALL ADC1000Channel_setWavelengthCalibration_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void STDCALL ADC1000Channel_setNonlinearityCoefficients_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void STDCALL ADC1000Channel_getAllWavelengths_stdcall(ADC1000CHANNEL_T c_adc1000channel, DOUBLEARRAY_T retval);
	EXPORTED double STDCALL ADC1000Channel_getWavelength_stdcall(ADC1000CHANNEL_T c_adc1000channel, int pixel);
	EXPORTED double STDCALL ADC1000Channel_getDeepWellWavelength_stdcall(ADC1000CHANNEL_T c_adc1000channel, int pixel);
	EXPORTED void STDCALL ADC1000Channel_getSpectrum_stdcall(ADC1000CHANNEL_T c_adc1000channel, SPECTRUM_T spectrum, SPECTRUM_T retval);
	EXPORTED void STDCALL ADC1000Channel_getSpectrum_stdcall_1(ADC1000CHANNEL_T c_adc1000channel, SPECTRUM_T retval);
	EXPORTED void STDCALL ADC1000Channel_fixNumberOfPixels_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED short STDCALL ADC1000Channel_isMaster_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED short STDCALL ADC1000Channel_isEnabled_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void STDCALL ADC1000Channel_setEnabled_stdcall(ADC1000CHANNEL_T c_adc1000channel, short enabled);
	EXPORTED short STDCALL ADC1000Channel_isInterpolated_stdcall(ADC1000CHANNEL_T c_adc1000channel);
	EXPORTED void STDCALL ADC1000Channel_setInterpolated_stdcall(ADC1000CHANNEL_T c_adc1000channel, short interpolated);
	EXPORTED void STDCALL ADC1000Channel_Destroy_stdcall(ADC1000CHANNEL_T adc1000channel);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ADC1000CHANNEL_H */
