/**
 * File: SASChannel.h
 * Autogenerated on Fri Mar 23 13:39:11 EDT 2018 based on
 * SASChannel.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/sas/SASChannel
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SASCHANNEL_H
#define SASCHANNEL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerChannel.h"
#include "Spectrometer.h"
#include "Coefficients.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerChannel;
class Spectrometer;
class Coefficients;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SASChannel : public SpectrometerChannel // CPPClass.tag001
{
public: 
	SASChannel(Spectrometer& spectrometer, Coefficients& coefficients, int channel);
	void getCoefficientsFromSpectrometer();
	void setCoefficients();
	void setWavelengthCalibration();
	double getEndingWavelength();
	~SASChannel();
	// No public default Java constructor; creating one:
	SASChannel();
	// No public Java copy constructor; creating one:
	SASChannel(const SASChannel &that);
	// Creating assignment operator declaration:
	SASChannel &operator=(const SASChannel &that);

private:
	jmethodID mid_SASChannel5528;
	jmethodID mid_getCoefficientsFromSpectrometer5529;
	jmethodID mid_setCoefficients5530;
	jmethodID mid_setWavelengthCalibration5531;
	jmethodID mid_getEndingWavelength5532;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
	typedef void* SPECTROMETERCHANNEL_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTS_T
#define EXTERN_TYPEDEF_COEFFICIENTS_T
	typedef void* COEFFICIENTS_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTS_T */
#ifndef EXTERN_TYPEDEF_SASCHANNEL_T
#define EXTERN_TYPEDEF_SASCHANNEL_T
	typedef void* SASCHANNEL_T;
#endif /* EXTERN_TYPEDEF_SASCHANNEL_T */

	// No public default Java constructor; creating one:
	EXPORTED SASCHANNEL_T SASChannel_Create();
	EXPORTED SASCHANNEL_T SASChannel_Create_1(SPECTROMETER_T spectrometer, COEFFICIENTS_T coefficients, int channel);
	EXPORTED void SASChannel_getCoefficientsFromSpectrometer(SASCHANNEL_T c_saschannel);
	EXPORTED void SASChannel_setCoefficients(SASCHANNEL_T c_saschannel);
	EXPORTED void SASChannel_setWavelengthCalibration(SASCHANNEL_T c_saschannel);
	EXPORTED double SASChannel_getEndingWavelength(SASCHANNEL_T c_saschannel);
	EXPORTED void SASChannel_Destroy(SASCHANNEL_T saschannel);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SASCHANNEL_T STDCALL SASChannel_Create_stdcall_1(SPECTROMETER_T spectrometer, COEFFICIENTS_T coefficients, int channel);
	EXPORTED void STDCALL SASChannel_getCoefficientsFromSpectrometer_stdcall(SASCHANNEL_T c_saschannel);
	EXPORTED void STDCALL SASChannel_setCoefficients_stdcall(SASCHANNEL_T c_saschannel);
	EXPORTED void STDCALL SASChannel_setWavelengthCalibration_stdcall(SASCHANNEL_T c_saschannel);
	EXPORTED double STDCALL SASChannel_getEndingWavelength_stdcall(SASCHANNEL_T c_saschannel);
	EXPORTED void STDCALL SASChannel_Destroy_stdcall(SASCHANNEL_T saschannel);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SASCHANNEL_H */
