/**
 * File: GetPositiveLimitImpl.h
 * Autogenerated on Fri Mar 23 13:38:23 EDT 2018 based on
 * GetPositiveLimitImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/getpositivelimit/GetPositiveLimitImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GETPOSITIVELIMITIMPL_H
#define GETPOSITIVELIMITIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "FaulhaberCommandIntegerResponse.h"
#include "UniRS232.h"
#include "Node.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class FaulhaberCommandIntegerResponse;
class UniRS232;
class Node;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GetPositiveLimitImpl : public FaulhaberCommandIntegerResponse // CPPClass.tag001
{
public: 
	GetPositiveLimitImpl(UniRS232& serPort);
	int getPositiveLimit(Node& node);
	~GetPositiveLimitImpl();
	// No public default Java constructor; creating one:
	GetPositiveLimitImpl();
	// No public Java copy constructor; creating one:
	GetPositiveLimitImpl(const GetPositiveLimitImpl &that);
	// Creating assignment operator declaration:
	GetPositiveLimitImpl &operator=(const GetPositiveLimitImpl &that);

private:
	jmethodID mid_GetPositiveLimitImpl93;
	jmethodID mid_getPositiveLimit94;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_FAULHABERCOMMANDINTEGERRESPONSE_T
#define EXTERN_TYPEDEF_FAULHABERCOMMANDINTEGERRESPONSE_T
	typedef void* FAULHABERCOMMANDINTEGERRESPONSE_T;
#endif /* EXTERN_TYPEDEF_FAULHABERCOMMANDINTEGERRESPONSE_T */
#ifndef EXTERN_TYPEDEF_UNIRS232_T
#define EXTERN_TYPEDEF_UNIRS232_T
	typedef void* UNIRS232_T;
#endif /* EXTERN_TYPEDEF_UNIRS232_T */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_GETPOSITIVELIMITIMPL_T
#define EXTERN_TYPEDEF_GETPOSITIVELIMITIMPL_T
	typedef void* GETPOSITIVELIMITIMPL_T;
#endif /* EXTERN_TYPEDEF_GETPOSITIVELIMITIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED GETPOSITIVELIMITIMPL_T GetPositiveLimitImpl_Create();
	EXPORTED GETPOSITIVELIMITIMPL_T GetPositiveLimitImpl_Create_1(UNIRS232_T serPort);
	EXPORTED int GetPositiveLimitImpl_getPositiveLimit(GETPOSITIVELIMITIMPL_T c_get_positive_limit_impl, NODE_T node);
	EXPORTED void GetPositiveLimitImpl_Destroy(GETPOSITIVELIMITIMPL_T get_positive_limit_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED GETPOSITIVELIMITIMPL_T STDCALL GetPositiveLimitImpl_Create_stdcall_1(UNIRS232_T serPort);
	EXPORTED int STDCALL GetPositiveLimitImpl_getPositiveLimit_stdcall(GETPOSITIVELIMITIMPL_T c_get_positive_limit_impl, NODE_T node);
	EXPORTED void STDCALL GetPositiveLimitImpl_Destroy_stdcall(GETPOSITIVELIMITIMPL_T get_positive_limit_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GETPOSITIVELIMITIMPL_H */
