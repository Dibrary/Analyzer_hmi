/**
 * File: HighGainModeImpl_NIRQuest.h
 * Autogenerated on Fri Mar 23 13:38:35 EDT 2018 based on
 * HighGainModeImpl_NIRQuest.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/highgainmode/HighGainModeImpl_NIRQuest
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HIGHGAINMODEIMPL_NIRQUEST_H
#define HIGHGAINMODEIMPL_NIRQUEST_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "HighGainModeImpl.h"
#include "USBInterface.h"
#include "Spectrometer.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class HighGainModeImpl;
class USBInterface;
class Spectrometer;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HighGainModeImpl_NIRQuest : public HighGainModeImpl // CPPClass.tag001
{
public: 
	HighGainModeImpl_NIRQuest(USBInterface& usb, Spectrometer& spec);
	void setHighGain(short gain);
	void setHighGainDefault(short gain);
	short getHighGainDefault();
	~HighGainModeImpl_NIRQuest();
	// No public default Java constructor; creating one:
	HighGainModeImpl_NIRQuest();
	// No public Java copy constructor; creating one:
	HighGainModeImpl_NIRQuest(const HighGainModeImpl_NIRQuest &that);
	// Creating assignment operator declaration:
	HighGainModeImpl_NIRQuest &operator=(const HighGainModeImpl_NIRQuest &that);

private:
	jmethodID mid_HighGainModeImpl_NIRQuest1375;
	jmethodID mid_setHighGain1376;
	jmethodID mid_setHighGainDefault1377;
	jmethodID mid_getHighGainDefault1378;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_HIGHGAINMODEIMPL_T
#define EXTERN_TYPEDEF_HIGHGAINMODEIMPL_T
	typedef void* HIGHGAINMODEIMPL_T;
#endif /* EXTERN_TYPEDEF_HIGHGAINMODEIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_HIGHGAINMODEIMPL_NIRQUEST_T
#define EXTERN_TYPEDEF_HIGHGAINMODEIMPL_NIRQUEST_T
	typedef void* HIGHGAINMODEIMPL_NIRQUEST_T;
#endif /* EXTERN_TYPEDEF_HIGHGAINMODEIMPL_NIRQUEST_T */

	// No public default Java constructor; creating one:
	EXPORTED HIGHGAINMODEIMPL_NIRQUEST_T HighGainModeImpl_NIRQuest_Create();
	EXPORTED HIGHGAINMODEIMPL_NIRQUEST_T HighGainModeImpl_NIRQuest_Create_1(USBINTERFACE_T usb, SPECTROMETER_T spec);
	EXPORTED void HighGainModeImpl_NIRQuest_setHighGain(HIGHGAINMODEIMPL_NIRQUEST_T c_high_gain_mode_impl_n_i_r_quest, short gain);
	EXPORTED void HighGainModeImpl_NIRQuest_setHighGainDefault(HIGHGAINMODEIMPL_NIRQUEST_T c_high_gain_mode_impl_n_i_r_quest, short gain);
	EXPORTED short HighGainModeImpl_NIRQuest_getHighGainDefault(HIGHGAINMODEIMPL_NIRQUEST_T c_high_gain_mode_impl_n_i_r_quest);
	EXPORTED void HighGainModeImpl_NIRQuest_Destroy(HIGHGAINMODEIMPL_NIRQUEST_T high_gain_mode_impl_n_i_r_quest);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HIGHGAINMODEIMPL_NIRQUEST_T STDCALL HighGainModeImpl_NIRQuest_Create_stdcall_1(USBINTERFACE_T usb, SPECTROMETER_T spec);
	EXPORTED void STDCALL HighGainModeImpl_NIRQuest_setHighGain_stdcall(HIGHGAINMODEIMPL_NIRQUEST_T c_high_gain_mode_impl_n_i_r_quest, short gain);
	EXPORTED void STDCALL HighGainModeImpl_NIRQuest_setHighGainDefault_stdcall(HIGHGAINMODEIMPL_NIRQUEST_T c_high_gain_mode_impl_n_i_r_quest, short gain);
	EXPORTED short STDCALL HighGainModeImpl_NIRQuest_getHighGainDefault_stdcall(HIGHGAINMODEIMPL_NIRQUEST_T c_high_gain_mode_impl_n_i_r_quest);
	EXPORTED void STDCALL HighGainModeImpl_NIRQuest_Destroy_stdcall(HIGHGAINMODEIMPL_NIRQUEST_T high_gain_mode_impl_n_i_r_quest);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HIGHGAINMODEIMPL_NIRQUEST_H */
