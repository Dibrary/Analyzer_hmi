/**
 * File: OceanBinaryProtocolMessage.h
 * Autogenerated on Fri Mar 23 13:38:29 EDT 2018 based on
 * OceanBinaryProtocolMessage.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/OceanBinaryProtocolMessage
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef OCEANBINARYPROTOCOLMESSAGE_H
#define OCEANBINARYPROTOCOLMESSAGE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class OceanBinaryProtocolMessage;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED OceanBinaryProtocolMessage : public BaseJavaClass // CPPClass.tag001
{
public: 
	OceanBinaryProtocolMessage();
	CharArray toByteStream();
	OceanBinaryProtocolMessage parseHeaderFromByteStream(CharArray& message);
	OceanBinaryProtocolMessage parseByteStream(CharArray& message);
	CharArray getData();
	int getBytesRemaining();
	signed char getChecksumType();
	short getErrno();
	short getFlags();
	CharArray getImmediateData();
	signed char getImmediateDataLength();
	int getMessageType();
	CharArray getPayload();
	short getProtocolVersion();
	int getRegarding();
	void setBytesRemaining(int bytesRemaining);
	void setChecksumType(signed char checksumType);
	void setErrorNumber(short errorNumber);
	void setFlags(short flags);
	void setAckRequestedFlag();
	short isNackFlagSet();
	short isAckFlagSet();
	short isResponseFlagSet();
	void setData(CharArray& data);
	void setImmediateData(CharArray& immediateData);
	void setImmediateDataLength(signed char immediateDataLength);
	void setMessageType(int messageType);
	void setPayload(CharArray& payload);
	void setProtocolVersion(short protocolVersion);
	void setRegarding(int regarding);
	~OceanBinaryProtocolMessage();
	// No public Java copy constructor; creating one:
	OceanBinaryProtocolMessage(const OceanBinaryProtocolMessage &that);
	// Creating assignment operator declaration:
	OceanBinaryProtocolMessage &operator=(const OceanBinaryProtocolMessage &that);
	int RESPONSE_FLAG;
	int ACK_FLAG;
	int ACK_REQUESTED_FLAG;
	int NACK_FLAG;
	int EXCEPTION_FLAG;
	int HEADER_LENGTH_BYTES;

private:
	jmethodID mid_OceanBinaryProtocolMessage702;
	jmethodID mid_toByteStream703;
	jmethodID mid_parseHeaderFromByteStream704;
	jmethodID mid_parseByteStream705;
	jmethodID mid_getData706;
	jmethodID mid_getBytesRemaining707;
	jmethodID mid_getChecksumType708;
	jmethodID mid_getErrno709;
	jmethodID mid_getFlags710;
	jmethodID mid_getImmediateData711;
	jmethodID mid_getImmediateDataLength712;
	jmethodID mid_getMessageType713;
	jmethodID mid_getPayload714;
	jmethodID mid_getProtocolVersion715;
	jmethodID mid_getRegarding716;
	jmethodID mid_setBytesRemaining717;
	jmethodID mid_setChecksumType718;
	jmethodID mid_setErrorNumber719;
	jmethodID mid_setFlags720;
	jmethodID mid_setAckRequestedFlag721;
	jmethodID mid_isNackFlagSet722;
	jmethodID mid_isAckFlagSet723;
	jmethodID mid_isResponseFlagSet724;
	jmethodID mid_setData725;
	jmethodID mid_setImmediateData726;
	jmethodID mid_setImmediateDataLength727;
	jmethodID mid_setMessageType728;
	jmethodID mid_setPayload729;
	jmethodID mid_setProtocolVersion730;
	jmethodID mid_setRegarding731;
	jfieldID fid_RESPONSE_FLAG;
	jfieldID fid_ACK_FLAG;
	jfieldID fid_ACK_REQUESTED_FLAG;
	jfieldID fid_NACK_FLAG;
	jfieldID fid_EXCEPTION_FLAG;
	jfieldID fid_HEADER_LENGTH_BYTES;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLMESSAGE_T
	typedef void* OCEANBINARYPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLMESSAGE_T */

	EXPORTED OCEANBINARYPROTOCOLMESSAGE_T OceanBinaryProtocolMessage_Create();
	EXPORTED void OceanBinaryProtocolMessage_toByteStream(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED void OceanBinaryProtocolMessage_parseHeaderFromByteStream(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T message, OCEANBINARYPROTOCOLMESSAGE_T retval);
	EXPORTED void OceanBinaryProtocolMessage_parseByteStream(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T message, OCEANBINARYPROTOCOLMESSAGE_T retval);
	EXPORTED void OceanBinaryProtocolMessage_getData(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED int OceanBinaryProtocolMessage_getBytesRemaining(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED signed char OceanBinaryProtocolMessage_getChecksumType(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short OceanBinaryProtocolMessage_getErrno(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short OceanBinaryProtocolMessage_getFlags(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void OceanBinaryProtocolMessage_getImmediateData(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED signed char OceanBinaryProtocolMessage_getImmediateDataLength(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED int OceanBinaryProtocolMessage_getMessageType(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void OceanBinaryProtocolMessage_getPayload(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED short OceanBinaryProtocolMessage_getProtocolVersion(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED int OceanBinaryProtocolMessage_getRegarding(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void OceanBinaryProtocolMessage_setBytesRemaining(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, int bytesRemaining);
	EXPORTED void OceanBinaryProtocolMessage_setChecksumType(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, signed char checksumType);
	EXPORTED void OceanBinaryProtocolMessage_setErrorNumber(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, short errorNumber);
	EXPORTED void OceanBinaryProtocolMessage_setFlags(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, short flags);
	EXPORTED void OceanBinaryProtocolMessage_setAckRequestedFlag(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short OceanBinaryProtocolMessage_isNackFlagSet(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short OceanBinaryProtocolMessage_isAckFlagSet(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short OceanBinaryProtocolMessage_isResponseFlagSet(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void OceanBinaryProtocolMessage_setData(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T data);
	EXPORTED void OceanBinaryProtocolMessage_setImmediateData(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T immediateData);
	EXPORTED void OceanBinaryProtocolMessage_setImmediateDataLength(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, signed char immediateDataLength);
	EXPORTED void OceanBinaryProtocolMessage_setMessageType(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, int messageType);
	EXPORTED void OceanBinaryProtocolMessage_setPayload(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T payload);
	EXPORTED void OceanBinaryProtocolMessage_setProtocolVersion(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, short protocolVersion);
	EXPORTED void OceanBinaryProtocolMessage_setRegarding(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, int regarding);
	EXPORTED void OceanBinaryProtocolMessage_Destroy(OCEANBINARYPROTOCOLMESSAGE_T ocean_binary_protocol_message);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED OCEANBINARYPROTOCOLMESSAGE_T STDCALL OceanBinaryProtocolMessage_Create_stdcall();
	EXPORTED void STDCALL OceanBinaryProtocolMessage_toByteStream_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_parseHeaderFromByteStream_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T message, OCEANBINARYPROTOCOLMESSAGE_T retval);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_parseByteStream_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T message, OCEANBINARYPROTOCOLMESSAGE_T retval);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_getData_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED int STDCALL OceanBinaryProtocolMessage_getBytesRemaining_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED signed char STDCALL OceanBinaryProtocolMessage_getChecksumType_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short STDCALL OceanBinaryProtocolMessage_getErrno_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short STDCALL OceanBinaryProtocolMessage_getFlags_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_getImmediateData_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED signed char STDCALL OceanBinaryProtocolMessage_getImmediateDataLength_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED int STDCALL OceanBinaryProtocolMessage_getMessageType_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_getPayload_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T retval);
	EXPORTED short STDCALL OceanBinaryProtocolMessage_getProtocolVersion_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED int STDCALL OceanBinaryProtocolMessage_getRegarding_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setBytesRemaining_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, int bytesRemaining);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setChecksumType_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, signed char checksumType);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setErrorNumber_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, short errorNumber);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setFlags_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, short flags);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setAckRequestedFlag_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short STDCALL OceanBinaryProtocolMessage_isNackFlagSet_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short STDCALL OceanBinaryProtocolMessage_isAckFlagSet_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED short STDCALL OceanBinaryProtocolMessage_isResponseFlagSet_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setData_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T data);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setImmediateData_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T immediateData);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setImmediateDataLength_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, signed char immediateDataLength);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setMessageType_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, int messageType);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setPayload_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, CHARARRAY_T payload);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setProtocolVersion_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, short protocolVersion);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_setRegarding_stdcall(OCEANBINARYPROTOCOLMESSAGE_T c_ocean_binary_protocol_message, int regarding);
	EXPORTED void STDCALL OceanBinaryProtocolMessage_Destroy_stdcall(OCEANBINARYPROTOCOLMESSAGE_T ocean_binary_protocol_message);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* OCEANBINARYPROTOCOLMESSAGE_H */
