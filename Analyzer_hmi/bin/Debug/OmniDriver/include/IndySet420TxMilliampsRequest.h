/**
 * File: IndySet420TxMilliampsRequest.h
 * Autogenerated on Fri Mar 23 13:38:37 EDT 2018 based on
 * IndySet420TxMilliampsRequest.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/indy/IndySet420TxMilliampsRequest
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INDYSET420TXMILLIAMPSREQUEST_H
#define INDYSET420TXMILLIAMPSREQUEST_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "DispatchProtocolMessage.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class DispatchProtocolMessage;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED IndySet420TxMilliampsRequest : public DispatchProtocolMessage // CPPClass.tag001
{
public: 
	IndySet420TxMilliampsRequest();
	int getModuleIndex();
	float getMilliamps();
	void setModuleIndex(int moduleIndex);
	void setMilliamps(float mA);
	~IndySet420TxMilliampsRequest();
	// No public Java copy constructor; creating one:
	IndySet420TxMilliampsRequest(const IndySet420TxMilliampsRequest &that);
	// Creating assignment operator declaration:
	IndySet420TxMilliampsRequest &operator=(const IndySet420TxMilliampsRequest &that);

private:
	jmethodID mid_IndySet420TxMilliampsRequest1553;
	jmethodID mid_getModuleIndex1554;
	jmethodID mid_getMilliamps1555;
	jmethodID mid_setModuleIndex1556;
	jmethodID mid_setMilliamps1557;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
	typedef void* DISPATCHPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T */
#ifndef EXTERN_TYPEDEF_INDYSET420TXMILLIAMPSREQUEST_T
#define EXTERN_TYPEDEF_INDYSET420TXMILLIAMPSREQUEST_T
	typedef void* INDYSET420TXMILLIAMPSREQUEST_T;
#endif /* EXTERN_TYPEDEF_INDYSET420TXMILLIAMPSREQUEST_T */

	EXPORTED INDYSET420TXMILLIAMPSREQUEST_T IndySet420TxMilliampsRequest_Create();
	EXPORTED int IndySet420TxMilliampsRequest_getModuleIndex(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request);
	EXPORTED float IndySet420TxMilliampsRequest_getMilliamps(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request);
	EXPORTED void IndySet420TxMilliampsRequest_setModuleIndex(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request, int moduleIndex);
	EXPORTED void IndySet420TxMilliampsRequest_setMilliamps(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request, float mA);
	EXPORTED void IndySet420TxMilliampsRequest_Destroy(INDYSET420TXMILLIAMPSREQUEST_T indy_set420_tx_milliamps_request);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED INDYSET420TXMILLIAMPSREQUEST_T STDCALL IndySet420TxMilliampsRequest_Create_stdcall();
	EXPORTED int STDCALL IndySet420TxMilliampsRequest_getModuleIndex_stdcall(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request);
	EXPORTED float STDCALL IndySet420TxMilliampsRequest_getMilliamps_stdcall(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request);
	EXPORTED void STDCALL IndySet420TxMilliampsRequest_setModuleIndex_stdcall(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request, int moduleIndex);
	EXPORTED void STDCALL IndySet420TxMilliampsRequest_setMilliamps_stdcall(INDYSET420TXMILLIAMPSREQUEST_T c_indy_set420_tx_milliamps_request, float mA);
	EXPORTED void STDCALL IndySet420TxMilliampsRequest_Destroy_stdcall(INDYSET420TXMILLIAMPSREQUEST_T indy_set420_tx_milliamps_request);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INDYSET420TXMILLIAMPSREQUEST_H */
