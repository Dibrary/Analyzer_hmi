/**
 * File: SingleStrobeImpl_QEPro.h
 * Autogenerated on Fri Mar 23 13:38:40 EDT 2018 based on
 * SingleStrobeImpl_QEPro.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/singlestrobe/SingleStrobeImpl_QEPro
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SINGLESTROBEIMPL_QEPRO_H
#define SINGLESTROBEIMPL_QEPRO_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SingleStrobeImpl.h"
#include "QEPro.h"
#include "USBInterface.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SingleStrobeImpl;
class QEPro;
class USBInterface;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SingleStrobeImpl_QEPro : public SingleStrobeImpl // CPPClass.tag001
{
public: 
	SingleStrobeImpl_QEPro(QEPro& qe, USBInterface& usbInt);
	int getSingleStrobeHigh();
	void setSingleStrobeHigh(int counts);
	int getSingleStrobeLow();
	void setSingleStrobeLow(int counts);
	int getSingleStrobeMinimum();
	int getSingleStrobeMaximum();
	int getSingleStrobeIncrement();
	double getSingleStrobeCountsToMicros(int counts);
	~SingleStrobeImpl_QEPro();
	// No public default Java constructor; creating one:
	SingleStrobeImpl_QEPro();
	// No public Java copy constructor; creating one:
	SingleStrobeImpl_QEPro(const SingleStrobeImpl_QEPro &that);
	// Creating assignment operator declaration:
	SingleStrobeImpl_QEPro &operator=(const SingleStrobeImpl_QEPro &that);

private:
	jmethodID mid_SingleStrobeImpl_QEPro2029;
	jmethodID mid_getSingleStrobeHigh2030;
	jmethodID mid_setSingleStrobeHigh2031;
	jmethodID mid_getSingleStrobeLow2032;
	jmethodID mid_setSingleStrobeLow2033;
	jmethodID mid_getSingleStrobeMinimum2034;
	jmethodID mid_getSingleStrobeMaximum2035;
	jmethodID mid_getSingleStrobeIncrement2036;
	jmethodID mid_getSingleStrobeCountsToMicros2037;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SINGLESTROBEIMPL_T
#define EXTERN_TYPEDEF_SINGLESTROBEIMPL_T
	typedef void* SINGLESTROBEIMPL_T;
#endif /* EXTERN_TYPEDEF_SINGLESTROBEIMPL_T */
#ifndef EXTERN_TYPEDEF_QEPRO_T
#define EXTERN_TYPEDEF_QEPRO_T
	typedef void* QEPRO_T;
#endif /* EXTERN_TYPEDEF_QEPRO_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SINGLESTROBEIMPL_QEPRO_T
#define EXTERN_TYPEDEF_SINGLESTROBEIMPL_QEPRO_T
	typedef void* SINGLESTROBEIMPL_QEPRO_T;
#endif /* EXTERN_TYPEDEF_SINGLESTROBEIMPL_QEPRO_T */

	// No public default Java constructor; creating one:
	EXPORTED SINGLESTROBEIMPL_QEPRO_T SingleStrobeImpl_QEPro_Create();
	EXPORTED SINGLESTROBEIMPL_QEPRO_T SingleStrobeImpl_QEPro_Create_1(QEPRO_T qe, USBINTERFACE_T usbInt);
	EXPORTED int SingleStrobeImpl_QEPro_getSingleStrobeHigh(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED void SingleStrobeImpl_QEPro_setSingleStrobeHigh(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro, int counts);
	EXPORTED int SingleStrobeImpl_QEPro_getSingleStrobeLow(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED void SingleStrobeImpl_QEPro_setSingleStrobeLow(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro, int counts);
	EXPORTED int SingleStrobeImpl_QEPro_getSingleStrobeMinimum(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED int SingleStrobeImpl_QEPro_getSingleStrobeMaximum(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED int SingleStrobeImpl_QEPro_getSingleStrobeIncrement(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED double SingleStrobeImpl_QEPro_getSingleStrobeCountsToMicros(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro, int counts);
	EXPORTED void SingleStrobeImpl_QEPro_Destroy(SINGLESTROBEIMPL_QEPRO_T single_strobe_impl_q_e_pro);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SINGLESTROBEIMPL_QEPRO_T STDCALL SingleStrobeImpl_QEPro_Create_stdcall_1(QEPRO_T qe, USBINTERFACE_T usbInt);
	EXPORTED int STDCALL SingleStrobeImpl_QEPro_getSingleStrobeHigh_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED void STDCALL SingleStrobeImpl_QEPro_setSingleStrobeHigh_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro, int counts);
	EXPORTED int STDCALL SingleStrobeImpl_QEPro_getSingleStrobeLow_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED void STDCALL SingleStrobeImpl_QEPro_setSingleStrobeLow_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro, int counts);
	EXPORTED int STDCALL SingleStrobeImpl_QEPro_getSingleStrobeMinimum_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED int STDCALL SingleStrobeImpl_QEPro_getSingleStrobeMaximum_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED int STDCALL SingleStrobeImpl_QEPro_getSingleStrobeIncrement_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro);
	EXPORTED double STDCALL SingleStrobeImpl_QEPro_getSingleStrobeCountsToMicros_stdcall(SINGLESTROBEIMPL_QEPRO_T c_single_strobe_impl_q_e_pro, int counts);
	EXPORTED void STDCALL SingleStrobeImpl_QEPro_Destroy_stdcall(SINGLESTROBEIMPL_QEPRO_T single_strobe_impl_q_e_pro);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SINGLESTROBEIMPL_QEPRO_H */
