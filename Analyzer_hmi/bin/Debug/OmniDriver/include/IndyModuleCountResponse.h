/**
 * File: IndyModuleCountResponse.h
 * Autogenerated on Fri Mar 23 13:38:36 EDT 2018 based on
 * IndyModuleCountResponse.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/indy/IndyModuleCountResponse
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INDYMODULECOUNTRESPONSE_H
#define INDYMODULECOUNTRESPONSE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "DispatchProtocolMessage.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class DispatchProtocolMessage;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED IndyModuleCountResponse : public DispatchProtocolMessage // CPPClass.tag001
{
public: 
	IndyModuleCountResponse();
	IndyModuleCountResponse(CharArray& message);
	int getNumberOfModules();
	JString toString();
	~IndyModuleCountResponse();
	// No public Java copy constructor; creating one:
	IndyModuleCountResponse(const IndyModuleCountResponse &that);
	// Creating assignment operator declaration:
	IndyModuleCountResponse &operator=(const IndyModuleCountResponse &that);

private:
	jmethodID mid_IndyModuleCountResponse1537;
	jmethodID mid_IndyModuleCountResponse1538;
	jmethodID mid_getNumberOfModules1539;
	jmethodID mid_toString1540;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
	typedef void* DISPATCHPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_INDYMODULECOUNTRESPONSE_T
#define EXTERN_TYPEDEF_INDYMODULECOUNTRESPONSE_T
	typedef void* INDYMODULECOUNTRESPONSE_T;
#endif /* EXTERN_TYPEDEF_INDYMODULECOUNTRESPONSE_T */

	EXPORTED INDYMODULECOUNTRESPONSE_T IndyModuleCountResponse_Create();
	EXPORTED INDYMODULECOUNTRESPONSE_T IndyModuleCountResponse_Create_1(CHARARRAY_T message);
	EXPORTED int IndyModuleCountResponse_getNumberOfModules(INDYMODULECOUNTRESPONSE_T c_indy_module_count_response);
	EXPORTED void IndyModuleCountResponse_toString(INDYMODULECOUNTRESPONSE_T c_indy_module_count_response, JSTRING_T retval);
	EXPORTED void IndyModuleCountResponse_Destroy(INDYMODULECOUNTRESPONSE_T indy_module_count_response);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED INDYMODULECOUNTRESPONSE_T STDCALL IndyModuleCountResponse_Create_stdcall();
	EXPORTED INDYMODULECOUNTRESPONSE_T STDCALL IndyModuleCountResponse_Create_stdcall_1(CHARARRAY_T message);
	EXPORTED int STDCALL IndyModuleCountResponse_getNumberOfModules_stdcall(INDYMODULECOUNTRESPONSE_T c_indy_module_count_response);
	EXPORTED void STDCALL IndyModuleCountResponse_toString_stdcall(INDYMODULECOUNTRESPONSE_T c_indy_module_count_response, JSTRING_T retval);
	EXPORTED void STDCALL IndyModuleCountResponse_Destroy_stdcall(INDYMODULECOUNTRESPONSE_T indy_module_count_response);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INDYMODULECOUNTRESPONSE_H */
