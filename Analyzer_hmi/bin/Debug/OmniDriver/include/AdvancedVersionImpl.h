/**
 * File: AdvancedVersionImpl.h
 * Autogenerated on Fri Mar 23 13:38:29 EDT 2018 based on
 * AdvancedVersionImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/advancedversion/AdvancedVersionImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ADVANCEDVERSIONIMPL_H
#define ADVANCEDVERSIONIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "FPGAImpl.h"
#include "USBInterface.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class FPGAImpl;
class USBInterface;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED AdvancedVersionImpl : public FPGAImpl // CPPClass.tag001
{
public: 
	AdvancedVersionImpl(USBInterface& usbInt);
	JString getFPGAFirmwareVersion();
	JString getPSOCVersion();
	JString getCpuVersion();
	int getDetectorType();
	void setDetectorType(int type);
	JString getCpuSubVersion();
	void setScansToAverage(int scans);
	int getScansToAverage();
	~AdvancedVersionImpl();
	// No public default Java constructor; creating one:
	AdvancedVersionImpl();
	// No public Java copy constructor; creating one:
	AdvancedVersionImpl(const AdvancedVersionImpl &that);
	// Creating assignment operator declaration:
	AdvancedVersionImpl &operator=(const AdvancedVersionImpl &that);

private:
	jmethodID mid_AdvancedVersionImpl769;
	jmethodID mid_getFPGAFirmwareVersion770;
	jmethodID mid_getPSOCVersion771;
	jmethodID mid_getCpuVersion772;
	jmethodID mid_getDetectorType773;
	jmethodID mid_setDetectorType774;
	jmethodID mid_getCpuSubVersion775;
	jmethodID mid_setScansToAverage776;
	jmethodID mid_getScansToAverage777;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_FPGAIMPL_T
#define EXTERN_TYPEDEF_FPGAIMPL_T
	typedef void* FPGAIMPL_T;
#endif /* EXTERN_TYPEDEF_FPGAIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_T
#define EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_T
	typedef void* ADVANCEDVERSIONIMPL_T;
#endif /* EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED ADVANCEDVERSIONIMPL_T AdvancedVersionImpl_Create();
	EXPORTED ADVANCEDVERSIONIMPL_T AdvancedVersionImpl_Create_1(USBINTERFACE_T usbInt);
	EXPORTED void AdvancedVersionImpl_getFPGAFirmwareVersion(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED void AdvancedVersionImpl_getPSOCVersion(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED void AdvancedVersionImpl_getCpuVersion(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED int AdvancedVersionImpl_getDetectorType(ADVANCEDVERSIONIMPL_T c_advanced_version_impl);
	EXPORTED void AdvancedVersionImpl_setDetectorType(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, int type);
	EXPORTED void AdvancedVersionImpl_getCpuSubVersion(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED void AdvancedVersionImpl_setScansToAverage(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, int scans);
	EXPORTED int AdvancedVersionImpl_getScansToAverage(ADVANCEDVERSIONIMPL_T c_advanced_version_impl);
	EXPORTED void AdvancedVersionImpl_Destroy(ADVANCEDVERSIONIMPL_T advanced_version_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED ADVANCEDVERSIONIMPL_T STDCALL AdvancedVersionImpl_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED void STDCALL AdvancedVersionImpl_getFPGAFirmwareVersion_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED void STDCALL AdvancedVersionImpl_getPSOCVersion_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED void STDCALL AdvancedVersionImpl_getCpuVersion_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED int STDCALL AdvancedVersionImpl_getDetectorType_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl);
	EXPORTED void STDCALL AdvancedVersionImpl_setDetectorType_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, int type);
	EXPORTED void STDCALL AdvancedVersionImpl_getCpuSubVersion_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, JSTRING_T retval);
	EXPORTED void STDCALL AdvancedVersionImpl_setScansToAverage_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl, int scans);
	EXPORTED int STDCALL AdvancedVersionImpl_getScansToAverage_stdcall(ADVANCEDVERSIONIMPL_T c_advanced_version_impl);
	EXPORTED void STDCALL AdvancedVersionImpl_Destroy_stdcall(ADVANCEDVERSIONIMPL_T advanced_version_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ADVANCEDVERSIONIMPL_H */
