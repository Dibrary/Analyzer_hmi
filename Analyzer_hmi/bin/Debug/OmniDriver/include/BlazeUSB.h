/**
 * File: BlazeUSB.h
 * Autogenerated on Fri Mar 23 13:38:50 EDT 2018 based on
 * BlazeUSB.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/blazer/BlazeUSB
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef BLAZEUSB_H
#define BLAZEUSB_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "NextGenUSB.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class NextGenUSB;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED BlazeUSB : public NextGenUSB // CPPClass.tag001
{
public: 
	BlazeUSB();
	BlazeUSB(int i);
	int getNumberOfPixels(int index);
	void openSpectrometer(int index);
	~BlazeUSB();
	// No public Java copy constructor; creating one:
	BlazeUSB(const BlazeUSB &that);
	// Creating assignment operator declaration:
	BlazeUSB &operator=(const BlazeUSB &that);

private:
	jmethodID mid_BlazeUSB3285;
	jmethodID mid_BlazeUSB3286;
	jmethodID mid_getNumberOfPixels3287;
	jmethodID mid_openSpectrometer3288;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NEXTGENUSB_T
#define EXTERN_TYPEDEF_NEXTGENUSB_T
	typedef void* NEXTGENUSB_T;
#endif /* EXTERN_TYPEDEF_NEXTGENUSB_T */
#ifndef EXTERN_TYPEDEF_BLAZEUSB_T
#define EXTERN_TYPEDEF_BLAZEUSB_T
	typedef void* BLAZEUSB_T;
#endif /* EXTERN_TYPEDEF_BLAZEUSB_T */

	EXPORTED BLAZEUSB_T BlazeUSB_Create();
	EXPORTED BLAZEUSB_T BlazeUSB_Create_1(int i);
	EXPORTED int BlazeUSB_getNumberOfPixels(BLAZEUSB_T c_blaze_u_s_b, int index);
	EXPORTED void BlazeUSB_openSpectrometer(BLAZEUSB_T c_blaze_u_s_b, int index);
	EXPORTED void BlazeUSB_Destroy(BLAZEUSB_T blaze_u_s_b);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED BLAZEUSB_T STDCALL BlazeUSB_Create_stdcall();
	EXPORTED BLAZEUSB_T STDCALL BlazeUSB_Create_stdcall_1(int i);
	EXPORTED int STDCALL BlazeUSB_getNumberOfPixels_stdcall(BLAZEUSB_T c_blaze_u_s_b, int index);
	EXPORTED void STDCALL BlazeUSB_openSpectrometer_stdcall(BLAZEUSB_T c_blaze_u_s_b, int index);
	EXPORTED void STDCALL BlazeUSB_Destroy_stdcall(BLAZEUSB_T blaze_u_s_b);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* BLAZEUSB_H */
