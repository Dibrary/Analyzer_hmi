/**
 * File: ErrorProvider.h
 * Autogenerated on Fri Mar 23 13:38:33 EDT 2018 based on
 * ErrorProvider.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/errorprovider/ErrorProvider
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ERRORPROVIDER_H
#define ERRORPROVIDER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "OmniDriverDispatchListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class OmniDriverDispatchListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ErrorProvider : public BaseJavaClass // CPPClass.tag001
{
public: 
	void addOmniDriverDispatchListener(OmniDriverDispatchListener& param0);
	void removeOmniDriverDispatchListener(OmniDriverDispatchListener& param0);
	~ErrorProvider();
	// No public default Java constructor; creating one:
	ErrorProvider();
	// No public Java copy constructor; creating one:
	ErrorProvider(const ErrorProvider &that);
	// Creating assignment operator declaration:
	ErrorProvider &operator=(const ErrorProvider &that);

private:
	jmethodID mid_addOmniDriverDispatchListener1180;
	jmethodID mid_removeOmniDriverDispatchListener1181;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_OMNIDRIVERDISPATCHLISTENER_T
#define EXTERN_TYPEDEF_OMNIDRIVERDISPATCHLISTENER_T
	typedef void* OMNIDRIVERDISPATCHLISTENER_T;
#endif /* EXTERN_TYPEDEF_OMNIDRIVERDISPATCHLISTENER_T */
#ifndef EXTERN_TYPEDEF_ERRORPROVIDER_T
#define EXTERN_TYPEDEF_ERRORPROVIDER_T
	typedef void* ERRORPROVIDER_T;
#endif /* EXTERN_TYPEDEF_ERRORPROVIDER_T */

	// No public default Java constructor; creating one:
	EXPORTED ERRORPROVIDER_T ErrorProvider_Create();
	EXPORTED void ErrorProvider_addOmniDriverDispatchListener(ERRORPROVIDER_T c_error_provider, OMNIDRIVERDISPATCHLISTENER_T param0);
	EXPORTED void ErrorProvider_removeOmniDriverDispatchListener(ERRORPROVIDER_T c_error_provider, OMNIDRIVERDISPATCHLISTENER_T param0);
	EXPORTED void ErrorProvider_Destroy(ERRORPROVIDER_T error_provider);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL ErrorProvider_addOmniDriverDispatchListener_stdcall(ERRORPROVIDER_T c_error_provider, OMNIDRIVERDISPATCHLISTENER_T param0);
	EXPORTED void STDCALL ErrorProvider_removeOmniDriverDispatchListener_stdcall(ERRORPROVIDER_T c_error_provider, OMNIDRIVERDISPATCHLISTENER_T param0);
	EXPORTED void STDCALL ErrorProvider_Destroy_stdcall(ERRORPROVIDER_T error_provider);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ERRORPROVIDER_H */
