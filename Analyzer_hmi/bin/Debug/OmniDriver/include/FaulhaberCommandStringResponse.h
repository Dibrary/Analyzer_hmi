/**
 * File: FaulhaberCommandStringResponse.h
 * Autogenerated on Fri Mar 23 13:38:22 EDT 2018 based on
 * FaulhaberCommandStringResponse.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/FaulhaberCommandStringResponse
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FAULHABERCOMMANDSTRINGRESPONSE_H
#define FAULHABERCOMMANDSTRINGRESPONSE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "FaulhaberCommandBase.h"
#include "UniRS232.h"
#include "JString.h"
#include "Node.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class FaulhaberCommandBase;
class UniRS232;
class JString;
class Node;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED FaulhaberCommandStringResponse : public FaulhaberCommandBase // CPPClass.tag001
{
public: 
	FaulhaberCommandStringResponse(UniRS232& serPort);
	JString getStringResponse(int maxLength, int waitTimeout);
	JString getStringResponse(int maxLength);
	JString sendCommandStringResponse(Node& node, int maxLength);
	~FaulhaberCommandStringResponse();
	// No public default Java constructor; creating one:
	FaulhaberCommandStringResponse();
	// No public Java copy constructor; creating one:
	FaulhaberCommandStringResponse(const FaulhaberCommandStringResponse &that);
	// Creating assignment operator declaration:
	FaulhaberCommandStringResponse &operator=(const FaulhaberCommandStringResponse &that);

private:
	jmethodID mid_FaulhaberCommandStringResponse18;
	jmethodID mid_getStringResponse19;
	jmethodID mid_getStringResponse20;
	jmethodID mid_sendCommandStringResponse21;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_FAULHABERCOMMANDBASE_T
#define EXTERN_TYPEDEF_FAULHABERCOMMANDBASE_T
	typedef void* FAULHABERCOMMANDBASE_T;
#endif /* EXTERN_TYPEDEF_FAULHABERCOMMANDBASE_T */
#ifndef EXTERN_TYPEDEF_UNIRS232_T
#define EXTERN_TYPEDEF_UNIRS232_T
	typedef void* UNIRS232_T;
#endif /* EXTERN_TYPEDEF_UNIRS232_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_FAULHABERCOMMANDSTRINGRESPONSE_T
#define EXTERN_TYPEDEF_FAULHABERCOMMANDSTRINGRESPONSE_T
	typedef void* FAULHABERCOMMANDSTRINGRESPONSE_T;
#endif /* EXTERN_TYPEDEF_FAULHABERCOMMANDSTRINGRESPONSE_T */

	// No public default Java constructor; creating one:
	EXPORTED FAULHABERCOMMANDSTRINGRESPONSE_T FaulhaberCommandStringResponse_Create();
	EXPORTED FAULHABERCOMMANDSTRINGRESPONSE_T FaulhaberCommandStringResponse_Create_1(UNIRS232_T serPort);
	EXPORTED void FaulhaberCommandStringResponse_getStringResponse(FAULHABERCOMMANDSTRINGRESPONSE_T c_faulhaber_command_string_response, int maxLength, int waitTimeout, JSTRING_T retval);
	EXPORTED void FaulhaberCommandStringResponse_getStringResponse_1(FAULHABERCOMMANDSTRINGRESPONSE_T c_faulhaber_command_string_response, int maxLength, JSTRING_T retval);
	EXPORTED void FaulhaberCommandStringResponse_sendCommandStringResponse(FAULHABERCOMMANDSTRINGRESPONSE_T c_faulhaber_command_string_response, NODE_T node, int maxLength, JSTRING_T retval);
	EXPORTED void FaulhaberCommandStringResponse_Destroy(FAULHABERCOMMANDSTRINGRESPONSE_T faulhaber_command_string_response);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED FAULHABERCOMMANDSTRINGRESPONSE_T STDCALL FaulhaberCommandStringResponse_Create_stdcall_1(UNIRS232_T serPort);
	EXPORTED void STDCALL FaulhaberCommandStringResponse_getStringResponse_stdcall(FAULHABERCOMMANDSTRINGRESPONSE_T c_faulhaber_command_string_response, int maxLength, int waitTimeout, JSTRING_T retval);
	EXPORTED void STDCALL FaulhaberCommandStringResponse_getStringResponse_stdcall_1(FAULHABERCOMMANDSTRINGRESPONSE_T c_faulhaber_command_string_response, int maxLength, JSTRING_T retval);
	EXPORTED void STDCALL FaulhaberCommandStringResponse_sendCommandStringResponse_stdcall(FAULHABERCOMMANDSTRINGRESPONSE_T c_faulhaber_command_string_response, NODE_T node, int maxLength, JSTRING_T retval);
	EXPORTED void STDCALL FaulhaberCommandStringResponse_Destroy_stdcall(FAULHABERCOMMANDSTRINGRESPONSE_T faulhaber_command_string_response);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FAULHABERCOMMANDSTRINGRESPONSE_H */
