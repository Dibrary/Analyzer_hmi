/**
 * File: CalibrationImpl.h
 * Autogenerated on Fri Mar 23 13:38:56 EDT 2018 based on
 * CalibrationImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/mmsraman/features/calibration/CalibrationImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef CALIBRATIONIMPL_H
#define CALIBRATIONIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "MMSRamanSpectrometer.h"
#include "MMSRamanCalibration.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class MMSRamanSpectrometer;
class MMSRamanCalibration;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED CalibrationImpl : public USBFeature // CPPClass.tag001
{
public: 
	CalibrationImpl(USBInterface& usbInt, MMSRamanSpectrometer& spec);
	void readCalibrationFromSpectrometer();
	void writeCalibrationToSpectrometer(MMSRamanCalibration& cal);
	MMSRamanCalibration getCalibration();
	JStringArray getFeatureGUIClassnames();
	~CalibrationImpl();
	// No public default Java constructor; creating one:
	CalibrationImpl();
	// No public Java copy constructor; creating one:
	CalibrationImpl(const CalibrationImpl &that);
	// Creating assignment operator declaration:
	CalibrationImpl &operator=(const CalibrationImpl &that);

private:
	jmethodID mid_CalibrationImpl4180;
	jmethodID mid_readCalibrationFromSpectrometer4181;
	jmethodID mid_writeCalibrationToSpectrometer4182;
	jmethodID mid_getCalibration4183;
	jmethodID mid_getFeatureGUIClassnames4184;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_MMSRAMANSPECTROMETER_T
#define EXTERN_TYPEDEF_MMSRAMANSPECTROMETER_T
	typedef void* MMSRAMANSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_MMSRAMANSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_MMSRAMANCALIBRATION_T
#define EXTERN_TYPEDEF_MMSRAMANCALIBRATION_T
	typedef void* MMSRAMANCALIBRATION_T;
#endif /* EXTERN_TYPEDEF_MMSRAMANCALIBRATION_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_CALIBRATIONIMPL_T
#define EXTERN_TYPEDEF_CALIBRATIONIMPL_T
	typedef void* CALIBRATIONIMPL_T;
#endif /* EXTERN_TYPEDEF_CALIBRATIONIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED CALIBRATIONIMPL_T CalibrationImpl_Create();
	EXPORTED CALIBRATIONIMPL_T CalibrationImpl_Create_1(USBINTERFACE_T usbInt, MMSRAMANSPECTROMETER_T spec);
	EXPORTED void CalibrationImpl_readCalibrationFromSpectrometer(CALIBRATIONIMPL_T c_calibration_impl);
	EXPORTED void CalibrationImpl_writeCalibrationToSpectrometer(CALIBRATIONIMPL_T c_calibration_impl, MMSRAMANCALIBRATION_T cal);
	EXPORTED void CalibrationImpl_getCalibration(CALIBRATIONIMPL_T c_calibration_impl, MMSRAMANCALIBRATION_T retval);
	EXPORTED void CalibrationImpl_getFeatureGUIClassnames(CALIBRATIONIMPL_T c_calibration_impl, JSTRINGARRAY_T retval);
	EXPORTED void CalibrationImpl_Destroy(CALIBRATIONIMPL_T calibration_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED CALIBRATIONIMPL_T STDCALL CalibrationImpl_Create_stdcall_1(USBINTERFACE_T usbInt, MMSRAMANSPECTROMETER_T spec);
	EXPORTED void STDCALL CalibrationImpl_readCalibrationFromSpectrometer_stdcall(CALIBRATIONIMPL_T c_calibration_impl);
	EXPORTED void STDCALL CalibrationImpl_writeCalibrationToSpectrometer_stdcall(CALIBRATIONIMPL_T c_calibration_impl, MMSRAMANCALIBRATION_T cal);
	EXPORTED void STDCALL CalibrationImpl_getCalibration_stdcall(CALIBRATIONIMPL_T c_calibration_impl, MMSRAMANCALIBRATION_T retval);
	EXPORTED void STDCALL CalibrationImpl_getFeatureGUIClassnames_stdcall(CALIBRATIONIMPL_T c_calibration_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL CalibrationImpl_Destroy_stdcall(CALIBRATIONIMPL_T calibration_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* CALIBRATIONIMPL_H */
