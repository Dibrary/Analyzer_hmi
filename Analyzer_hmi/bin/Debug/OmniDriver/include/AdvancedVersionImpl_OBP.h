/**
 * File: AdvancedVersionImpl_OBP.h
 * Autogenerated on Fri Mar 23 13:38:29 EDT 2018 based on
 * AdvancedVersionImpl_OBP.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/advancedversion/AdvancedVersionImpl_OBP
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ADVANCEDVERSIONIMPL_OBP_H
#define ADVANCEDVERSIONIMPL_OBP_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "AdvancedVersionImpl.h"
#include "OceanBinaryProtocolProvider.h"
#include "USBInterface.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class AdvancedVersionImpl;
class OceanBinaryProtocolProvider;
class USBInterface;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED AdvancedVersionImpl_OBP : public AdvancedVersionImpl // CPPClass.tag001
{
public: 
	AdvancedVersionImpl_OBP(OceanBinaryProtocolProvider& device, USBInterface& usbInt);
	JString getCpuVersion();
	JString getCpuSubVersion();
	JString getFPGAFirmwareVersion();
	JString getPSOCVersion();
	int getDetectorType();
	void setDetectorType(int type);
	void setScansToAverage(int scans);
	int getScansToAverage();
	~AdvancedVersionImpl_OBP();
	// No public default Java constructor; creating one:
	AdvancedVersionImpl_OBP();
	// No public Java copy constructor; creating one:
	AdvancedVersionImpl_OBP(const AdvancedVersionImpl_OBP &that);
	// Creating assignment operator declaration:
	AdvancedVersionImpl_OBP &operator=(const AdvancedVersionImpl_OBP &that);

private:
	jmethodID mid_AdvancedVersionImpl_OBP780;
	jmethodID mid_getCpuVersion781;
	jmethodID mid_getCpuSubVersion782;
	jmethodID mid_getFPGAFirmwareVersion783;
	jmethodID mid_getPSOCVersion784;
	jmethodID mid_getDetectorType785;
	jmethodID mid_setDetectorType786;
	jmethodID mid_setScansToAverage787;
	jmethodID mid_getScansToAverage788;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_T
#define EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_T
	typedef void* ADVANCEDVERSIONIMPL_T;
#endif /* EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_T */
#ifndef EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
#define EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T
	typedef void* OCEANBINARYPROTOCOLPROVIDER_T;
#endif /* EXTERN_TYPEDEF_OCEANBINARYPROTOCOLPROVIDER_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_OBP_T
#define EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_OBP_T
	typedef void* ADVANCEDVERSIONIMPL_OBP_T;
#endif /* EXTERN_TYPEDEF_ADVANCEDVERSIONIMPL_OBP_T */

	// No public default Java constructor; creating one:
	EXPORTED ADVANCEDVERSIONIMPL_OBP_T AdvancedVersionImpl_OBP_Create();
	EXPORTED ADVANCEDVERSIONIMPL_OBP_T AdvancedVersionImpl_OBP_Create_1(OCEANBINARYPROTOCOLPROVIDER_T device, USBINTERFACE_T usbInt);
	EXPORTED void AdvancedVersionImpl_OBP_getCpuVersion(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED void AdvancedVersionImpl_OBP_getCpuSubVersion(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED void AdvancedVersionImpl_OBP_getFPGAFirmwareVersion(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED void AdvancedVersionImpl_OBP_getPSOCVersion(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED int AdvancedVersionImpl_OBP_getDetectorType(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p);
	EXPORTED void AdvancedVersionImpl_OBP_setDetectorType(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, int type);
	EXPORTED void AdvancedVersionImpl_OBP_setScansToAverage(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, int scans);
	EXPORTED int AdvancedVersionImpl_OBP_getScansToAverage(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p);
	EXPORTED void AdvancedVersionImpl_OBP_Destroy(ADVANCEDVERSIONIMPL_OBP_T advanced_version_impl_o_b_p);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED ADVANCEDVERSIONIMPL_OBP_T STDCALL AdvancedVersionImpl_OBP_Create_stdcall_1(OCEANBINARYPROTOCOLPROVIDER_T device, USBINTERFACE_T usbInt);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_getCpuVersion_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_getCpuSubVersion_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_getFPGAFirmwareVersion_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_getPSOCVersion_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, JSTRING_T retval);
	EXPORTED int STDCALL AdvancedVersionImpl_OBP_getDetectorType_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_setDetectorType_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, int type);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_setScansToAverage_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p, int scans);
	EXPORTED int STDCALL AdvancedVersionImpl_OBP_getScansToAverage_stdcall(ADVANCEDVERSIONIMPL_OBP_T c_advanced_version_impl_o_b_p);
	EXPORTED void STDCALL AdvancedVersionImpl_OBP_Destroy_stdcall(ADVANCEDVERSIONIMPL_OBP_T advanced_version_impl_o_b_p);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ADVANCEDVERSIONIMPL_OBP_H */
