/**
 * File: QEProTriggerMode.h
 * Autogenerated on Fri Mar 23 13:39:04 EDT 2018 based on
 * QEProTriggerMode.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/qepro/QEProTriggerMode
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef QEPROTRIGGERMODE_H
#define QEPROTRIGGERMODE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "ExternalTriggerMode.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class ExternalTriggerMode;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED QEProTriggerMode : public ExternalTriggerMode // CPPClass.tag001
{
public: 
	QEProTriggerMode(int mode);
	JString toString();
	~QEProTriggerMode();
	// No public default Java constructor; creating one:
	QEProTriggerMode();
	// No public Java copy constructor; creating one:
	QEProTriggerMode(const QEProTriggerMode &that);
	// Creating assignment operator declaration:
	QEProTriggerMode &operator=(const QEProTriggerMode &that);
	int QEPRO_TRIGGER_MODE_NORMAL;
	int QEPRO_TRIGGER_MODE_LEVEL;
	int QEPRO_TRIGGER_MODE_SYNC;
	int QEPRO_TRIGGER_MODE_EDGE;

private:
	jmethodID mid_QEProTriggerMode5331;
	jmethodID mid_toString5332;
	jfieldID fid_QEPRO_TRIGGER_MODE_NORMAL;
	jfieldID fid_QEPRO_TRIGGER_MODE_LEVEL;
	jfieldID fid_QEPRO_TRIGGER_MODE_SYNC;
	jfieldID fid_QEPRO_TRIGGER_MODE_EDGE;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODE_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODE_T
	typedef void* EXTERNALTRIGGERMODE_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODE_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_QEPROTRIGGERMODE_T
#define EXTERN_TYPEDEF_QEPROTRIGGERMODE_T
	typedef void* QEPROTRIGGERMODE_T;
#endif /* EXTERN_TYPEDEF_QEPROTRIGGERMODE_T */

	// No public default Java constructor; creating one:
	EXPORTED QEPROTRIGGERMODE_T QEProTriggerMode_Create();
	EXPORTED QEPROTRIGGERMODE_T QEProTriggerMode_Create_1(int mode);
	EXPORTED void QEProTriggerMode_toString(QEPROTRIGGERMODE_T c_qeprotriggermode, JSTRING_T retval);
	EXPORTED void QEProTriggerMode_Destroy(QEPROTRIGGERMODE_T qeprotriggermode);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED QEPROTRIGGERMODE_T STDCALL QEProTriggerMode_Create_stdcall_1(int mode);
	EXPORTED void STDCALL QEProTriggerMode_toString_stdcall(QEPROTRIGGERMODE_T c_qeprotriggermode, JSTRING_T retval);
	EXPORTED void STDCALL QEProTriggerMode_Destroy_stdcall(QEPROTRIGGERMODE_T qeprotriggermode);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* QEPROTRIGGERMODE_H */
