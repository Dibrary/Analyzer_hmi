/**
 * File: USBEndpointDescriptor.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * USBEndpointDescriptor.java
 * for the Java class
 * com/oceanoptics/uniusb/USBEndpointDescriptor
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USBENDPOINTDESCRIPTOR_H
#define USBENDPOINTDESCRIPTOR_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USBEndpointDescriptor : public BaseJavaClass // CPPClass.tag001
{
public: 
	USBEndpointDescriptor();
	USBEndpointDescriptor(signed char bLength, signed char bDescriptorType, short bEndpointAddress, signed char bmAttributes, short wMaxPacketSize, signed char bInterval);
	JString toString();
	signed char getLength();
	signed char getDescriptorType();
	short getEndpointAddress();
	signed char getAttributes();
	short getMaxPacketSize();
	signed char getInterval();
	void setLength(signed char bLength);
	void setDescriptorType(signed char bDescriptorType);
	void setEndpointAddress(short bEndpointAddress);
	void setAttributes(signed char bmAttributes);
	void setMaxPacketSize(short wMaxPacketSize);
	void setInterval(signed char bInterval);
	~USBEndpointDescriptor();
	// No public Java copy constructor; creating one:
	USBEndpointDescriptor(const USBEndpointDescriptor &that);
	// Creating assignment operator declaration:
	USBEndpointDescriptor &operator=(const USBEndpointDescriptor &that);

private:
	jmethodID mid_USBEndpointDescriptor6631;
	jmethodID mid_USBEndpointDescriptor6632;
	jmethodID mid_toString6633;
	jmethodID mid_getLength6634;
	jmethodID mid_getDescriptorType6635;
	jmethodID mid_getEndpointAddress6636;
	jmethodID mid_getAttributes6637;
	jmethodID mid_getMaxPacketSize6638;
	jmethodID mid_getInterval6639;
	jmethodID mid_setLength6640;
	jmethodID mid_setDescriptorType6641;
	jmethodID mid_setEndpointAddress6642;
	jmethodID mid_setAttributes6643;
	jmethodID mid_setMaxPacketSize6644;
	jmethodID mid_setInterval6645;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */

	EXPORTED USBENDPOINTDESCRIPTOR_T USBEndpointDescriptor_Create();
	EXPORTED USBENDPOINTDESCRIPTOR_T USBEndpointDescriptor_Create_1(signed char bLength, signed char bDescriptorType, short bEndpointAddress, signed char bmAttributes, short wMaxPacketSize, signed char bInterval);
	EXPORTED void USBEndpointDescriptor_toString(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, JSTRING_T retval);
	EXPORTED signed char USBEndpointDescriptor_getLength(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED signed char USBEndpointDescriptor_getDescriptorType(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED short USBEndpointDescriptor_getEndpointAddress(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED signed char USBEndpointDescriptor_getAttributes(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED short USBEndpointDescriptor_getMaxPacketSize(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED signed char USBEndpointDescriptor_getInterval(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED void USBEndpointDescriptor_setLength(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bLength);
	EXPORTED void USBEndpointDescriptor_setDescriptorType(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bDescriptorType);
	EXPORTED void USBEndpointDescriptor_setEndpointAddress(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, short bEndpointAddress);
	EXPORTED void USBEndpointDescriptor_setAttributes(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bmAttributes);
	EXPORTED void USBEndpointDescriptor_setMaxPacketSize(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, short wMaxPacketSize);
	EXPORTED void USBEndpointDescriptor_setInterval(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bInterval);
	EXPORTED void USBEndpointDescriptor_Destroy(USBENDPOINTDESCRIPTOR_T usbendpointdescriptor);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USBENDPOINTDESCRIPTOR_T STDCALL USBEndpointDescriptor_Create_stdcall();
	EXPORTED USBENDPOINTDESCRIPTOR_T STDCALL USBEndpointDescriptor_Create_stdcall_1(signed char bLength, signed char bDescriptorType, short bEndpointAddress, signed char bmAttributes, short wMaxPacketSize, signed char bInterval);
	EXPORTED void STDCALL USBEndpointDescriptor_toString_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, JSTRING_T retval);
	EXPORTED signed char STDCALL USBEndpointDescriptor_getLength_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED signed char STDCALL USBEndpointDescriptor_getDescriptorType_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED short STDCALL USBEndpointDescriptor_getEndpointAddress_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED signed char STDCALL USBEndpointDescriptor_getAttributes_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED short STDCALL USBEndpointDescriptor_getMaxPacketSize_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED signed char STDCALL USBEndpointDescriptor_getInterval_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor);
	EXPORTED void STDCALL USBEndpointDescriptor_setLength_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bLength);
	EXPORTED void STDCALL USBEndpointDescriptor_setDescriptorType_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bDescriptorType);
	EXPORTED void STDCALL USBEndpointDescriptor_setEndpointAddress_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, short bEndpointAddress);
	EXPORTED void STDCALL USBEndpointDescriptor_setAttributes_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bmAttributes);
	EXPORTED void STDCALL USBEndpointDescriptor_setMaxPacketSize_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, short wMaxPacketSize);
	EXPORTED void STDCALL USBEndpointDescriptor_setInterval_stdcall(USBENDPOINTDESCRIPTOR_T c_usbendpointdescriptor, signed char bInterval);
	EXPORTED void STDCALL USBEndpointDescriptor_Destroy_stdcall(USBENDPOINTDESCRIPTOR_T usbendpointdescriptor);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USBENDPOINTDESCRIPTOR_H */
