/**
 * File: Indy.h
 * Autogenerated on Fri Mar 23 13:38:36 EDT 2018 based on
 * Indy.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/indy/Indy
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INDY_H
#define INDY_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "IndyVoltageSampleArray.h"
#include "IndyCurrentSampleArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class IndyVoltageSampleArray;
class IndyCurrentSampleArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Indy : public BaseJavaClass // CPPClass.tag001
{
public: 
	int getNumberOfIndyModules();
	int getNumberOfVoltageOutputs(int param0);
	int getNumberOfVoltageInputs(int param0);
	int getNumberOfCurrentOutputs(int param0);
	int getNumberOfCurrentInputs(int param0);
	int getNumberOfIndyGPIO(int param0);
	int getVoltageOutputMaximumCounts(int param0, int param1);
	int getCurrentOutputMaximumCounts(int param0, int param1);
	IndyVoltageSampleArray sampleVoltageInputs(int param0);
	IndyVoltageSampleArray getVoltageOutputs(int param0);
	IndyCurrentSampleArray sampleCurrentInputs(int param0);
	IndyCurrentSampleArray getCurrentOutputs(int param0);
	ShortArray getCurrentOutputEnables(int param0);
	ShortArray getCurrentOutputEnergized(int param0);
	int getIndyGPIOInputValues(int param0);
	int getIndyGPIOOutputValues(int param0);
	int getIndyGPIOOutputEnables(int param0);
	short getExcitationEnable(int param0, int param1);
	float getExcitationVoltage(int param0, int param1);
	FloatArray getExcitationVoltageOptions(int param0, int param1);
	int getCurrentOutputCalibration4mA(int param0, int param1);
	int getCurrentOutputCalibration20mA(int param0, int param1);
	void setVoltageOutputVolts(int param0, int param1, float param2);
	void setVoltageOutputCounts(int param0, int param1, int param2);
	void setCurrentOutputMilliamps(int param0, int param1, float param2);
	void setCurrentOutputCounts(int param0, int param1, int param2);
	void setIndyGPIOConfiguration(int param0, int param1, int param2, int param3);
	void setIndyGPIOOutputValues(int param0, int param1, int param2);
	void setCurrentOutputEnable(int param0, int param1, short param2);
	void setExcitationVoltage(int param0, int param1, float param2);
	void setExcitationEnable(int param0, int param1, short param2);
	void setCurrentOutputCalibration4mA(int param0, int param1, int param2);
	void setCurrentOutputCalibration20mA(int param0, int param1, int param2);
	~Indy();
	// No public default Java constructor; creating one:
	Indy();
	// No public Java copy constructor; creating one:
	Indy(const Indy &that);
	// Creating assignment operator declaration:
	Indy &operator=(const Indy &that);

private:
	jmethodID mid_getNumberOfIndyModules1399;
	jmethodID mid_getNumberOfVoltageOutputs1400;
	jmethodID mid_getNumberOfVoltageInputs1401;
	jmethodID mid_getNumberOfCurrentOutputs1402;
	jmethodID mid_getNumberOfCurrentInputs1403;
	jmethodID mid_getNumberOfIndyGPIO1404;
	jmethodID mid_getVoltageOutputMaximumCounts1405;
	jmethodID mid_getCurrentOutputMaximumCounts1406;
	jmethodID mid_sampleVoltageInputs1407;
	jmethodID mid_getVoltageOutputs1408;
	jmethodID mid_sampleCurrentInputs1409;
	jmethodID mid_getCurrentOutputs1410;
	jmethodID mid_getCurrentOutputEnables1411;
	jmethodID mid_getCurrentOutputEnergized1412;
	jmethodID mid_getIndyGPIOInputValues1413;
	jmethodID mid_getIndyGPIOOutputValues1414;
	jmethodID mid_getIndyGPIOOutputEnables1415;
	jmethodID mid_getExcitationEnable1416;
	jmethodID mid_getExcitationVoltage1417;
	jmethodID mid_getExcitationVoltageOptions1418;
	jmethodID mid_getCurrentOutputCalibration4mA1419;
	jmethodID mid_getCurrentOutputCalibration20mA1420;
	jmethodID mid_setVoltageOutputVolts1421;
	jmethodID mid_setVoltageOutputCounts1422;
	jmethodID mid_setCurrentOutputMilliamps1423;
	jmethodID mid_setCurrentOutputCounts1424;
	jmethodID mid_setIndyGPIOConfiguration1425;
	jmethodID mid_setIndyGPIOOutputValues1426;
	jmethodID mid_setCurrentOutputEnable1427;
	jmethodID mid_setExcitationVoltage1428;
	jmethodID mid_setExcitationEnable1429;
	jmethodID mid_setCurrentOutputCalibration4mA1430;
	jmethodID mid_setCurrentOutputCalibration20mA1431;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_INDYVOLTAGESAMPLEARRAY_T
#define EXTERN_TYPEDEF_INDYVOLTAGESAMPLEARRAY_T
	typedef void* INDYVOLTAGESAMPLEARRAY_T;
#endif /* EXTERN_TYPEDEF_INDYVOLTAGESAMPLEARRAY_T */
#ifndef EXTERN_TYPEDEF_INDYCURRENTSAMPLEARRAY_T
#define EXTERN_TYPEDEF_INDYCURRENTSAMPLEARRAY_T
	typedef void* INDYCURRENTSAMPLEARRAY_T;
#endif /* EXTERN_TYPEDEF_INDYCURRENTSAMPLEARRAY_T */
#ifndef EXTERN_TYPEDEF_INDY_T
#define EXTERN_TYPEDEF_INDY_T
	typedef void* INDY_T;
#endif /* EXTERN_TYPEDEF_INDY_T */

	// No public default Java constructor; creating one:
	EXPORTED INDY_T Indy_Create();
	EXPORTED int Indy_getNumberOfIndyModules(INDY_T c_indy);
	EXPORTED int Indy_getNumberOfVoltageOutputs(INDY_T c_indy, int param0);
	EXPORTED int Indy_getNumberOfVoltageInputs(INDY_T c_indy, int param0);
	EXPORTED int Indy_getNumberOfCurrentOutputs(INDY_T c_indy, int param0);
	EXPORTED int Indy_getNumberOfCurrentInputs(INDY_T c_indy, int param0);
	EXPORTED int Indy_getNumberOfIndyGPIO(INDY_T c_indy, int param0);
	EXPORTED int Indy_getVoltageOutputMaximumCounts(INDY_T c_indy, int param0, int param1);
	EXPORTED int Indy_getCurrentOutputMaximumCounts(INDY_T c_indy, int param0, int param1);
	EXPORTED void Indy_sampleVoltageInputs(INDY_T c_indy, int param0, INDYVOLTAGESAMPLEARRAY_T retval);
	EXPORTED void Indy_getVoltageOutputs(INDY_T c_indy, int param0, INDYVOLTAGESAMPLEARRAY_T retval);
	EXPORTED void Indy_sampleCurrentInputs(INDY_T c_indy, int param0, INDYCURRENTSAMPLEARRAY_T retval);
	EXPORTED void Indy_getCurrentOutputs(INDY_T c_indy, int param0, INDYCURRENTSAMPLEARRAY_T retval);
	EXPORTED void Indy_getCurrentOutputEnables(INDY_T c_indy, int param0, SHORTARRAY_T retval);
	EXPORTED void Indy_getCurrentOutputEnergized(INDY_T c_indy, int param0, SHORTARRAY_T retval);
	EXPORTED int Indy_getIndyGPIOInputValues(INDY_T c_indy, int param0);
	EXPORTED int Indy_getIndyGPIOOutputValues(INDY_T c_indy, int param0);
	EXPORTED int Indy_getIndyGPIOOutputEnables(INDY_T c_indy, int param0);
	EXPORTED short Indy_getExcitationEnable(INDY_T c_indy, int param0, int param1);
	EXPORTED float Indy_getExcitationVoltage(INDY_T c_indy, int param0, int param1);
	EXPORTED void Indy_getExcitationVoltageOptions(INDY_T c_indy, int param0, int param1, FLOATARRAY_T retval);
	EXPORTED int Indy_getCurrentOutputCalibration4mA(INDY_T c_indy, int param0, int param1);
	EXPORTED int Indy_getCurrentOutputCalibration20mA(INDY_T c_indy, int param0, int param1);
	EXPORTED void Indy_setVoltageOutputVolts(INDY_T c_indy, int param0, int param1, float param2);
	EXPORTED void Indy_setVoltageOutputCounts(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void Indy_setCurrentOutputMilliamps(INDY_T c_indy, int param0, int param1, float param2);
	EXPORTED void Indy_setCurrentOutputCounts(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void Indy_setIndyGPIOConfiguration(INDY_T c_indy, int param0, int param1, int param2, int param3);
	EXPORTED void Indy_setIndyGPIOOutputValues(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void Indy_setCurrentOutputEnable(INDY_T c_indy, int param0, int param1, short param2);
	EXPORTED void Indy_setExcitationVoltage(INDY_T c_indy, int param0, int param1, float param2);
	EXPORTED void Indy_setExcitationEnable(INDY_T c_indy, int param0, int param1, short param2);
	EXPORTED void Indy_setCurrentOutputCalibration4mA(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void Indy_setCurrentOutputCalibration20mA(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void Indy_Destroy(INDY_T indy);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED int STDCALL Indy_getNumberOfIndyModules_stdcall(INDY_T c_indy);
	EXPORTED int STDCALL Indy_getNumberOfVoltageOutputs_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getNumberOfVoltageInputs_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getNumberOfCurrentOutputs_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getNumberOfCurrentInputs_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getNumberOfIndyGPIO_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getVoltageOutputMaximumCounts_stdcall(INDY_T c_indy, int param0, int param1);
	EXPORTED int STDCALL Indy_getCurrentOutputMaximumCounts_stdcall(INDY_T c_indy, int param0, int param1);
	EXPORTED void STDCALL Indy_sampleVoltageInputs_stdcall(INDY_T c_indy, int param0, INDYVOLTAGESAMPLEARRAY_T retval);
	EXPORTED void STDCALL Indy_getVoltageOutputs_stdcall(INDY_T c_indy, int param0, INDYVOLTAGESAMPLEARRAY_T retval);
	EXPORTED void STDCALL Indy_sampleCurrentInputs_stdcall(INDY_T c_indy, int param0, INDYCURRENTSAMPLEARRAY_T retval);
	EXPORTED void STDCALL Indy_getCurrentOutputs_stdcall(INDY_T c_indy, int param0, INDYCURRENTSAMPLEARRAY_T retval);
	EXPORTED void STDCALL Indy_getCurrentOutputEnables_stdcall(INDY_T c_indy, int param0, SHORTARRAY_T retval);
	EXPORTED void STDCALL Indy_getCurrentOutputEnergized_stdcall(INDY_T c_indy, int param0, SHORTARRAY_T retval);
	EXPORTED int STDCALL Indy_getIndyGPIOInputValues_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getIndyGPIOOutputValues_stdcall(INDY_T c_indy, int param0);
	EXPORTED int STDCALL Indy_getIndyGPIOOutputEnables_stdcall(INDY_T c_indy, int param0);
	EXPORTED short STDCALL Indy_getExcitationEnable_stdcall(INDY_T c_indy, int param0, int param1);
	EXPORTED float STDCALL Indy_getExcitationVoltage_stdcall(INDY_T c_indy, int param0, int param1);
	EXPORTED void STDCALL Indy_getExcitationVoltageOptions_stdcall(INDY_T c_indy, int param0, int param1, FLOATARRAY_T retval);
	EXPORTED int STDCALL Indy_getCurrentOutputCalibration4mA_stdcall(INDY_T c_indy, int param0, int param1);
	EXPORTED int STDCALL Indy_getCurrentOutputCalibration20mA_stdcall(INDY_T c_indy, int param0, int param1);
	EXPORTED void STDCALL Indy_setVoltageOutputVolts_stdcall(INDY_T c_indy, int param0, int param1, float param2);
	EXPORTED void STDCALL Indy_setVoltageOutputCounts_stdcall(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void STDCALL Indy_setCurrentOutputMilliamps_stdcall(INDY_T c_indy, int param0, int param1, float param2);
	EXPORTED void STDCALL Indy_setCurrentOutputCounts_stdcall(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void STDCALL Indy_setIndyGPIOConfiguration_stdcall(INDY_T c_indy, int param0, int param1, int param2, int param3);
	EXPORTED void STDCALL Indy_setIndyGPIOOutputValues_stdcall(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void STDCALL Indy_setCurrentOutputEnable_stdcall(INDY_T c_indy, int param0, int param1, short param2);
	EXPORTED void STDCALL Indy_setExcitationVoltage_stdcall(INDY_T c_indy, int param0, int param1, float param2);
	EXPORTED void STDCALL Indy_setExcitationEnable_stdcall(INDY_T c_indy, int param0, int param1, short param2);
	EXPORTED void STDCALL Indy_setCurrentOutputCalibration4mA_stdcall(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void STDCALL Indy_setCurrentOutputCalibration20mA_stdcall(INDY_T c_indy, int param0, int param1, int param2);
	EXPORTED void STDCALL Indy_Destroy_stdcall(INDY_T indy);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INDY_H */
