/**
 * File: Version.h
 * Autogenerated on Fri Mar 23 13:38:42 EDT 2018 based on
 * Version.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/version/Version
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef VERSION_H
#define VERSION_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#include "AcquisitionListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
class AcquisitionListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Version : public BaseJavaClass // CPPClass.tag001
{
public: 
	short isAdvancedVersion();
	JString getFirmwareVersion();
	void addAcquisitionListener(AcquisitionListener& param0);
	void removeAcquisitionListener(AcquisitionListener& param0);
	~Version();
	// No public default Java constructor; creating one:
	Version();
	// No public Java copy constructor; creating one:
	Version(const Version &that);
	// Creating assignment operator declaration:
	Version &operator=(const Version &that);

private:
	jmethodID mid_isAdvancedVersion2322;
	jmethodID mid_getFirmwareVersion2323;
	jmethodID mid_addAcquisitionListener2324;
	jmethodID mid_removeAcquisitionListener2325;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
#define EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
	typedef void* ACQUISITIONLISTENER_T;
#endif /* EXTERN_TYPEDEF_ACQUISITIONLISTENER_T */
#ifndef EXTERN_TYPEDEF_VERSION_T
#define EXTERN_TYPEDEF_VERSION_T
	typedef void* VERSION_T;
#endif /* EXTERN_TYPEDEF_VERSION_T */

	// No public default Java constructor; creating one:
	EXPORTED VERSION_T Version_Create();
	EXPORTED short Version_isAdvancedVersion(VERSION_T c_version);
	EXPORTED void Version_getFirmwareVersion(VERSION_T c_version, JSTRING_T retval);
	EXPORTED void Version_addAcquisitionListener(VERSION_T c_version, ACQUISITIONLISTENER_T param0);
	EXPORTED void Version_removeAcquisitionListener(VERSION_T c_version, ACQUISITIONLISTENER_T param0);
	EXPORTED void Version_Destroy(VERSION_T version);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED short STDCALL Version_isAdvancedVersion_stdcall(VERSION_T c_version);
	EXPORTED void STDCALL Version_getFirmwareVersion_stdcall(VERSION_T c_version, JSTRING_T retval);
	EXPORTED void STDCALL Version_addAcquisitionListener_stdcall(VERSION_T c_version, ACQUISITIONLISTENER_T param0);
	EXPORTED void STDCALL Version_removeAcquisitionListener_stdcall(VERSION_T c_version, ACQUISITIONLISTENER_T param0);
	EXPORTED void STDCALL Version_Destroy_stdcall(VERSION_T version);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* VERSION_H */
