/**
 * File: NIR256.h
 * Autogenerated on Fri Mar 23 13:39:01 EDT 2018 based on
 * NIR256.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/nir/nir256/NIR256
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef NIR256_H
#define NIR256_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "NIR.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class NIR;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED NIR256 : public NIR // CPPClass.tag001
{
public: 
	NIR256();
	NIR256(int i);
	void openSpectrometer(int index);
	~NIR256();
	// No public Java copy constructor; creating one:
	NIR256(const NIR256 &that);
	// Creating assignment operator declaration:
	NIR256 &operator=(const NIR256 &that);

private:
	jmethodID mid_NIR2564927;
	jmethodID mid_NIR2564928;
	jmethodID mid_openSpectrometer4929;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NIR_T
#define EXTERN_TYPEDEF_NIR_T
	typedef void* NIR_T;
#endif /* EXTERN_TYPEDEF_NIR_T */
#ifndef EXTERN_TYPEDEF_NIR256_T
#define EXTERN_TYPEDEF_NIR256_T
	typedef void* NIR256_T;
#endif /* EXTERN_TYPEDEF_NIR256_T */

	EXPORTED NIR256_T NIR256_Create();
	EXPORTED NIR256_T NIR256_Create_1(int i);
	EXPORTED void NIR256_openSpectrometer(NIR256_T c_nir256, int index);
	EXPORTED void NIR256_Destroy(NIR256_T nir256);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED NIR256_T STDCALL NIR256_Create_stdcall();
	EXPORTED NIR256_T STDCALL NIR256_Create_stdcall_1(int i);
	EXPORTED void STDCALL NIR256_openSpectrometer_stdcall(NIR256_T c_nir256, int index);
	EXPORTED void STDCALL NIR256_Destroy_stdcall(NIR256_T nir256);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* NIR256_H */
