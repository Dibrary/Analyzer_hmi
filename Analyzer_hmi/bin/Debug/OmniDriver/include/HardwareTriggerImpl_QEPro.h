/**
 * File: HardwareTriggerImpl_QEPro.h
 * Autogenerated on Fri Mar 23 13:38:35 EDT 2018 based on
 * HardwareTriggerImpl_QEPro.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/hardwaretrigger/HardwareTriggerImpl_QEPro
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HARDWARETRIGGERIMPL_QEPRO_H
#define HARDWARETRIGGERIMPL_QEPRO_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "HardwareTriggerImpl.h"
#include "QEPro.h"
#include "USBInterface.h"
#include "QEProTriggerModeArray.h"
#include "ExternalTriggerModeArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class HardwareTriggerImpl;
class QEPro;
class USBInterface;
class QEProTriggerModeArray;
class ExternalTriggerModeArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HardwareTriggerImpl_QEPro : public HardwareTriggerImpl // CPPClass.tag001
{
public: 
	HardwareTriggerImpl_QEPro(QEPro& qe, USBInterface& usbInt, QEProTriggerModeArray& modes);
	ExternalTriggerModeArray getExternalTriggerModes();
	void setExternalTriggerMode(int mode);
	void sendSimulatedTriggerSignal();
	~HardwareTriggerImpl_QEPro();
	// No public default Java constructor; creating one:
	HardwareTriggerImpl_QEPro();
	// No public Java copy constructor; creating one:
	HardwareTriggerImpl_QEPro(const HardwareTriggerImpl_QEPro &that);
	// Creating assignment operator declaration:
	HardwareTriggerImpl_QEPro &operator=(const HardwareTriggerImpl_QEPro &that);

private:
	jmethodID mid_HardwareTriggerImpl_QEPro1357;
	jmethodID mid_getExternalTriggerModes1358;
	jmethodID mid_setExternalTriggerMode1359;
	jmethodID mid_sendSimulatedTriggerSignal1360;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T
#define EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T
	typedef void* HARDWARETRIGGERIMPL_T;
#endif /* EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T */
#ifndef EXTERN_TYPEDEF_QEPRO_T
#define EXTERN_TYPEDEF_QEPRO_T
	typedef void* QEPRO_T;
#endif /* EXTERN_TYPEDEF_QEPRO_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_QEPROTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_QEPROTRIGGERMODEARRAY_T
	typedef void* QEPROTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_QEPROTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_QEPRO_T
#define EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_QEPRO_T
	typedef void* HARDWARETRIGGERIMPL_QEPRO_T;
#endif /* EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_QEPRO_T */

	// No public default Java constructor; creating one:
	EXPORTED HARDWARETRIGGERIMPL_QEPRO_T HardwareTriggerImpl_QEPro_Create();
	EXPORTED HARDWARETRIGGERIMPL_QEPRO_T HardwareTriggerImpl_QEPro_Create_1(QEPRO_T qe, USBINTERFACE_T usbInt, QEPROTRIGGERMODEARRAY_T modes);
	EXPORTED void HardwareTriggerImpl_QEPro_getExternalTriggerModes(HARDWARETRIGGERIMPL_QEPRO_T c_hardware_trigger_impl_q_e_pro, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void HardwareTriggerImpl_QEPro_setExternalTriggerMode(HARDWARETRIGGERIMPL_QEPRO_T c_hardware_trigger_impl_q_e_pro, int mode);
	EXPORTED void HardwareTriggerImpl_QEPro_sendSimulatedTriggerSignal(HARDWARETRIGGERIMPL_QEPRO_T c_hardware_trigger_impl_q_e_pro);
	EXPORTED void HardwareTriggerImpl_QEPro_Destroy(HARDWARETRIGGERIMPL_QEPRO_T hardware_trigger_impl_q_e_pro);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HARDWARETRIGGERIMPL_QEPRO_T STDCALL HardwareTriggerImpl_QEPro_Create_stdcall_1(QEPRO_T qe, USBINTERFACE_T usbInt, QEPROTRIGGERMODEARRAY_T modes);
	EXPORTED void STDCALL HardwareTriggerImpl_QEPro_getExternalTriggerModes_stdcall(HARDWARETRIGGERIMPL_QEPRO_T c_hardware_trigger_impl_q_e_pro, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void STDCALL HardwareTriggerImpl_QEPro_setExternalTriggerMode_stdcall(HARDWARETRIGGERIMPL_QEPRO_T c_hardware_trigger_impl_q_e_pro, int mode);
	EXPORTED void STDCALL HardwareTriggerImpl_QEPro_sendSimulatedTriggerSignal_stdcall(HARDWARETRIGGERIMPL_QEPRO_T c_hardware_trigger_impl_q_e_pro);
	EXPORTED void STDCALL HardwareTriggerImpl_QEPro_Destroy_stdcall(HARDWARETRIGGERIMPL_QEPRO_T hardware_trigger_impl_q_e_pro);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HARDWARETRIGGERIMPL_QEPRO_H */
