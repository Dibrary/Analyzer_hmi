/**
 * File: MoveAndWait.h
 * Autogenerated on Fri Mar 23 13:38:23 EDT 2018 based on
 * MoveAndWait.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/moveandwait/MoveAndWait
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MOVEANDWAIT_H
#define MOVEANDWAIT_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Node.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Node;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED MoveAndWait : public BaseJavaClass // CPPClass.tag001
{
public: 
	void moveAndWait(Node& param0, long long param1);
	~MoveAndWait();
	// No public default Java constructor; creating one:
	MoveAndWait();
	// No public Java copy constructor; creating one:
	MoveAndWait(const MoveAndWait &that);
	// Creating assignment operator declaration:
	MoveAndWait &operator=(const MoveAndWait &that);

private:
	jmethodID mid_moveAndWait126;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_MOVEANDWAIT_T
#define EXTERN_TYPEDEF_MOVEANDWAIT_T
	typedef void* MOVEANDWAIT_T;
#endif /* EXTERN_TYPEDEF_MOVEANDWAIT_T */

	// No public default Java constructor; creating one:
	EXPORTED MOVEANDWAIT_T MoveAndWait_Create();
	EXPORTED void MoveAndWait_moveAndWait(MOVEANDWAIT_T c_move_and_wait, NODE_T param0, long long param1);
	EXPORTED void MoveAndWait_Destroy(MOVEANDWAIT_T move_and_wait);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL MoveAndWait_moveAndWait_stdcall(MOVEANDWAIT_T c_move_and_wait, NODE_T param0, long long param1);
	EXPORTED void STDCALL MoveAndWait_Destroy_stdcall(MOVEANDWAIT_T move_and_wait);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MOVEANDWAIT_H */
