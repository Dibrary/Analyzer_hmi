/**
 * File: HR2000Plus.h
 * Autogenerated on Fri Mar 23 13:38:52 EDT 2018 based on
 * HR2000Plus.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/hr2000plus/HR2000Plus
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HR2000PLUS_H
#define HR2000PLUS_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBSpectrometer.h"
#include "USBEndpointDescriptor.h"
#include "GUIProviderArray.h"
#include "SpectrometerStatus.h"
#include "JString.h"
#include "SpectrometerPlugInArray.h"
#include "ExternalTriggerModeArray.h"
#include "BitSet.h"
#include "CoefficientsArray.h"
#include "AcquisitionListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBSpectrometer;
class USBEndpointDescriptor;
class GUIProviderArray;
class SpectrometerStatus;
class JString;
class SpectrometerPlugInArray;
class ExternalTriggerModeArray;
class BitSet;
class CoefficientsArray;
class AcquisitionListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HR2000Plus : public USBSpectrometer // CPPClass.tag001
{
public: 
	HR2000Plus();
	HR2000Plus(int i);
	void setEndpoints();
	USBEndpointDescriptor getEndpoint(int endPoint);
	short allowWriteToEEPROM(int privilegeLevel, int slot);
	void openSpectrometer(int index);
	GUIProviderArray getGUIFeatures();
	SpectrometerStatus getStatus();
	int readIntegrationTime();
	void setStrobeDelay(int delay);
	JString toString();
	SpectrometerPlugInArray getPlugIns();
	int getNumberOfPlugIns();
	short isPlugInDetected(int id);
	CharArray initializePlugIns();
	void detectPlugIns();
	int setI2CBytes(signed char address, signed char numBytes, CharArray& i2C);
	CharArray getI2CBytes(signed char address, signed char numBytes);
	CharArray getSPIBytes(CharArray& message, int length);
	JString getPSOCVersion();
	JString getFPGAFirmwareVersion();
	double continuousStrobeCountsToMicros(int counts);
	void setContinuousStrobeDelay(int delayMicros);
	int getContinuousStrobeDelayMinimum();
	int getContinuousStrobeDelayMaximum();
	int getContinuousStrobeDelayIncrement(int magnitude);
	void setContinuousModeType(short mode);
	void setDelayAfterIntegration(int delay);
	short getContinuousModeType();
	int getDelayAfterIntegration();
	void setContinuousEnable(short value);
	short getContinuousEnable();
	void setAdvancedIntegrationTime(long long delayMicros);
	int getIntegrationTimeBaseClock();
	int getIntegrationClockTimer();
	long long getAdvancedIntegrationTimeMinimum();
	long long getAdvancedIntegrationTimeMaximum();
	long long getAdvancedIntegrationTimeIncrement();
	void setExternalTriggerMode(int mode);
	ExternalTriggerModeArray getExternalTriggerModes();
	void setShutterClock(int value);
	int getShutterClock();
	void setSingleStrobeLow(int value);
	void setSingleStrobeHigh(int value);
	double getSingleStrobeCountsToMicros(int counts);
	int getSingleStrobeLow();
	int getSingleStrobeHigh();
	int getSingleStrobeMinimum();
	int getSingleStrobeMaximum();
	int getSingleStrobeIncrement();
	void setDirectionAllBits(BitSet& bitSet);
	void setMuxAllBits(BitSet& bitSet);
	void setValueAllBits(BitSet& bitSet);
	void setDirectionBitmask(short bitmask);
	void setMuxBitmask(short bitmask);
	void setValueBitmask(short bitmask);
	void setDirectionBit(int bit, short value);
	void setMuxBit(int bit, short value);
	void setValueBit(int bit, short value);
	int getTotalGPIOBits();
	BitSet getDirectionBits();
	BitSet getMuxBits();
	int getValueBit(int bitNumber);
	BitSet getValueBits();
	int getNumberOfPins();
	double getBoardTemperatureCelsius();
	double getVoltageIn();
	void setDACCounts(int counts, int channelIndex);
	double analogOutCountsToVolts(int counts);
	int getDACMinimum();
	int getDACMaximum();
	int getDACIncrement();
	short isDACPresent();
	int getDACPins();
	DoubleArray getIrradianceCalibrationFactors();
	void setIrradianceCalibrationFactors(DoubleArray& data);
	double getCollectionArea();
	short hasCollectionArea();
	void setCollectionArea(double area);
	void setMasterClockDivisor(int value);
	int getMasterClockDivisor();
	void setExternalTriggerDelay(int counts);
	double triggerDelayCountsToMicroseconds(int counts);
	int getExternalTriggerDelayMinimum();
	int getExternalTriggerDelayMaximum();
	int getExternalTriggerDelayIncrement();
	CoefficientsArray readNonlinearityCoefficientsFromSpectrometer();
	void writeNonlinearityCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getNonlinearityCoefficients();
	void setNonlinearityCoefficients(CoefficientsArray& coefficients);
	DoubleArray getNonlinearityCoefficientsSingleChannel(int index);
	void setNonlinearityCoefficientsSingleChannel(DoubleArray& nl, int index);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getWavelengthCalibrationCoefficients();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& coefficients);
	DoubleArray getWavelengths(int index);
	void setWavelengths(DoubleArray& wl, int index);
	CoefficientsArray readStrayLightCorrectionCoefficientFromSpectrometer();
	void writeStrayLightCoefficientToSpectrometer(CoefficientsArray& coefficients);
	void setStrayLightCorrectionCoefficient(CoefficientsArray& coefficients);
	CoefficientsArray getStrayLightCorrectionCoefficient();
	void setStrayLight(double strayLight, int index);
	double getStrayLight(int index);
	short isAdvancedVersion();
	void addAcquisitionListener(AcquisitionListener& listener);
	void removeAcquisitionListener(AcquisitionListener& listener);
	JString getCpuVersion();
	JString getCpuSubVersion();
	int getDetectorType();
	void setDetectorType(int type);
	void setScansToAverage(int scans);
	int getScansToAverage();
	~HR2000Plus();
	// No public Java copy constructor; creating one:
	HR2000Plus(const HR2000Plus &that);
	// Creating assignment operator declaration:
	HR2000Plus &operator=(const HR2000Plus &that);

private:
	jmethodID mid_HR2000Plus3398;
	jmethodID mid_HR2000Plus3399;
	jmethodID mid_setEndpoints3400;
	jmethodID mid_getEndpoint3401;
	jmethodID mid_allowWriteToEEPROM3402;
	jmethodID mid_openSpectrometer3403;
	jmethodID mid_getGUIFeatures3404;
	jmethodID mid_getStatus3405;
	jmethodID mid_readIntegrationTime3406;
	jmethodID mid_setStrobeDelay3407;
	jmethodID mid_toString3408;
	jmethodID mid_getPlugIns3409;
	jmethodID mid_getNumberOfPlugIns3410;
	jmethodID mid_isPlugInDetected3411;
	jmethodID mid_initializePlugIns3412;
	jmethodID mid_detectPlugIns3413;
	jmethodID mid_setI2CBytes3414;
	jmethodID mid_getI2CBytes3415;
	jmethodID mid_getSPIBytes3416;
	jmethodID mid_getPSOCVersion3417;
	jmethodID mid_getFPGAFirmwareVersion3418;
	jmethodID mid_continuousStrobeCountsToMicros3419;
	jmethodID mid_setContinuousStrobeDelay3420;
	jmethodID mid_getContinuousStrobeDelayMinimum3421;
	jmethodID mid_getContinuousStrobeDelayMaximum3422;
	jmethodID mid_getContinuousStrobeDelayIncrement3423;
	jmethodID mid_setContinuousModeType3424;
	jmethodID mid_setDelayAfterIntegration3425;
	jmethodID mid_getContinuousModeType3426;
	jmethodID mid_getDelayAfterIntegration3427;
	jmethodID mid_setContinuousEnable3428;
	jmethodID mid_getContinuousEnable3429;
	jmethodID mid_setAdvancedIntegrationTime3430;
	jmethodID mid_getIntegrationTimeBaseClock3431;
	jmethodID mid_getIntegrationClockTimer3432;
	jmethodID mid_getAdvancedIntegrationTimeMinimum3433;
	jmethodID mid_getAdvancedIntegrationTimeMaximum3434;
	jmethodID mid_getAdvancedIntegrationTimeIncrement3435;
	jmethodID mid_setExternalTriggerMode3436;
	jmethodID mid_getExternalTriggerModes3437;
	jmethodID mid_setShutterClock3438;
	jmethodID mid_getShutterClock3439;
	jmethodID mid_setSingleStrobeLow3440;
	jmethodID mid_setSingleStrobeHigh3441;
	jmethodID mid_getSingleStrobeCountsToMicros3442;
	jmethodID mid_getSingleStrobeLow3443;
	jmethodID mid_getSingleStrobeHigh3444;
	jmethodID mid_getSingleStrobeMinimum3445;
	jmethodID mid_getSingleStrobeMaximum3446;
	jmethodID mid_getSingleStrobeIncrement3447;
	jmethodID mid_setDirectionAllBits3448;
	jmethodID mid_setMuxAllBits3449;
	jmethodID mid_setValueAllBits3450;
	jmethodID mid_setDirectionBitmask3451;
	jmethodID mid_setMuxBitmask3452;
	jmethodID mid_setValueBitmask3453;
	jmethodID mid_setDirectionBit3454;
	jmethodID mid_setMuxBit3455;
	jmethodID mid_setValueBit3456;
	jmethodID mid_getTotalGPIOBits3457;
	jmethodID mid_getDirectionBits3458;
	jmethodID mid_getMuxBits3459;
	jmethodID mid_getValueBit3460;
	jmethodID mid_getValueBits3461;
	jmethodID mid_getNumberOfPins3462;
	jmethodID mid_getBoardTemperatureCelsius3463;
	jmethodID mid_getVoltageIn3464;
	jmethodID mid_setDACCounts3465;
	jmethodID mid_analogOutCountsToVolts3466;
	jmethodID mid_getDACMinimum3467;
	jmethodID mid_getDACMaximum3468;
	jmethodID mid_getDACIncrement3469;
	jmethodID mid_isDACPresent3470;
	jmethodID mid_getDACPins3471;
	jmethodID mid_getIrradianceCalibrationFactors3472;
	jmethodID mid_setIrradianceCalibrationFactors3473;
	jmethodID mid_getCollectionArea3474;
	jmethodID mid_hasCollectionArea3475;
	jmethodID mid_setCollectionArea3476;
	jmethodID mid_setMasterClockDivisor3477;
	jmethodID mid_getMasterClockDivisor3478;
	jmethodID mid_setExternalTriggerDelay3479;
	jmethodID mid_triggerDelayCountsToMicroseconds3480;
	jmethodID mid_getExternalTriggerDelayMinimum3481;
	jmethodID mid_getExternalTriggerDelayMaximum3482;
	jmethodID mid_getExternalTriggerDelayIncrement3483;
	jmethodID mid_readNonlinearityCoefficientsFromSpectrometer3484;
	jmethodID mid_writeNonlinearityCoefficientsToSpectrometer3485;
	jmethodID mid_getNonlinearityCoefficients3486;
	jmethodID mid_setNonlinearityCoefficients3487;
	jmethodID mid_getNonlinearityCoefficientsSingleChannel3488;
	jmethodID mid_setNonlinearityCoefficientsSingleChannel3489;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer3490;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer3491;
	jmethodID mid_getWavelengthCalibrationCoefficients3492;
	jmethodID mid_setWavelengthCalibrationCoefficients3493;
	jmethodID mid_getWavelengths3494;
	jmethodID mid_setWavelengths3495;
	jmethodID mid_readStrayLightCorrectionCoefficientFromSpectrometer3496;
	jmethodID mid_writeStrayLightCoefficientToSpectrometer3497;
	jmethodID mid_setStrayLightCorrectionCoefficient3498;
	jmethodID mid_getStrayLightCorrectionCoefficient3499;
	jmethodID mid_setStrayLight3500;
	jmethodID mid_getStrayLight3501;
	jmethodID mid_isAdvancedVersion3502;
	jmethodID mid_addAcquisitionListener3503;
	jmethodID mid_removeAcquisitionListener3504;
	jmethodID mid_getCpuVersion3505;
	jmethodID mid_getCpuSubVersion3506;
	jmethodID mid_getDetectorType3507;
	jmethodID mid_setDetectorType3508;
	jmethodID mid_setScansToAverage3509;
	jmethodID mid_getScansToAverage3510;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
#define EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
	typedef void* SPECTROMETERSTATUS_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERSTATUS_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
	typedef void* SPECTROMETERPLUGINARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_BITSET_T
#define EXTERN_TYPEDEF_BITSET_T
	typedef void* BITSET_T;
#endif /* EXTERN_TYPEDEF_BITSET_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
#define EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
	typedef void* ACQUISITIONLISTENER_T;
#endif /* EXTERN_TYPEDEF_ACQUISITIONLISTENER_T */
#ifndef EXTERN_TYPEDEF_HR2000PLUS_T
#define EXTERN_TYPEDEF_HR2000PLUS_T
	typedef void* HR2000PLUS_T;
#endif /* EXTERN_TYPEDEF_HR2000PLUS_T */

	EXPORTED HR2000PLUS_T HR2000Plus_Create();
	EXPORTED HR2000PLUS_T HR2000Plus_Create_1(int i);
	EXPORTED void HR2000Plus_setEndpoints(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_getEndpoint(HR2000PLUS_T c_hr2000plus, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED short HR2000Plus_allowWriteToEEPROM(HR2000PLUS_T c_hr2000plus, int privilegeLevel, int slot);
	EXPORTED void HR2000Plus_openSpectrometer(HR2000PLUS_T c_hr2000plus, int index);
	EXPORTED void HR2000Plus_getGUIFeatures(HR2000PLUS_T c_hr2000plus, GUIPROVIDERARRAY_T retval);
	EXPORTED void HR2000Plus_getStatus(HR2000PLUS_T c_hr2000plus, SPECTROMETERSTATUS_T retval);
	EXPORTED int HR2000Plus_readIntegrationTime(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setStrobeDelay(HR2000PLUS_T c_hr2000plus, int delay);
	EXPORTED void HR2000Plus_toString(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED void HR2000Plus_getPlugIns(HR2000PLUS_T c_hr2000plus, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int HR2000Plus_getNumberOfPlugIns(HR2000PLUS_T c_hr2000plus);
	EXPORTED short HR2000Plus_isPlugInDetected(HR2000PLUS_T c_hr2000plus, int id);
	EXPORTED void HR2000Plus_initializePlugIns(HR2000PLUS_T c_hr2000plus, CHARARRAY_T retval);
	EXPORTED void HR2000Plus_detectPlugIns(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_setI2CBytes(HR2000PLUS_T c_hr2000plus, signed char address, signed char numBytes, CHARARRAY_T i2C);
	EXPORTED void HR2000Plus_getI2CBytes(HR2000PLUS_T c_hr2000plus, signed char address, signed char numBytes, CHARARRAY_T retval);
	EXPORTED void HR2000Plus_getSPIBytes(HR2000PLUS_T c_hr2000plus, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void HR2000Plus_getPSOCVersion(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED void HR2000Plus_getFPGAFirmwareVersion(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED double HR2000Plus_continuousStrobeCountsToMicros(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED void HR2000Plus_setContinuousStrobeDelay(HR2000PLUS_T c_hr2000plus, int delayMicros);
	EXPORTED int HR2000Plus_getContinuousStrobeDelayMinimum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getContinuousStrobeDelayMaximum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getContinuousStrobeDelayIncrement(HR2000PLUS_T c_hr2000plus, int magnitude);
	EXPORTED void HR2000Plus_setContinuousModeType(HR2000PLUS_T c_hr2000plus, short mode);
	EXPORTED void HR2000Plus_setDelayAfterIntegration(HR2000PLUS_T c_hr2000plus, int delay);
	EXPORTED short HR2000Plus_getContinuousModeType(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getDelayAfterIntegration(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setContinuousEnable(HR2000PLUS_T c_hr2000plus, short value);
	EXPORTED short HR2000Plus_getContinuousEnable(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setAdvancedIntegrationTime(HR2000PLUS_T c_hr2000plus, long long delayMicros);
	EXPORTED int HR2000Plus_getIntegrationTimeBaseClock(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getIntegrationClockTimer(HR2000PLUS_T c_hr2000plus);
	EXPORTED long long HR2000Plus_getAdvancedIntegrationTimeMinimum(HR2000PLUS_T c_hr2000plus);
	EXPORTED long long HR2000Plus_getAdvancedIntegrationTimeMaximum(HR2000PLUS_T c_hr2000plus);
	EXPORTED long long HR2000Plus_getAdvancedIntegrationTimeIncrement(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setExternalTriggerMode(HR2000PLUS_T c_hr2000plus, int mode);
	EXPORTED void HR2000Plus_getExternalTriggerModes(HR2000PLUS_T c_hr2000plus, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void HR2000Plus_setShutterClock(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED int HR2000Plus_getShutterClock(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setSingleStrobeLow(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED void HR2000Plus_setSingleStrobeHigh(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED double HR2000Plus_getSingleStrobeCountsToMicros(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED int HR2000Plus_getSingleStrobeLow(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getSingleStrobeHigh(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getSingleStrobeMinimum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getSingleStrobeMaximum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getSingleStrobeIncrement(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setDirectionAllBits(HR2000PLUS_T c_hr2000plus, BITSET_T bitSet);
	EXPORTED void HR2000Plus_setMuxAllBits(HR2000PLUS_T c_hr2000plus, BITSET_T bitSet);
	EXPORTED void HR2000Plus_setValueAllBits(HR2000PLUS_T c_hr2000plus, BITSET_T bitSet);
	EXPORTED void HR2000Plus_setDirectionBitmask(HR2000PLUS_T c_hr2000plus, short bitmask);
	EXPORTED void HR2000Plus_setMuxBitmask(HR2000PLUS_T c_hr2000plus, short bitmask);
	EXPORTED void HR2000Plus_setValueBitmask(HR2000PLUS_T c_hr2000plus, short bitmask);
	EXPORTED void HR2000Plus_setDirectionBit(HR2000PLUS_T c_hr2000plus, int bit, short value);
	EXPORTED void HR2000Plus_setMuxBit(HR2000PLUS_T c_hr2000plus, int bit, short value);
	EXPORTED void HR2000Plus_setValueBit(HR2000PLUS_T c_hr2000plus, int bit, short value);
	EXPORTED int HR2000Plus_getTotalGPIOBits(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_getDirectionBits(HR2000PLUS_T c_hr2000plus, BITSET_T retval);
	EXPORTED void HR2000Plus_getMuxBits(HR2000PLUS_T c_hr2000plus, BITSET_T retval);
	EXPORTED int HR2000Plus_getValueBit(HR2000PLUS_T c_hr2000plus, int bitNumber);
	EXPORTED void HR2000Plus_getValueBits(HR2000PLUS_T c_hr2000plus, BITSET_T retval);
	EXPORTED int HR2000Plus_getNumberOfPins(HR2000PLUS_T c_hr2000plus);
	EXPORTED double HR2000Plus_getBoardTemperatureCelsius(HR2000PLUS_T c_hr2000plus);
	EXPORTED double HR2000Plus_getVoltageIn(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setDACCounts(HR2000PLUS_T c_hr2000plus, int counts, int channelIndex);
	EXPORTED double HR2000Plus_analogOutCountsToVolts(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED int HR2000Plus_getDACMinimum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getDACMaximum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getDACIncrement(HR2000PLUS_T c_hr2000plus);
	EXPORTED short HR2000Plus_isDACPresent(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getDACPins(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_getIrradianceCalibrationFactors(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T retval);
	EXPORTED void HR2000Plus_setIrradianceCalibrationFactors(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T data);
	EXPORTED double HR2000Plus_getCollectionArea(HR2000PLUS_T c_hr2000plus);
	EXPORTED short HR2000Plus_hasCollectionArea(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setCollectionArea(HR2000PLUS_T c_hr2000plus, double area);
	EXPORTED void HR2000Plus_setMasterClockDivisor(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED int HR2000Plus_getMasterClockDivisor(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setExternalTriggerDelay(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED double HR2000Plus_triggerDelayCountsToMicroseconds(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED int HR2000Plus_getExternalTriggerDelayMinimum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getExternalTriggerDelayMaximum(HR2000PLUS_T c_hr2000plus);
	EXPORTED int HR2000Plus_getExternalTriggerDelayIncrement(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_readNonlinearityCoefficientsFromSpectrometer(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void HR2000Plus_writeNonlinearityCoefficientsToSpectrometer(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void HR2000Plus_getNonlinearityCoefficients(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void HR2000Plus_setNonlinearityCoefficients(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void HR2000Plus_getNonlinearityCoefficientsSingleChannel(HR2000PLUS_T c_hr2000plus, int index, DOUBLEARRAY_T retval);
	EXPORTED void HR2000Plus_setNonlinearityCoefficientsSingleChannel(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T nl, int index);
	EXPORTED void HR2000Plus_readWavelengthCalibrationCoefficientsFromSpectrometer(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void HR2000Plus_writeWavelengthCoefficientsToSpectrometer(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void HR2000Plus_getWavelengthCalibrationCoefficients(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void HR2000Plus_setWavelengthCalibrationCoefficients(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void HR2000Plus_getWavelengths(HR2000PLUS_T c_hr2000plus, int index, DOUBLEARRAY_T retval);
	EXPORTED void HR2000Plus_setWavelengths(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T wl, int index);
	EXPORTED void HR2000Plus_readStrayLightCorrectionCoefficientFromSpectrometer(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void HR2000Plus_writeStrayLightCoefficientToSpectrometer(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void HR2000Plus_setStrayLightCorrectionCoefficient(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void HR2000Plus_getStrayLightCorrectionCoefficient(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void HR2000Plus_setStrayLight(HR2000PLUS_T c_hr2000plus, double strayLight, int index);
	EXPORTED double HR2000Plus_getStrayLight(HR2000PLUS_T c_hr2000plus, int index);
	EXPORTED short HR2000Plus_isAdvancedVersion(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_addAcquisitionListener(HR2000PLUS_T c_hr2000plus, ACQUISITIONLISTENER_T listener);
	EXPORTED void HR2000Plus_removeAcquisitionListener(HR2000PLUS_T c_hr2000plus, ACQUISITIONLISTENER_T listener);
	EXPORTED void HR2000Plus_getCpuVersion(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED void HR2000Plus_getCpuSubVersion(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED int HR2000Plus_getDetectorType(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_setDetectorType(HR2000PLUS_T c_hr2000plus, int type);
	EXPORTED void HR2000Plus_setScansToAverage(HR2000PLUS_T c_hr2000plus, int scans);
	EXPORTED int HR2000Plus_getScansToAverage(HR2000PLUS_T c_hr2000plus);
	EXPORTED void HR2000Plus_Destroy(HR2000PLUS_T hr2000plus);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HR2000PLUS_T STDCALL HR2000Plus_Create_stdcall();
	EXPORTED HR2000PLUS_T STDCALL HR2000Plus_Create_stdcall_1(int i);
	EXPORTED void STDCALL HR2000Plus_setEndpoints_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_getEndpoint_stdcall(HR2000PLUS_T c_hr2000plus, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED short STDCALL HR2000Plus_allowWriteToEEPROM_stdcall(HR2000PLUS_T c_hr2000plus, int privilegeLevel, int slot);
	EXPORTED void STDCALL HR2000Plus_openSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, int index);
	EXPORTED void STDCALL HR2000Plus_getGUIFeatures_stdcall(HR2000PLUS_T c_hr2000plus, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_getStatus_stdcall(HR2000PLUS_T c_hr2000plus, SPECTROMETERSTATUS_T retval);
	EXPORTED int STDCALL HR2000Plus_readIntegrationTime_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setStrobeDelay_stdcall(HR2000PLUS_T c_hr2000plus, int delay);
	EXPORTED void STDCALL HR2000Plus_toString_stdcall(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED void STDCALL HR2000Plus_getPlugIns_stdcall(HR2000PLUS_T c_hr2000plus, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int STDCALL HR2000Plus_getNumberOfPlugIns_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED short STDCALL HR2000Plus_isPlugInDetected_stdcall(HR2000PLUS_T c_hr2000plus, int id);
	EXPORTED void STDCALL HR2000Plus_initializePlugIns_stdcall(HR2000PLUS_T c_hr2000plus, CHARARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_detectPlugIns_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_setI2CBytes_stdcall(HR2000PLUS_T c_hr2000plus, signed char address, signed char numBytes, CHARARRAY_T i2C);
	EXPORTED void STDCALL HR2000Plus_getI2CBytes_stdcall(HR2000PLUS_T c_hr2000plus, signed char address, signed char numBytes, CHARARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_getSPIBytes_stdcall(HR2000PLUS_T c_hr2000plus, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_getPSOCVersion_stdcall(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED void STDCALL HR2000Plus_getFPGAFirmwareVersion_stdcall(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED double STDCALL HR2000Plus_continuousStrobeCountsToMicros_stdcall(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED void STDCALL HR2000Plus_setContinuousStrobeDelay_stdcall(HR2000PLUS_T c_hr2000plus, int delayMicros);
	EXPORTED int STDCALL HR2000Plus_getContinuousStrobeDelayMinimum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getContinuousStrobeDelayMaximum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getContinuousStrobeDelayIncrement_stdcall(HR2000PLUS_T c_hr2000plus, int magnitude);
	EXPORTED void STDCALL HR2000Plus_setContinuousModeType_stdcall(HR2000PLUS_T c_hr2000plus, short mode);
	EXPORTED void STDCALL HR2000Plus_setDelayAfterIntegration_stdcall(HR2000PLUS_T c_hr2000plus, int delay);
	EXPORTED short STDCALL HR2000Plus_getContinuousModeType_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getDelayAfterIntegration_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setContinuousEnable_stdcall(HR2000PLUS_T c_hr2000plus, short value);
	EXPORTED short STDCALL HR2000Plus_getContinuousEnable_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setAdvancedIntegrationTime_stdcall(HR2000PLUS_T c_hr2000plus, long long delayMicros);
	EXPORTED int STDCALL HR2000Plus_getIntegrationTimeBaseClock_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getIntegrationClockTimer_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED long long STDCALL HR2000Plus_getAdvancedIntegrationTimeMinimum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED long long STDCALL HR2000Plus_getAdvancedIntegrationTimeMaximum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED long long STDCALL HR2000Plus_getAdvancedIntegrationTimeIncrement_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setExternalTriggerMode_stdcall(HR2000PLUS_T c_hr2000plus, int mode);
	EXPORTED void STDCALL HR2000Plus_getExternalTriggerModes_stdcall(HR2000PLUS_T c_hr2000plus, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setShutterClock_stdcall(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED int STDCALL HR2000Plus_getShutterClock_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setSingleStrobeLow_stdcall(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED void STDCALL HR2000Plus_setSingleStrobeHigh_stdcall(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED double STDCALL HR2000Plus_getSingleStrobeCountsToMicros_stdcall(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED int STDCALL HR2000Plus_getSingleStrobeLow_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getSingleStrobeHigh_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getSingleStrobeMinimum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getSingleStrobeMaximum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getSingleStrobeIncrement_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setDirectionAllBits_stdcall(HR2000PLUS_T c_hr2000plus, BITSET_T bitSet);
	EXPORTED void STDCALL HR2000Plus_setMuxAllBits_stdcall(HR2000PLUS_T c_hr2000plus, BITSET_T bitSet);
	EXPORTED void STDCALL HR2000Plus_setValueAllBits_stdcall(HR2000PLUS_T c_hr2000plus, BITSET_T bitSet);
	EXPORTED void STDCALL HR2000Plus_setDirectionBitmask_stdcall(HR2000PLUS_T c_hr2000plus, short bitmask);
	EXPORTED void STDCALL HR2000Plus_setMuxBitmask_stdcall(HR2000PLUS_T c_hr2000plus, short bitmask);
	EXPORTED void STDCALL HR2000Plus_setValueBitmask_stdcall(HR2000PLUS_T c_hr2000plus, short bitmask);
	EXPORTED void STDCALL HR2000Plus_setDirectionBit_stdcall(HR2000PLUS_T c_hr2000plus, int bit, short value);
	EXPORTED void STDCALL HR2000Plus_setMuxBit_stdcall(HR2000PLUS_T c_hr2000plus, int bit, short value);
	EXPORTED void STDCALL HR2000Plus_setValueBit_stdcall(HR2000PLUS_T c_hr2000plus, int bit, short value);
	EXPORTED int STDCALL HR2000Plus_getTotalGPIOBits_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_getDirectionBits_stdcall(HR2000PLUS_T c_hr2000plus, BITSET_T retval);
	EXPORTED void STDCALL HR2000Plus_getMuxBits_stdcall(HR2000PLUS_T c_hr2000plus, BITSET_T retval);
	EXPORTED int STDCALL HR2000Plus_getValueBit_stdcall(HR2000PLUS_T c_hr2000plus, int bitNumber);
	EXPORTED void STDCALL HR2000Plus_getValueBits_stdcall(HR2000PLUS_T c_hr2000plus, BITSET_T retval);
	EXPORTED int STDCALL HR2000Plus_getNumberOfPins_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED double STDCALL HR2000Plus_getBoardTemperatureCelsius_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED double STDCALL HR2000Plus_getVoltageIn_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setDACCounts_stdcall(HR2000PLUS_T c_hr2000plus, int counts, int channelIndex);
	EXPORTED double STDCALL HR2000Plus_analogOutCountsToVolts_stdcall(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED int STDCALL HR2000Plus_getDACMinimum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getDACMaximum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getDACIncrement_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED short STDCALL HR2000Plus_isDACPresent_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getDACPins_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_getIrradianceCalibrationFactors_stdcall(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setIrradianceCalibrationFactors_stdcall(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T data);
	EXPORTED double STDCALL HR2000Plus_getCollectionArea_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED short STDCALL HR2000Plus_hasCollectionArea_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setCollectionArea_stdcall(HR2000PLUS_T c_hr2000plus, double area);
	EXPORTED void STDCALL HR2000Plus_setMasterClockDivisor_stdcall(HR2000PLUS_T c_hr2000plus, int value);
	EXPORTED int STDCALL HR2000Plus_getMasterClockDivisor_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setExternalTriggerDelay_stdcall(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED double STDCALL HR2000Plus_triggerDelayCountsToMicroseconds_stdcall(HR2000PLUS_T c_hr2000plus, int counts);
	EXPORTED int STDCALL HR2000Plus_getExternalTriggerDelayMinimum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getExternalTriggerDelayMaximum_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED int STDCALL HR2000Plus_getExternalTriggerDelayIncrement_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_readNonlinearityCoefficientsFromSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_writeNonlinearityCoefficientsToSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL HR2000Plus_getNonlinearityCoefficients_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setNonlinearityCoefficients_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL HR2000Plus_getNonlinearityCoefficientsSingleChannel_stdcall(HR2000PLUS_T c_hr2000plus, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setNonlinearityCoefficientsSingleChannel_stdcall(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T nl, int index);
	EXPORTED void STDCALL HR2000Plus_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_writeWavelengthCoefficientsToSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL HR2000Plus_getWavelengthCalibrationCoefficients_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setWavelengthCalibrationCoefficients_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL HR2000Plus_getWavelengths_stdcall(HR2000PLUS_T c_hr2000plus, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setWavelengths_stdcall(HR2000PLUS_T c_hr2000plus, DOUBLEARRAY_T wl, int index);
	EXPORTED void STDCALL HR2000Plus_readStrayLightCorrectionCoefficientFromSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_writeStrayLightCoefficientToSpectrometer_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL HR2000Plus_setStrayLightCorrectionCoefficient_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL HR2000Plus_getStrayLightCorrectionCoefficient_stdcall(HR2000PLUS_T c_hr2000plus, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL HR2000Plus_setStrayLight_stdcall(HR2000PLUS_T c_hr2000plus, double strayLight, int index);
	EXPORTED double STDCALL HR2000Plus_getStrayLight_stdcall(HR2000PLUS_T c_hr2000plus, int index);
	EXPORTED short STDCALL HR2000Plus_isAdvancedVersion_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_addAcquisitionListener_stdcall(HR2000PLUS_T c_hr2000plus, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL HR2000Plus_removeAcquisitionListener_stdcall(HR2000PLUS_T c_hr2000plus, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL HR2000Plus_getCpuVersion_stdcall(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED void STDCALL HR2000Plus_getCpuSubVersion_stdcall(HR2000PLUS_T c_hr2000plus, JSTRING_T retval);
	EXPORTED int STDCALL HR2000Plus_getDetectorType_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_setDetectorType_stdcall(HR2000PLUS_T c_hr2000plus, int type);
	EXPORTED void STDCALL HR2000Plus_setScansToAverage_stdcall(HR2000PLUS_T c_hr2000plus, int scans);
	EXPORTED int STDCALL HR2000Plus_getScansToAverage_stdcall(HR2000PLUS_T c_hr2000plus);
	EXPORTED void STDCALL HR2000Plus_Destroy_stdcall(HR2000PLUS_T hr2000plus);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HR2000PLUS_H */
