/**
 * File: WavelengthCalibrationImpl.h
 * Autogenerated on Fri Mar 23 13:38:42 EDT 2018 based on
 * WavelengthCalibrationImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/wavelengthcalibration/WavelengthCalibrationImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef WAVELENGTHCALIBRATIONIMPL_H
#define WAVELENGTHCALIBRATIONIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "Spectrometer.h"
#include "CoefficientsArray.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class Spectrometer;
class CoefficientsArray;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED WavelengthCalibrationImpl : public USBFeature // CPPClass.tag001
{
public: 
	WavelengthCalibrationImpl(USBInterface& usbInt, Spectrometer& s);
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& c);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& c);
	CoefficientsArray getWavelengthCalibrationCoefficients();
	DoubleArray getWavelengths(int channel);
	void setWavelengths(DoubleArray& wl, int channel);
	JStringArray getFeatureGUIClassnames();
	~WavelengthCalibrationImpl();
	// No public default Java constructor; creating one:
	WavelengthCalibrationImpl();
	// No public Java copy constructor; creating one:
	WavelengthCalibrationImpl(const WavelengthCalibrationImpl &that);
	// Creating assignment operator declaration:
	WavelengthCalibrationImpl &operator=(const WavelengthCalibrationImpl &that);

private:
	jmethodID mid_WavelengthCalibrationImpl2368;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer2369;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer2370;
	jmethodID mid_setWavelengthCalibrationCoefficients2371;
	jmethodID mid_getWavelengthCalibrationCoefficients2372;
	jmethodID mid_getWavelengths2373;
	jmethodID mid_setWavelengths2374;
	jmethodID mid_getFeatureGUIClassnames2375;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETER_T
#define EXTERN_TYPEDEF_SPECTROMETER_T
	typedef void* SPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_WAVELENGTHCALIBRATIONIMPL_T
#define EXTERN_TYPEDEF_WAVELENGTHCALIBRATIONIMPL_T
	typedef void* WAVELENGTHCALIBRATIONIMPL_T;
#endif /* EXTERN_TYPEDEF_WAVELENGTHCALIBRATIONIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED WAVELENGTHCALIBRATIONIMPL_T WavelengthCalibrationImpl_Create();
	EXPORTED WAVELENGTHCALIBRATIONIMPL_T WavelengthCalibrationImpl_Create_1(USBINTERFACE_T usbInt, SPECTROMETER_T s);
	EXPORTED void WavelengthCalibrationImpl_writeWavelengthCoefficientsToSpectrometer(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T c);
	EXPORTED void WavelengthCalibrationImpl_readWavelengthCalibrationCoefficientsFromSpectrometer(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T retval);
	EXPORTED void WavelengthCalibrationImpl_setWavelengthCalibrationCoefficients(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T c);
	EXPORTED void WavelengthCalibrationImpl_getWavelengthCalibrationCoefficients(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T retval);
	EXPORTED void WavelengthCalibrationImpl_getWavelengths(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, int channel, DOUBLEARRAY_T retval);
	EXPORTED void WavelengthCalibrationImpl_setWavelengths(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, DOUBLEARRAY_T wl, int channel);
	EXPORTED void WavelengthCalibrationImpl_getFeatureGUIClassnames(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, JSTRINGARRAY_T retval);
	EXPORTED void WavelengthCalibrationImpl_Destroy(WAVELENGTHCALIBRATIONIMPL_T wavelength_calibration_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED WAVELENGTHCALIBRATIONIMPL_T STDCALL WavelengthCalibrationImpl_Create_stdcall_1(USBINTERFACE_T usbInt, SPECTROMETER_T s);
	EXPORTED void STDCALL WavelengthCalibrationImpl_writeWavelengthCoefficientsToSpectrometer_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T c);
	EXPORTED void STDCALL WavelengthCalibrationImpl_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL WavelengthCalibrationImpl_setWavelengthCalibrationCoefficients_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T c);
	EXPORTED void STDCALL WavelengthCalibrationImpl_getWavelengthCalibrationCoefficients_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL WavelengthCalibrationImpl_getWavelengths_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, int channel, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL WavelengthCalibrationImpl_setWavelengths_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, DOUBLEARRAY_T wl, int channel);
	EXPORTED void STDCALL WavelengthCalibrationImpl_getFeatureGUIClassnames_stdcall(WAVELENGTHCALIBRATIONIMPL_T c_wavelength_calibration_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL WavelengthCalibrationImpl_Destroy_stdcall(WAVELENGTHCALIBRATIONIMPL_T wavelength_calibration_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* WAVELENGTHCALIBRATIONIMPL_H */
