/**
 * File: Point2D.h
 * Autogenerated on Mon Aug 04 16:04:22 EDT 2008 based on
 * Point2D.java
 * for the Java class
 * java/awt/geom/Point2D
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef POINT2D_H
#define POINT2D_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED Point2D : public BaseJavaClass // CPPClass.getClassDeclaration
{
public: 
	double getX();
	double getY();
	int hashCode();
	double distance(double param0, double param1);
	double distanceSq(double param0, double param1);
	void setLocation(double param0, double param1);
	double distance(double param0, double param1, double param2, double param3);
	double distanceSq(double param0, double param1, double param2, double param3);
	~Point2D();
	// No public default Java constructor; creating one:
	Point2D();
	// No public Java copy constructor; creating one:
	Point2D(const Point2D &that);
	// Creating assignment operator declaration:
	Point2D &operator=(const Point2D &that);

private:
	jmethodID mid_getX0;
	jmethodID mid_getY1;
	jmethodID mid_hashCode2;
	jmethodID mid_distance3;
	jmethodID mid_distanceSq4;
	jmethodID mid_setLocation5;
	jmethodID mid_distance6;
	jmethodID mid_distanceSq7;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_POINT2D_T
#define EXTERN_TYPEDEF_POINT2D_T
	typedef void* POINT2D_T;
#endif /* EXTERN_TYPEDEF_POINT2D_T */

	// No public default Java constructor; creating one:
	EXPORTED POINT2D_T Point2D_Create();
	EXPORTED double Point2D_getX(POINT2D_T c_point2_d);
	EXPORTED double Point2D_getY(POINT2D_T c_point2_d);
	EXPORTED int Point2D_hashCode(POINT2D_T c_point2_d);
	EXPORTED double Point2D_distance(POINT2D_T c_point2_d, double param0, double param1);
	EXPORTED double Point2D_distanceSq(POINT2D_T c_point2_d, double param0, double param1);
	EXPORTED void Point2D_setLocation(POINT2D_T c_point2_d, double param0, double param1);
	EXPORTED double Point2D_distance_1(POINT2D_T c_point2_d, double param0, double param1, double param2, double param3);
	EXPORTED double Point2D_distanceSq_1(POINT2D_T c_point2_d, double param0, double param1, double param2, double param3);
	EXPORTED void Point2D_Destroy(POINT2D_T point2_d);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED double STDCALL Point2D_getX_stdcall(POINT2D_T c_point2_d);
	EXPORTED double STDCALL Point2D_getY_stdcall(POINT2D_T c_point2_d);
	EXPORTED int STDCALL Point2D_hashCode_stdcall(POINT2D_T c_point2_d);
	EXPORTED double STDCALL Point2D_distance_stdcall(POINT2D_T c_point2_d, double param0, double param1);
	EXPORTED double STDCALL Point2D_distanceSq_stdcall(POINT2D_T c_point2_d, double param0, double param1);
	EXPORTED void STDCALL Point2D_setLocation_stdcall(POINT2D_T c_point2_d, double param0, double param1);
	EXPORTED double STDCALL Point2D_distance_stdcall_1(POINT2D_T c_point2_d, double param0, double param1, double param2, double param3);
	EXPORTED double STDCALL Point2D_distanceSq_stdcall_1(POINT2D_T c_point2_d, double param0, double param1, double param2, double param3);
	EXPORTED void STDCALL Point2D_Destroy_stdcall(POINT2D_T point2_d);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* POINT2D_H */
