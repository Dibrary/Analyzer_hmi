/**
 * File: ThermoElectricImpl_NIR.h
 * Autogenerated on Fri Mar 23 13:38:40 EDT 2018 based on
 * ThermoElectricImpl_NIR.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/thermoelectric/ThermoElectricImpl_NIR
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef THERMOELECTRICIMPL_NIR_H
#define THERMOELECTRICIMPL_NIR_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "ThermoElectricImpl.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class ThermoElectricImpl;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ThermoElectricImpl_NIR : public ThermoElectricImpl // CPPClass.tag001
{
public: 
	ThermoElectricImpl_NIR(USBInterface& usbInt);
	void setFanEnable(short enable);
	void setTECEnable(short enable);
	double getDetectorTemperatureCelsius();
	double getDetectorTemperatureSetPointCelsius();
	void setDetectorSetPointCelsius(double tempCelsius);
	double getSetPointMinimumCelsius();
	double getSetPointMaximumCelsius();
	double getSetPointIncrementCelsius();
	short isSaveTECStateEnabled();
	void saveTECState();
	JStringArray getFeatureGUIClassnames();
	~ThermoElectricImpl_NIR();
	// No public default Java constructor; creating one:
	ThermoElectricImpl_NIR();
	// No public Java copy constructor; creating one:
	ThermoElectricImpl_NIR(const ThermoElectricImpl_NIR &that);
	// Creating assignment operator declaration:
	ThermoElectricImpl_NIR &operator=(const ThermoElectricImpl_NIR &that);

private:
	jmethodID mid_ThermoElectricImpl_NIR2137;
	jmethodID mid_setFanEnable2138;
	jmethodID mid_setTECEnable2139;
	jmethodID mid_getDetectorTemperatureCelsius2140;
	jmethodID mid_getDetectorTemperatureSetPointCelsius2141;
	jmethodID mid_setDetectorSetPointCelsius2142;
	jmethodID mid_getSetPointMinimumCelsius2143;
	jmethodID mid_getSetPointMaximumCelsius2144;
	jmethodID mid_getSetPointIncrementCelsius2145;
	jmethodID mid_isSaveTECStateEnabled2146;
	jmethodID mid_saveTECState2147;
	jmethodID mid_getFeatureGUIClassnames2148;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_THERMOELECTRICIMPL_T
#define EXTERN_TYPEDEF_THERMOELECTRICIMPL_T
	typedef void* THERMOELECTRICIMPL_T;
#endif /* EXTERN_TYPEDEF_THERMOELECTRICIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_THERMOELECTRICIMPL_NIR_T
#define EXTERN_TYPEDEF_THERMOELECTRICIMPL_NIR_T
	typedef void* THERMOELECTRICIMPL_NIR_T;
#endif /* EXTERN_TYPEDEF_THERMOELECTRICIMPL_NIR_T */

	// No public default Java constructor; creating one:
	EXPORTED THERMOELECTRICIMPL_NIR_T ThermoElectricImpl_NIR_Create();
	EXPORTED THERMOELECTRICIMPL_NIR_T ThermoElectricImpl_NIR_Create_1(USBINTERFACE_T usbInt);
	EXPORTED void ThermoElectricImpl_NIR_setFanEnable(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, short enable);
	EXPORTED void ThermoElectricImpl_NIR_setTECEnable(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, short enable);
	EXPORTED double ThermoElectricImpl_NIR_getDetectorTemperatureCelsius(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED double ThermoElectricImpl_NIR_getDetectorTemperatureSetPointCelsius(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED void ThermoElectricImpl_NIR_setDetectorSetPointCelsius(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, double tempCelsius);
	EXPORTED double ThermoElectricImpl_NIR_getSetPointMinimumCelsius(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED double ThermoElectricImpl_NIR_getSetPointMaximumCelsius(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED double ThermoElectricImpl_NIR_getSetPointIncrementCelsius(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED short ThermoElectricImpl_NIR_isSaveTECStateEnabled(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED void ThermoElectricImpl_NIR_saveTECState(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED void ThermoElectricImpl_NIR_getFeatureGUIClassnames(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, JSTRINGARRAY_T retval);
	EXPORTED void ThermoElectricImpl_NIR_Destroy(THERMOELECTRICIMPL_NIR_T thermo_electric_impl_n_i_r);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED THERMOELECTRICIMPL_NIR_T STDCALL ThermoElectricImpl_NIR_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED void STDCALL ThermoElectricImpl_NIR_setFanEnable_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, short enable);
	EXPORTED void STDCALL ThermoElectricImpl_NIR_setTECEnable_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, short enable);
	EXPORTED double STDCALL ThermoElectricImpl_NIR_getDetectorTemperatureCelsius_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED double STDCALL ThermoElectricImpl_NIR_getDetectorTemperatureSetPointCelsius_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED void STDCALL ThermoElectricImpl_NIR_setDetectorSetPointCelsius_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, double tempCelsius);
	EXPORTED double STDCALL ThermoElectricImpl_NIR_getSetPointMinimumCelsius_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED double STDCALL ThermoElectricImpl_NIR_getSetPointMaximumCelsius_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED double STDCALL ThermoElectricImpl_NIR_getSetPointIncrementCelsius_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED short STDCALL ThermoElectricImpl_NIR_isSaveTECStateEnabled_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED void STDCALL ThermoElectricImpl_NIR_saveTECState_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r);
	EXPORTED void STDCALL ThermoElectricImpl_NIR_getFeatureGUIClassnames_stdcall(THERMOELECTRICIMPL_NIR_T c_thermo_electric_impl_n_i_r, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL ThermoElectricImpl_NIR_Destroy_stdcall(THERMOELECTRICIMPL_NIR_T thermo_electric_impl_n_i_r);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* THERMOELECTRICIMPL_NIR_H */
