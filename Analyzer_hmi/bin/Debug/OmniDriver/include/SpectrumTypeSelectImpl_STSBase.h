/**
 * File: SpectrumTypeSelectImpl_STSBase.h
 * Autogenerated on Fri Mar 23 13:38:40 EDT 2018 based on
 * SpectrumTypeSelectImpl_STSBase.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/spectrumtype/SpectrumTypeSelectImpl_STSBase
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTRUMTYPESELECTIMPL_STSBASE_H
#define SPECTRUMTYPESELECTIMPL_STSBASE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "STSBase.h"
#include "USBInterface.h"
#include "SpectrumTypeArray.h"
#include "SpectrumType.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class STSBase;
class USBInterface;
class SpectrumTypeArray;
class SpectrumType;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SpectrumTypeSelectImpl_STSBase : public USBFeature // CPPClass.tag001
{
public: 
	SpectrumTypeSelectImpl_STSBase(STSBase& sts, USBInterface& usb, SpectrumTypeArray& legalTypes);
	void setSpectrumType(int type);
	void setSpectrumType(SpectrumType& type);
	SpectrumTypeArray getAllSpectrumTypes();
	JStringArray getFeatureGUIClassnames();
	~SpectrumTypeSelectImpl_STSBase();
	// No public default Java constructor; creating one:
	SpectrumTypeSelectImpl_STSBase();
	// No public Java copy constructor; creating one:
	SpectrumTypeSelectImpl_STSBase(const SpectrumTypeSelectImpl_STSBase &that);
	// Creating assignment operator declaration:
	SpectrumTypeSelectImpl_STSBase &operator=(const SpectrumTypeSelectImpl_STSBase &that);

private:
	jmethodID mid_SpectrumTypeSelectImpl_STSBase2072;
	jmethodID mid_setSpectrumType2073;
	jmethodID mid_setSpectrumType2074;
	jmethodID mid_getAllSpectrumTypes2075;
	jmethodID mid_getFeatureGUIClassnames2076;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_STSBASE_T
#define EXTERN_TYPEDEF_STSBASE_T
	typedef void* STSBASE_T;
#endif /* EXTERN_TYPEDEF_STSBASE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_SPECTRUMTYPEARRAY_T
#define EXTERN_TYPEDEF_SPECTRUMTYPEARRAY_T
	typedef void* SPECTRUMTYPEARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTRUMTYPEARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTRUMTYPE_T
#define EXTERN_TYPEDEF_SPECTRUMTYPE_T
	typedef void* SPECTRUMTYPE_T;
#endif /* EXTERN_TYPEDEF_SPECTRUMTYPE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTRUMTYPESELECTIMPL_STSBASE_T
#define EXTERN_TYPEDEF_SPECTRUMTYPESELECTIMPL_STSBASE_T
	typedef void* SPECTRUMTYPESELECTIMPL_STSBASE_T;
#endif /* EXTERN_TYPEDEF_SPECTRUMTYPESELECTIMPL_STSBASE_T */

	// No public default Java constructor; creating one:
	EXPORTED SPECTRUMTYPESELECTIMPL_STSBASE_T SpectrumTypeSelectImpl_STSBase_Create();
	EXPORTED SPECTRUMTYPESELECTIMPL_STSBASE_T SpectrumTypeSelectImpl_STSBase_Create_1(STSBASE_T sts, USBINTERFACE_T usb, SPECTRUMTYPEARRAY_T legalTypes);
	EXPORTED void SpectrumTypeSelectImpl_STSBase_setSpectrumType(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, int type);
	EXPORTED void SpectrumTypeSelectImpl_STSBase_setSpectrumType_1(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, SPECTRUMTYPE_T type);
	EXPORTED void SpectrumTypeSelectImpl_STSBase_getAllSpectrumTypes(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, SPECTRUMTYPEARRAY_T retval);
	EXPORTED void SpectrumTypeSelectImpl_STSBase_getFeatureGUIClassnames(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, JSTRINGARRAY_T retval);
	EXPORTED void SpectrumTypeSelectImpl_STSBase_Destroy(SPECTRUMTYPESELECTIMPL_STSBASE_T spectrum_type_select_impl_s_t_s_base);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SPECTRUMTYPESELECTIMPL_STSBASE_T STDCALL SpectrumTypeSelectImpl_STSBase_Create_stdcall_1(STSBASE_T sts, USBINTERFACE_T usb, SPECTRUMTYPEARRAY_T legalTypes);
	EXPORTED void STDCALL SpectrumTypeSelectImpl_STSBase_setSpectrumType_stdcall(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, int type);
	EXPORTED void STDCALL SpectrumTypeSelectImpl_STSBase_setSpectrumType_stdcall_1(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, SPECTRUMTYPE_T type);
	EXPORTED void STDCALL SpectrumTypeSelectImpl_STSBase_getAllSpectrumTypes_stdcall(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, SPECTRUMTYPEARRAY_T retval);
	EXPORTED void STDCALL SpectrumTypeSelectImpl_STSBase_getFeatureGUIClassnames_stdcall(SPECTRUMTYPESELECTIMPL_STSBASE_T c_spectrum_type_select_impl_s_t_s_base, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL SpectrumTypeSelectImpl_STSBase_Destroy_stdcall(SPECTRUMTYPESELECTIMPL_STSBASE_T spectrum_type_select_impl_s_t_s_base);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTRUMTYPESELECTIMPL_STSBASE_H */
