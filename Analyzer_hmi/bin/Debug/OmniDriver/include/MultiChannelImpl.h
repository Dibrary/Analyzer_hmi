/**
 * File: MultiChannelImpl.h
 * Autogenerated on Fri Mar 23 13:38:38 EDT 2018 based on
 * MultiChannelImpl.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/multichannelprovider/MultiChannelImpl
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MULTICHANNELIMPL_H
#define MULTICHANNELIMPL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBFeature.h"
#include "USBInterface.h"
#include "ADC1000USB.h"
#include "SpectrometerChannelArray.h"
#include "JStringArray.h"
#include "MultiChannelListener.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBFeature;
class USBInterface;
class ADC1000USB;
class SpectrometerChannelArray;
class JStringArray;
class MultiChannelListener;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED MultiChannelImpl : public USBFeature // CPPClass.tag001
{
public: 
	MultiChannelImpl(USBInterface& usbInt, ADC1000USB& s, int numChans);
	int getNumberOfChannels();
	void setChannels(SpectrometerChannelArray& chans);
	ShortArray getChannelsPresent();
	void setChannelStatus(int index, short status);
	short isChannelPresent(int index);
	int getNumberOfEnabledChannels();
	void setChannelMux(int index);
	void setChannelPresent(int index, short present);
	void setDeepWellStatus(short present);
	IntArray getChannelIndices();
	short isDeepWell();
	short isRotatorEnabled();
	void setRotatorEnabled(short rotatorEnabled);
	short isInterpolationEnabled();
	void setInterpolationEnabled(short interpolationEnabled);
	JStringArray getFeatureGUIClassnames();
	void addChannelListener(MultiChannelListener& listener);
	void removeChannelListener(MultiChannelListener& listener);
	~MultiChannelImpl();
	// No public default Java constructor; creating one:
	MultiChannelImpl();
	// No public Java copy constructor; creating one:
	MultiChannelImpl(const MultiChannelImpl &that);
	// Creating assignment operator declaration:
	MultiChannelImpl &operator=(const MultiChannelImpl &that);

private:
	jmethodID mid_MultiChannelImpl1702;
	jmethodID mid_getNumberOfChannels1703;
	jmethodID mid_setChannels1704;
	jmethodID mid_getChannelsPresent1705;
	jmethodID mid_setChannelStatus1706;
	jmethodID mid_isChannelPresent1707;
	jmethodID mid_getNumberOfEnabledChannels1708;
	jmethodID mid_setChannelMux1709;
	jmethodID mid_setChannelPresent1710;
	jmethodID mid_setDeepWellStatus1711;
	jmethodID mid_getChannelIndices1712;
	jmethodID mid_isDeepWell1713;
	jmethodID mid_isRotatorEnabled1714;
	jmethodID mid_setRotatorEnabled1715;
	jmethodID mid_isInterpolationEnabled1716;
	jmethodID mid_setInterpolationEnabled1717;
	jmethodID mid_getFeatureGUIClassnames1718;
	jmethodID mid_addChannelListener1719;
	jmethodID mid_removeChannelListener1720;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBFEATURE_T
#define EXTERN_TYPEDEF_USBFEATURE_T
	typedef void* USBFEATURE_T;
#endif /* EXTERN_TYPEDEF_USBFEATURE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_ADC1000USB_T
#define EXTERN_TYPEDEF_ADC1000USB_T
	typedef void* ADC1000USB_T;
#endif /* EXTERN_TYPEDEF_ADC1000USB_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
	typedef void* SPECTROMETERCHANNELARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_MULTICHANNELLISTENER_T
#define EXTERN_TYPEDEF_MULTICHANNELLISTENER_T
	typedef void* MULTICHANNELLISTENER_T;
#endif /* EXTERN_TYPEDEF_MULTICHANNELLISTENER_T */
#ifndef EXTERN_TYPEDEF_MULTICHANNELIMPL_T
#define EXTERN_TYPEDEF_MULTICHANNELIMPL_T
	typedef void* MULTICHANNELIMPL_T;
#endif /* EXTERN_TYPEDEF_MULTICHANNELIMPL_T */

	// No public default Java constructor; creating one:
	EXPORTED MULTICHANNELIMPL_T MultiChannelImpl_Create();
	EXPORTED MULTICHANNELIMPL_T MultiChannelImpl_Create_1(USBINTERFACE_T usbInt, ADC1000USB_T s, int numChans);
	EXPORTED int MultiChannelImpl_getNumberOfChannels(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void MultiChannelImpl_setChannels(MULTICHANNELIMPL_T c_multi_channel_impl, SPECTROMETERCHANNELARRAY_T chans);
	EXPORTED void MultiChannelImpl_getChannelsPresent(MULTICHANNELIMPL_T c_multi_channel_impl, SHORTARRAY_T retval);
	EXPORTED void MultiChannelImpl_setChannelStatus(MULTICHANNELIMPL_T c_multi_channel_impl, int index, short status);
	EXPORTED short MultiChannelImpl_isChannelPresent(MULTICHANNELIMPL_T c_multi_channel_impl, int index);
	EXPORTED int MultiChannelImpl_getNumberOfEnabledChannels(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void MultiChannelImpl_setChannelMux(MULTICHANNELIMPL_T c_multi_channel_impl, int index);
	EXPORTED void MultiChannelImpl_setChannelPresent(MULTICHANNELIMPL_T c_multi_channel_impl, int index, short present);
	EXPORTED void MultiChannelImpl_setDeepWellStatus(MULTICHANNELIMPL_T c_multi_channel_impl, short present);
	EXPORTED void MultiChannelImpl_getChannelIndices(MULTICHANNELIMPL_T c_multi_channel_impl, INTARRAY_T retval);
	EXPORTED short MultiChannelImpl_isDeepWell(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED short MultiChannelImpl_isRotatorEnabled(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void MultiChannelImpl_setRotatorEnabled(MULTICHANNELIMPL_T c_multi_channel_impl, short rotatorEnabled);
	EXPORTED short MultiChannelImpl_isInterpolationEnabled(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void MultiChannelImpl_setInterpolationEnabled(MULTICHANNELIMPL_T c_multi_channel_impl, short interpolationEnabled);
	EXPORTED void MultiChannelImpl_getFeatureGUIClassnames(MULTICHANNELIMPL_T c_multi_channel_impl, JSTRINGARRAY_T retval);
	EXPORTED void MultiChannelImpl_addChannelListener(MULTICHANNELIMPL_T c_multi_channel_impl, MULTICHANNELLISTENER_T listener);
	EXPORTED void MultiChannelImpl_removeChannelListener(MULTICHANNELIMPL_T c_multi_channel_impl, MULTICHANNELLISTENER_T listener);
	EXPORTED void MultiChannelImpl_Destroy(MULTICHANNELIMPL_T multi_channel_impl);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED MULTICHANNELIMPL_T STDCALL MultiChannelImpl_Create_stdcall_1(USBINTERFACE_T usbInt, ADC1000USB_T s, int numChans);
	EXPORTED int STDCALL MultiChannelImpl_getNumberOfChannels_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void STDCALL MultiChannelImpl_setChannels_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, SPECTROMETERCHANNELARRAY_T chans);
	EXPORTED void STDCALL MultiChannelImpl_getChannelsPresent_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, SHORTARRAY_T retval);
	EXPORTED void STDCALL MultiChannelImpl_setChannelStatus_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, int index, short status);
	EXPORTED short STDCALL MultiChannelImpl_isChannelPresent_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, int index);
	EXPORTED int STDCALL MultiChannelImpl_getNumberOfEnabledChannels_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void STDCALL MultiChannelImpl_setChannelMux_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, int index);
	EXPORTED void STDCALL MultiChannelImpl_setChannelPresent_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, int index, short present);
	EXPORTED void STDCALL MultiChannelImpl_setDeepWellStatus_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, short present);
	EXPORTED void STDCALL MultiChannelImpl_getChannelIndices_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, INTARRAY_T retval);
	EXPORTED short STDCALL MultiChannelImpl_isDeepWell_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED short STDCALL MultiChannelImpl_isRotatorEnabled_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void STDCALL MultiChannelImpl_setRotatorEnabled_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, short rotatorEnabled);
	EXPORTED short STDCALL MultiChannelImpl_isInterpolationEnabled_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl);
	EXPORTED void STDCALL MultiChannelImpl_setInterpolationEnabled_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, short interpolationEnabled);
	EXPORTED void STDCALL MultiChannelImpl_getFeatureGUIClassnames_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL MultiChannelImpl_addChannelListener_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, MULTICHANNELLISTENER_T listener);
	EXPORTED void STDCALL MultiChannelImpl_removeChannelListener_stdcall(MULTICHANNELIMPL_T c_multi_channel_impl, MULTICHANNELLISTENER_T listener);
	EXPORTED void STDCALL MultiChannelImpl_Destroy_stdcall(MULTICHANNELIMPL_T multi_channel_impl);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MULTICHANNELIMPL_H */
