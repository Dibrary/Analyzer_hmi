/**
 * File: DeviceIdentityProvider.h
 * Autogenerated on Tue Oct 03 16:25:13 EDT 2017 based on
 * DeviceIdentityProvider.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/networksource/DeviceIdentityProvider
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef DEVICEIDENTITYPROVIDER_H
#define DEVICEIDENTITYPROVIDER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED DeviceIdentityProvider : public BaseJavaClass // CPPClass.tag001
{
public: 
	JString getIdentifier();
	~DeviceIdentityProvider();
	// No public default Java constructor; creating one:
	DeviceIdentityProvider();
	// No public Java copy constructor; creating one:
	DeviceIdentityProvider(const DeviceIdentityProvider &that);
	// Creating assignment operator declaration:
	DeviceIdentityProvider &operator=(const DeviceIdentityProvider &that);

private:
	jmethodID mid_getIdentifier1855;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_DEVICEIDENTITYPROVIDER_T
#define EXTERN_TYPEDEF_DEVICEIDENTITYPROVIDER_T
	typedef void* DEVICEIDENTITYPROVIDER_T;
#endif /* EXTERN_TYPEDEF_DEVICEIDENTITYPROVIDER_T */

	// No public default Java constructor; creating one:
	EXPORTED DEVICEIDENTITYPROVIDER_T DeviceIdentityProvider_Create();
	EXPORTED void DeviceIdentityProvider_getIdentifier(DEVICEIDENTITYPROVIDER_T c_device_identity_provider, JSTRING_T retval);
	EXPORTED void DeviceIdentityProvider_Destroy(DEVICEIDENTITYPROVIDER_T device_identity_provider);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL DeviceIdentityProvider_getIdentifier_stdcall(DEVICEIDENTITYPROVIDER_T c_device_identity_provider, JSTRING_T retval);
	EXPORTED void STDCALL DeviceIdentityProvider_Destroy_stdcall(DEVICEIDENTITYPROVIDER_T device_identity_provider);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* DEVICEIDENTITYPROVIDER_H */
