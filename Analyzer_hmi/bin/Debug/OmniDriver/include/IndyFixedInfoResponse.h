/**
 * File: IndyFixedInfoResponse.h
 * Autogenerated on Fri Mar 23 13:38:36 EDT 2018 based on
 * IndyFixedInfoResponse.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/indy/IndyFixedInfoResponse
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef INDYFIXEDINFORESPONSE_H
#define INDYFIXEDINFORESPONSE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "DispatchProtocolMessage.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class DispatchProtocolMessage;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED IndyFixedInfoResponse : public DispatchProtocolMessage // CPPClass.tag001
{
public: 
	IndyFixedInfoResponse();
	IndyFixedInfoResponse(CharArray& message);
	signed char getModuleIndex();
	signed char getNumberOfCurrentIn();
	signed char getNumberOfCurrentOut();
	signed char getNumberOfGPIO();
	signed char getNumberOfVoltageIn();
	signed char getNumberOfVoltageOut();
	CharArray getSerialNumber();
	~IndyFixedInfoResponse();
	// No public Java copy constructor; creating one:
	IndyFixedInfoResponse(const IndyFixedInfoResponse &that);
	// Creating assignment operator declaration:
	IndyFixedInfoResponse &operator=(const IndyFixedInfoResponse &that);

private:
	jmethodID mid_IndyFixedInfoResponse1475;
	jmethodID mid_IndyFixedInfoResponse1476;
	jmethodID mid_getModuleIndex1477;
	jmethodID mid_getNumberOfCurrentIn1478;
	jmethodID mid_getNumberOfCurrentOut1479;
	jmethodID mid_getNumberOfGPIO1480;
	jmethodID mid_getNumberOfVoltageIn1481;
	jmethodID mid_getNumberOfVoltageOut1482;
	jmethodID mid_getSerialNumber1483;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
	typedef void* DISPATCHPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T */
#ifndef EXTERN_TYPEDEF_INDYFIXEDINFORESPONSE_T
#define EXTERN_TYPEDEF_INDYFIXEDINFORESPONSE_T
	typedef void* INDYFIXEDINFORESPONSE_T;
#endif /* EXTERN_TYPEDEF_INDYFIXEDINFORESPONSE_T */

	EXPORTED INDYFIXEDINFORESPONSE_T IndyFixedInfoResponse_Create();
	EXPORTED INDYFIXEDINFORESPONSE_T IndyFixedInfoResponse_Create_1(CHARARRAY_T message);
	EXPORTED signed char IndyFixedInfoResponse_getModuleIndex(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char IndyFixedInfoResponse_getNumberOfCurrentIn(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char IndyFixedInfoResponse_getNumberOfCurrentOut(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char IndyFixedInfoResponse_getNumberOfGPIO(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char IndyFixedInfoResponse_getNumberOfVoltageIn(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char IndyFixedInfoResponse_getNumberOfVoltageOut(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED void IndyFixedInfoResponse_getSerialNumber(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response, CHARARRAY_T retval);
	EXPORTED void IndyFixedInfoResponse_Destroy(INDYFIXEDINFORESPONSE_T indy_fixed_info_response);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED INDYFIXEDINFORESPONSE_T STDCALL IndyFixedInfoResponse_Create_stdcall();
	EXPORTED INDYFIXEDINFORESPONSE_T STDCALL IndyFixedInfoResponse_Create_stdcall_1(CHARARRAY_T message);
	EXPORTED signed char STDCALL IndyFixedInfoResponse_getModuleIndex_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char STDCALL IndyFixedInfoResponse_getNumberOfCurrentIn_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char STDCALL IndyFixedInfoResponse_getNumberOfCurrentOut_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char STDCALL IndyFixedInfoResponse_getNumberOfGPIO_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char STDCALL IndyFixedInfoResponse_getNumberOfVoltageIn_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED signed char STDCALL IndyFixedInfoResponse_getNumberOfVoltageOut_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response);
	EXPORTED void STDCALL IndyFixedInfoResponse_getSerialNumber_stdcall(INDYFIXEDINFORESPONSE_T c_indy_fixed_info_response, CHARARRAY_T retval);
	EXPORTED void STDCALL IndyFixedInfoResponse_Destroy_stdcall(INDYFIXEDINFORESPONSE_T indy_fixed_info_response);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* INDYFIXEDINFORESPONSE_H */
