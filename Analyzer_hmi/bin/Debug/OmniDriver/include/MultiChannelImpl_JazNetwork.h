/**
 * File: MultiChannelImpl_JazNetwork.h
 * Autogenerated on Fri Mar 23 13:38:38 EDT 2018 based on
 * MultiChannelImpl_JazNetwork.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/multichannelprovider/MultiChannelImpl_JazNetwork
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MULTICHANNELIMPL_JAZNETWORK_H
#define MULTICHANNELIMPL_JAZNETWORK_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JazNetwork.h"
#include "SpectrometerChannelArray.h"
#include "MultiChannelListener.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JazNetwork;
class SpectrometerChannelArray;
class MultiChannelListener;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED MultiChannelImpl_JazNetwork : public BaseJavaClass // CPPClass.tag001
{
public: 
	MultiChannelImpl_JazNetwork(JazNetwork& jaz);
	int getNumberOfChannels();
	ShortArray getChannelsPresent();
	short isChannelPresent(int index);
	int getNumberOfEnabledChannels();
	void setChannels(SpectrometerChannelArray& channels);
	IntArray getChannelIndices();
	void setChannelMux(int index);
	void setChannelStatus(int index, short status);
	void setDeepWellStatus(short status);
	void setChannelPresent(int index, short present);
	short isRotatorEnabled();
	short isDeepWell();
	void setRotatorEnabled(short enabled);
	short isInterpolationEnabled();
	void setInterpolationEnabled(short enabled);
	void addChannelListener(MultiChannelListener& listener);
	void removeChannelListener(MultiChannelListener& listener);
	JStringArray getFeatureGUIClassnames();
	~MultiChannelImpl_JazNetwork();
	// No public default Java constructor; creating one:
	MultiChannelImpl_JazNetwork();
	// No public Java copy constructor; creating one:
	MultiChannelImpl_JazNetwork(const MultiChannelImpl_JazNetwork &that);
	// Creating assignment operator declaration:
	MultiChannelImpl_JazNetwork &operator=(const MultiChannelImpl_JazNetwork &that);

private:
	jmethodID mid_MultiChannelImpl_JazNetwork1721;
	jmethodID mid_getNumberOfChannels1722;
	jmethodID mid_getChannelsPresent1723;
	jmethodID mid_isChannelPresent1724;
	jmethodID mid_getNumberOfEnabledChannels1725;
	jmethodID mid_setChannels1726;
	jmethodID mid_getChannelIndices1727;
	jmethodID mid_setChannelMux1728;
	jmethodID mid_setChannelStatus1729;
	jmethodID mid_setDeepWellStatus1730;
	jmethodID mid_setChannelPresent1731;
	jmethodID mid_isRotatorEnabled1732;
	jmethodID mid_isDeepWell1733;
	jmethodID mid_setRotatorEnabled1734;
	jmethodID mid_isInterpolationEnabled1735;
	jmethodID mid_setInterpolationEnabled1736;
	jmethodID mid_addChannelListener1737;
	jmethodID mid_removeChannelListener1738;
	jmethodID mid_getFeatureGUIClassnames1739;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JAZNETWORK_T
#define EXTERN_TYPEDEF_JAZNETWORK_T
	typedef void* JAZNETWORK_T;
#endif /* EXTERN_TYPEDEF_JAZNETWORK_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
	typedef void* SPECTROMETERCHANNELARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T */
#ifndef EXTERN_TYPEDEF_MULTICHANNELLISTENER_T
#define EXTERN_TYPEDEF_MULTICHANNELLISTENER_T
	typedef void* MULTICHANNELLISTENER_T;
#endif /* EXTERN_TYPEDEF_MULTICHANNELLISTENER_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_MULTICHANNELIMPL_JAZNETWORK_T
#define EXTERN_TYPEDEF_MULTICHANNELIMPL_JAZNETWORK_T
	typedef void* MULTICHANNELIMPL_JAZNETWORK_T;
#endif /* EXTERN_TYPEDEF_MULTICHANNELIMPL_JAZNETWORK_T */

	// No public default Java constructor; creating one:
	EXPORTED MULTICHANNELIMPL_JAZNETWORK_T MultiChannelImpl_JazNetwork_Create();
	EXPORTED MULTICHANNELIMPL_JAZNETWORK_T MultiChannelImpl_JazNetwork_Create_1(JAZNETWORK_T jaz);
	EXPORTED int MultiChannelImpl_JazNetwork_getNumberOfChannels(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void MultiChannelImpl_JazNetwork_getChannelsPresent(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, SHORTARRAY_T retval);
	EXPORTED short MultiChannelImpl_JazNetwork_isChannelPresent(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index);
	EXPORTED int MultiChannelImpl_JazNetwork_getNumberOfEnabledChannels(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void MultiChannelImpl_JazNetwork_setChannels(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, SPECTROMETERCHANNELARRAY_T channels);
	EXPORTED void MultiChannelImpl_JazNetwork_getChannelIndices(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, INTARRAY_T retval);
	EXPORTED void MultiChannelImpl_JazNetwork_setChannelMux(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index);
	EXPORTED void MultiChannelImpl_JazNetwork_setChannelStatus(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index, short status);
	EXPORTED void MultiChannelImpl_JazNetwork_setDeepWellStatus(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, short status);
	EXPORTED void MultiChannelImpl_JazNetwork_setChannelPresent(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index, short present);
	EXPORTED short MultiChannelImpl_JazNetwork_isRotatorEnabled(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED short MultiChannelImpl_JazNetwork_isDeepWell(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void MultiChannelImpl_JazNetwork_setRotatorEnabled(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, short enabled);
	EXPORTED short MultiChannelImpl_JazNetwork_isInterpolationEnabled(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void MultiChannelImpl_JazNetwork_setInterpolationEnabled(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, short enabled);
	EXPORTED void MultiChannelImpl_JazNetwork_addChannelListener(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, MULTICHANNELLISTENER_T listener);
	EXPORTED void MultiChannelImpl_JazNetwork_removeChannelListener(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, MULTICHANNELLISTENER_T listener);
	EXPORTED void MultiChannelImpl_JazNetwork_getFeatureGUIClassnames(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, JSTRINGARRAY_T retval);
	EXPORTED void MultiChannelImpl_JazNetwork_Destroy(MULTICHANNELIMPL_JAZNETWORK_T multi_channel_impl_jaz_network);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED MULTICHANNELIMPL_JAZNETWORK_T STDCALL MultiChannelImpl_JazNetwork_Create_stdcall_1(JAZNETWORK_T jaz);
	EXPORTED int STDCALL MultiChannelImpl_JazNetwork_getNumberOfChannels_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_getChannelsPresent_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, SHORTARRAY_T retval);
	EXPORTED short STDCALL MultiChannelImpl_JazNetwork_isChannelPresent_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index);
	EXPORTED int STDCALL MultiChannelImpl_JazNetwork_getNumberOfEnabledChannels_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setChannels_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, SPECTROMETERCHANNELARRAY_T channels);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_getChannelIndices_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, INTARRAY_T retval);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setChannelMux_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setChannelStatus_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index, short status);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setDeepWellStatus_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, short status);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setChannelPresent_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, int index, short present);
	EXPORTED short STDCALL MultiChannelImpl_JazNetwork_isRotatorEnabled_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED short STDCALL MultiChannelImpl_JazNetwork_isDeepWell_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setRotatorEnabled_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, short enabled);
	EXPORTED short STDCALL MultiChannelImpl_JazNetwork_isInterpolationEnabled_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_setInterpolationEnabled_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, short enabled);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_addChannelListener_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, MULTICHANNELLISTENER_T listener);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_removeChannelListener_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, MULTICHANNELLISTENER_T listener);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_getFeatureGUIClassnames_stdcall(MULTICHANNELIMPL_JAZNETWORK_T c_multi_channel_impl_jaz_network, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL MultiChannelImpl_JazNetwork_Destroy_stdcall(MULTICHANNELIMPL_JAZNETWORK_T multi_channel_impl_jaz_network);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MULTICHANNELIMPL_JAZNETWORK_H */
