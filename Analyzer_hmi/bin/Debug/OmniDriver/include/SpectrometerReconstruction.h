/**
 * File: SpectrometerReconstruction.h
 * Autogenerated on Fri Mar 23 13:38:46 EDT 2018 based on
 * SpectrometerReconstruction.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectra/SpectrometerReconstruction
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTROMETERRECONSTRUCTION_H
#define SPECTROMETERRECONSTRUCTION_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED SpectrometerReconstruction : public BaseJavaClass // CPPClass.tag001
{
public: 
	SpectrometerReconstruction();
	signed char getAlgorithm();
	void setAlgorithm(signed char algorithm);
	signed char getReconstructionType();
	void setReconstructionType(signed char reconstructionType);
	short isSaturated();
	void setSaturated(short saturated);
	FloatArray getIntensities();
	void setIntensities(FloatArray& intensities);
	~SpectrometerReconstruction();
	// No public Java copy constructor; creating one:
	SpectrometerReconstruction(const SpectrometerReconstruction &that);
	// Creating assignment operator declaration:
	SpectrometerReconstruction &operator=(const SpectrometerReconstruction &that);

private:
	jmethodID mid_SpectrometerReconstruction2808;
	jmethodID mid_getAlgorithm2809;
	jmethodID mid_setAlgorithm2810;
	jmethodID mid_getReconstructionType2811;
	jmethodID mid_setReconstructionType2812;
	jmethodID mid_isSaturated2813;
	jmethodID mid_setSaturated2814;
	jmethodID mid_getIntensities2815;
	jmethodID mid_setIntensities2816;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERRECONSTRUCTION_T
#define EXTERN_TYPEDEF_SPECTROMETERRECONSTRUCTION_T
	typedef void* SPECTROMETERRECONSTRUCTION_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERRECONSTRUCTION_T */

	EXPORTED SPECTROMETERRECONSTRUCTION_T SpectrometerReconstruction_Create();
	EXPORTED signed char SpectrometerReconstruction_getAlgorithm(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction);
	EXPORTED void SpectrometerReconstruction_setAlgorithm(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, signed char algorithm);
	EXPORTED signed char SpectrometerReconstruction_getReconstructionType(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction);
	EXPORTED void SpectrometerReconstruction_setReconstructionType(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, signed char reconstructionType);
	EXPORTED short SpectrometerReconstruction_isSaturated(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction);
	EXPORTED void SpectrometerReconstruction_setSaturated(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, short saturated);
	EXPORTED void SpectrometerReconstruction_getIntensities(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, FLOATARRAY_T retval);
	EXPORTED void SpectrometerReconstruction_setIntensities(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, FLOATARRAY_T intensities);
	EXPORTED void SpectrometerReconstruction_Destroy(SPECTROMETERRECONSTRUCTION_T spectrometer_reconstruction);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SPECTROMETERRECONSTRUCTION_T STDCALL SpectrometerReconstruction_Create_stdcall();
	EXPORTED signed char STDCALL SpectrometerReconstruction_getAlgorithm_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction);
	EXPORTED void STDCALL SpectrometerReconstruction_setAlgorithm_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, signed char algorithm);
	EXPORTED signed char STDCALL SpectrometerReconstruction_getReconstructionType_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction);
	EXPORTED void STDCALL SpectrometerReconstruction_setReconstructionType_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, signed char reconstructionType);
	EXPORTED short STDCALL SpectrometerReconstruction_isSaturated_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction);
	EXPORTED void STDCALL SpectrometerReconstruction_setSaturated_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, short saturated);
	EXPORTED void STDCALL SpectrometerReconstruction_getIntensities_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, FLOATARRAY_T retval);
	EXPORTED void STDCALL SpectrometerReconstruction_setIntensities_stdcall(SPECTROMETERRECONSTRUCTION_T c_spectrometer_reconstruction, FLOATARRAY_T intensities);
	EXPORTED void STDCALL SpectrometerReconstruction_Destroy_stdcall(SPECTROMETERRECONSTRUCTION_T spectrometer_reconstruction);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTROMETERRECONSTRUCTION_H */
