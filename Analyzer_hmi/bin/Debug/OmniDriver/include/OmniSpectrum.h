/**
 * File: OmniSpectrum.h
 * Autogenerated on Fri Mar 23 13:38:45 EDT 2018 based on
 * OmniSpectrum.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectra/OmniSpectrum
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef OMNISPECTRUM_H
#define OMNISPECTRUM_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerChannelInfo.h"
#include "HighResTimeStamp.h"
#include "JString.h"
#include "Vector.h"
#include "SpectrumCertificate.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerChannelInfo;
class OmniSpectrum;
class HighResTimeStamp;
class JString;
class Vector;
class SpectrumCertificate;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED OmniSpectrum : public SpectrometerChannelInfo // CPPClass.tag001
{
public: 
	OmniSpectrum(SpectrometerChannelInfo& spectrometerChannelInfo);
	OmniSpectrum(SpectrometerChannelInfo& spectrometerChannelInfo, DoubleArray& spectrum, short saturated, int integrationTime, HighResTimeStamp& acquisitionTime, int boxcarWidth, int scansToAverage, short correctForElectricalDark, short correctForNonLinearity, short correctForStrayLight, short strobeEnabled, int strobeDelay, short rotationEnabled, JString& userName);
	OmniSpectrum getCopyWithUniqueCertificates();
	short isSaturated();
	void setSaturated(short saturated);
	int getIntegrationTime();
	void setIntegrationTime(int integrationTime);
	short isStrobeEnabled();
	void setStrobeEnabled(short strobeEnabled);
	int getStrobeDelay();
	void setStrobeDelay(int strobeDelay);
	DoubleArray getPixelValues();
	void setPixelValues(DoubleArray& pixelValues);
	HighResTimeStamp getAcquisitionTime();
	void setAcquisitionTime(HighResTimeStamp& acquisitionTime);
	int getBoxcarWidth();
	void setBoxcarWidth(int boxcarWidth);
	int getScansToAverage();
	void setScanToAverage(int scansToAverage);
	short isCorrectForElectricalDark();
	void setCorrectForElectricalDark(short correctForElectricalDark);
	short isCorrectForNonLinearity();
	void setCorrectForNonLinearity(short correctForNonLinearity);
	short isCorrectForStrayLight();
	void setCorrectForStrayLight(short correctForStrayLight);
	short isRotationEnabled();
	void setRotationEnabled(short rotationEnabled);
	JString getUserName();
	void setUserName(JString& userName);
	Vector getCertificates();
	void addCertificate(SpectrumCertificate& certificate);
	JString toString();
	~OmniSpectrum();
	// No public default Java constructor; creating one:
	OmniSpectrum();
	// No public Java copy constructor; creating one:
	OmniSpectrum(const OmniSpectrum &that);
	// Creating assignment operator declaration:
	OmniSpectrum &operator=(const OmniSpectrum &that);

private:
	jmethodID mid_OmniSpectrum2729;
	jmethodID mid_OmniSpectrum2730;
	jmethodID mid_OmniSpectrum2731;
	jmethodID mid_getCopyWithUniqueCertificates2732;
	jmethodID mid_isSaturated2733;
	jmethodID mid_setSaturated2734;
	jmethodID mid_getIntegrationTime2735;
	jmethodID mid_setIntegrationTime2736;
	jmethodID mid_isStrobeEnabled2737;
	jmethodID mid_setStrobeEnabled2738;
	jmethodID mid_getStrobeDelay2739;
	jmethodID mid_setStrobeDelay2740;
	jmethodID mid_getPixelValues2741;
	jmethodID mid_setPixelValues2742;
	jmethodID mid_getAcquisitionTime2743;
	jmethodID mid_setAcquisitionTime2744;
	jmethodID mid_getBoxcarWidth2745;
	jmethodID mid_setBoxcarWidth2746;
	jmethodID mid_getScansToAverage2747;
	jmethodID mid_setScanToAverage2748;
	jmethodID mid_isCorrectForElectricalDark2749;
	jmethodID mid_setCorrectForElectricalDark2750;
	jmethodID mid_isCorrectForNonLinearity2751;
	jmethodID mid_setCorrectForNonLinearity2752;
	jmethodID mid_isCorrectForStrayLight2753;
	jmethodID mid_setCorrectForStrayLight2754;
	jmethodID mid_isRotationEnabled2755;
	jmethodID mid_setRotationEnabled2756;
	jmethodID mid_getUserName2757;
	jmethodID mid_setUserName2758;
	jmethodID mid_getCertificates2759;
	jmethodID mid_addCertificate2760;
	jmethodID mid_toString2761;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELINFO_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELINFO_T
	typedef void* SPECTROMETERCHANNELINFO_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELINFO_T */
#ifndef EXTERN_TYPEDEF_OMNISPECTRUM_T
#define EXTERN_TYPEDEF_OMNISPECTRUM_T
	typedef void* OMNISPECTRUM_T;
#endif /* EXTERN_TYPEDEF_OMNISPECTRUM_T */
#ifndef EXTERN_TYPEDEF_HIGHRESTIMESTAMP_T
#define EXTERN_TYPEDEF_HIGHRESTIMESTAMP_T
	typedef void* HIGHRESTIMESTAMP_T;
#endif /* EXTERN_TYPEDEF_HIGHRESTIMESTAMP_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_VECTOR_T
#define EXTERN_TYPEDEF_VECTOR_T
	typedef void* VECTOR_T;
#endif /* EXTERN_TYPEDEF_VECTOR_T */
#ifndef EXTERN_TYPEDEF_SPECTRUMCERTIFICATE_T
#define EXTERN_TYPEDEF_SPECTRUMCERTIFICATE_T
	typedef void* SPECTRUMCERTIFICATE_T;
#endif /* EXTERN_TYPEDEF_SPECTRUMCERTIFICATE_T */

	// No public default Java constructor; creating one:
	EXPORTED OMNISPECTRUM_T OmniSpectrum_Create();
	EXPORTED OMNISPECTRUM_T OmniSpectrum_Create_1(OMNISPECTRUM_T omniSpectrum);
	EXPORTED OMNISPECTRUM_T OmniSpectrum_Create_2(SPECTROMETERCHANNELINFO_T spectrometerChannelInfo);
	EXPORTED OMNISPECTRUM_T OmniSpectrum_Create_3(SPECTROMETERCHANNELINFO_T spectrometerChannelInfo, DOUBLEARRAY_T spectrum, short saturated, int integrationTime, HIGHRESTIMESTAMP_T acquisitionTime, int boxcarWidth, int scansToAverage, short correctForElectricalDark, short correctForNonLinearity, short correctForStrayLight, short strobeEnabled, int strobeDelay, short rotationEnabled, JSTRING_T userName);
	EXPORTED void OmniSpectrum_getCopyWithUniqueCertificates(OMNISPECTRUM_T c_omni_spectrum, OMNISPECTRUM_T retval);
	EXPORTED short OmniSpectrum_isSaturated(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setSaturated(OMNISPECTRUM_T c_omni_spectrum, short saturated);
	EXPORTED int OmniSpectrum_getIntegrationTime(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setIntegrationTime(OMNISPECTRUM_T c_omni_spectrum, int integrationTime);
	EXPORTED short OmniSpectrum_isStrobeEnabled(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setStrobeEnabled(OMNISPECTRUM_T c_omni_spectrum, short strobeEnabled);
	EXPORTED int OmniSpectrum_getStrobeDelay(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setStrobeDelay(OMNISPECTRUM_T c_omni_spectrum, int strobeDelay);
	EXPORTED void OmniSpectrum_getPixelValues(OMNISPECTRUM_T c_omni_spectrum, DOUBLEARRAY_T retval);
	EXPORTED void OmniSpectrum_setPixelValues(OMNISPECTRUM_T c_omni_spectrum, DOUBLEARRAY_T pixelValues);
	EXPORTED void OmniSpectrum_getAcquisitionTime(OMNISPECTRUM_T c_omni_spectrum, HIGHRESTIMESTAMP_T retval);
	EXPORTED void OmniSpectrum_setAcquisitionTime(OMNISPECTRUM_T c_omni_spectrum, HIGHRESTIMESTAMP_T acquisitionTime);
	EXPORTED int OmniSpectrum_getBoxcarWidth(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setBoxcarWidth(OMNISPECTRUM_T c_omni_spectrum, int boxcarWidth);
	EXPORTED int OmniSpectrum_getScansToAverage(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setScanToAverage(OMNISPECTRUM_T c_omni_spectrum, int scansToAverage);
	EXPORTED short OmniSpectrum_isCorrectForElectricalDark(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setCorrectForElectricalDark(OMNISPECTRUM_T c_omni_spectrum, short correctForElectricalDark);
	EXPORTED short OmniSpectrum_isCorrectForNonLinearity(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setCorrectForNonLinearity(OMNISPECTRUM_T c_omni_spectrum, short correctForNonLinearity);
	EXPORTED short OmniSpectrum_isCorrectForStrayLight(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setCorrectForStrayLight(OMNISPECTRUM_T c_omni_spectrum, short correctForStrayLight);
	EXPORTED short OmniSpectrum_isRotationEnabled(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void OmniSpectrum_setRotationEnabled(OMNISPECTRUM_T c_omni_spectrum, short rotationEnabled);
	EXPORTED void OmniSpectrum_getUserName(OMNISPECTRUM_T c_omni_spectrum, JSTRING_T retval);
	EXPORTED void OmniSpectrum_setUserName(OMNISPECTRUM_T c_omni_spectrum, JSTRING_T userName);
	EXPORTED void OmniSpectrum_getCertificates(OMNISPECTRUM_T c_omni_spectrum, VECTOR_T retval);
	EXPORTED void OmniSpectrum_addCertificate(OMNISPECTRUM_T c_omni_spectrum, SPECTRUMCERTIFICATE_T certificate);
	EXPORTED void OmniSpectrum_toString(OMNISPECTRUM_T c_omni_spectrum, JSTRING_T retval);
	EXPORTED void OmniSpectrum_Destroy(OMNISPECTRUM_T omni_spectrum);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED OMNISPECTRUM_T STDCALL OmniSpectrum_Create_stdcall_1(OMNISPECTRUM_T omniSpectrum);
	EXPORTED OMNISPECTRUM_T STDCALL OmniSpectrum_Create_stdcall_2(SPECTROMETERCHANNELINFO_T spectrometerChannelInfo);
	EXPORTED OMNISPECTRUM_T STDCALL OmniSpectrum_Create_stdcall_3(SPECTROMETERCHANNELINFO_T spectrometerChannelInfo, DOUBLEARRAY_T spectrum, short saturated, int integrationTime, HIGHRESTIMESTAMP_T acquisitionTime, int boxcarWidth, int scansToAverage, short correctForElectricalDark, short correctForNonLinearity, short correctForStrayLight, short strobeEnabled, int strobeDelay, short rotationEnabled, JSTRING_T userName);
	EXPORTED void STDCALL OmniSpectrum_getCopyWithUniqueCertificates_stdcall(OMNISPECTRUM_T c_omni_spectrum, OMNISPECTRUM_T retval);
	EXPORTED short STDCALL OmniSpectrum_isSaturated_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setSaturated_stdcall(OMNISPECTRUM_T c_omni_spectrum, short saturated);
	EXPORTED int STDCALL OmniSpectrum_getIntegrationTime_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setIntegrationTime_stdcall(OMNISPECTRUM_T c_omni_spectrum, int integrationTime);
	EXPORTED short STDCALL OmniSpectrum_isStrobeEnabled_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setStrobeEnabled_stdcall(OMNISPECTRUM_T c_omni_spectrum, short strobeEnabled);
	EXPORTED int STDCALL OmniSpectrum_getStrobeDelay_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setStrobeDelay_stdcall(OMNISPECTRUM_T c_omni_spectrum, int strobeDelay);
	EXPORTED void STDCALL OmniSpectrum_getPixelValues_stdcall(OMNISPECTRUM_T c_omni_spectrum, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL OmniSpectrum_setPixelValues_stdcall(OMNISPECTRUM_T c_omni_spectrum, DOUBLEARRAY_T pixelValues);
	EXPORTED void STDCALL OmniSpectrum_getAcquisitionTime_stdcall(OMNISPECTRUM_T c_omni_spectrum, HIGHRESTIMESTAMP_T retval);
	EXPORTED void STDCALL OmniSpectrum_setAcquisitionTime_stdcall(OMNISPECTRUM_T c_omni_spectrum, HIGHRESTIMESTAMP_T acquisitionTime);
	EXPORTED int STDCALL OmniSpectrum_getBoxcarWidth_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setBoxcarWidth_stdcall(OMNISPECTRUM_T c_omni_spectrum, int boxcarWidth);
	EXPORTED int STDCALL OmniSpectrum_getScansToAverage_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setScanToAverage_stdcall(OMNISPECTRUM_T c_omni_spectrum, int scansToAverage);
	EXPORTED short STDCALL OmniSpectrum_isCorrectForElectricalDark_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setCorrectForElectricalDark_stdcall(OMNISPECTRUM_T c_omni_spectrum, short correctForElectricalDark);
	EXPORTED short STDCALL OmniSpectrum_isCorrectForNonLinearity_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setCorrectForNonLinearity_stdcall(OMNISPECTRUM_T c_omni_spectrum, short correctForNonLinearity);
	EXPORTED short STDCALL OmniSpectrum_isCorrectForStrayLight_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setCorrectForStrayLight_stdcall(OMNISPECTRUM_T c_omni_spectrum, short correctForStrayLight);
	EXPORTED short STDCALL OmniSpectrum_isRotationEnabled_stdcall(OMNISPECTRUM_T c_omni_spectrum);
	EXPORTED void STDCALL OmniSpectrum_setRotationEnabled_stdcall(OMNISPECTRUM_T c_omni_spectrum, short rotationEnabled);
	EXPORTED void STDCALL OmniSpectrum_getUserName_stdcall(OMNISPECTRUM_T c_omni_spectrum, JSTRING_T retval);
	EXPORTED void STDCALL OmniSpectrum_setUserName_stdcall(OMNISPECTRUM_T c_omni_spectrum, JSTRING_T userName);
	EXPORTED void STDCALL OmniSpectrum_getCertificates_stdcall(OMNISPECTRUM_T c_omni_spectrum, VECTOR_T retval);
	EXPORTED void STDCALL OmniSpectrum_addCertificate_stdcall(OMNISPECTRUM_T c_omni_spectrum, SPECTRUMCERTIFICATE_T certificate);
	EXPORTED void STDCALL OmniSpectrum_toString_stdcall(OMNISPECTRUM_T c_omni_spectrum, JSTRING_T retval);
	EXPORTED void STDCALL OmniSpectrum_Destroy_stdcall(OMNISPECTRUM_T omni_spectrum);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* OMNISPECTRUM_H */
