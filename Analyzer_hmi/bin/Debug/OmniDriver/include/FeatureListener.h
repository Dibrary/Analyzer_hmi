/**
 * File: FeatureListener.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * FeatureListener.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/FeatureListener
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FEATURELISTENER_H
#define FEATURELISTENER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "FeatureEvent.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class FeatureEvent;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED FeatureListener : public BaseJavaClass // CPPClass.tag001
{
public: 
	void addToStatusBar(FeatureEvent& param0, long long param1);
	void addToStatusBar(FeatureEvent& param0);
	void updateStatusText(FeatureEvent& param0);
	void clearStatusBar();
	void clearStatusText(JString& param0);
	~FeatureListener();
	// No public default Java constructor; creating one:
	FeatureListener();
	// No public Java copy constructor; creating one:
	FeatureListener(const FeatureListener &that);
	// Creating assignment operator declaration:
	FeatureListener &operator=(const FeatureListener &that);

private:
	jmethodID mid_addToStatusBar2551;
	jmethodID mid_addToStatusBar2552;
	jmethodID mid_updateStatusText2553;
	jmethodID mid_clearStatusBar2554;
	jmethodID mid_clearStatusText2555;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_FEATUREEVENT_T
#define EXTERN_TYPEDEF_FEATUREEVENT_T
	typedef void* FEATUREEVENT_T;
#endif /* EXTERN_TYPEDEF_FEATUREEVENT_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_FEATURELISTENER_T
#define EXTERN_TYPEDEF_FEATURELISTENER_T
	typedef void* FEATURELISTENER_T;
#endif /* EXTERN_TYPEDEF_FEATURELISTENER_T */

	// No public default Java constructor; creating one:
	EXPORTED FEATURELISTENER_T FeatureListener_Create();
	EXPORTED void FeatureListener_addToStatusBar(FEATURELISTENER_T c_feature_listener, FEATUREEVENT_T param0, long long param1);
	EXPORTED void FeatureListener_addToStatusBar_1(FEATURELISTENER_T c_feature_listener, FEATUREEVENT_T param0);
	EXPORTED void FeatureListener_updateStatusText(FEATURELISTENER_T c_feature_listener, FEATUREEVENT_T param0);
	EXPORTED void FeatureListener_clearStatusBar(FEATURELISTENER_T c_feature_listener);
	EXPORTED void FeatureListener_clearStatusText(FEATURELISTENER_T c_feature_listener, JSTRING_T param0);
	EXPORTED void FeatureListener_Destroy(FEATURELISTENER_T feature_listener);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL FeatureListener_addToStatusBar_stdcall(FEATURELISTENER_T c_feature_listener, FEATUREEVENT_T param0, long long param1);
	EXPORTED void STDCALL FeatureListener_addToStatusBar_stdcall_1(FEATURELISTENER_T c_feature_listener, FEATUREEVENT_T param0);
	EXPORTED void STDCALL FeatureListener_updateStatusText_stdcall(FEATURELISTENER_T c_feature_listener, FEATUREEVENT_T param0);
	EXPORTED void STDCALL FeatureListener_clearStatusBar_stdcall(FEATURELISTENER_T c_feature_listener);
	EXPORTED void STDCALL FeatureListener_clearStatusText_stdcall(FEATURELISTENER_T c_feature_listener, JSTRING_T param0);
	EXPORTED void STDCALL FeatureListener_Destroy_stdcall(FEATURELISTENER_T feature_listener);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FEATURELISTENER_H */
