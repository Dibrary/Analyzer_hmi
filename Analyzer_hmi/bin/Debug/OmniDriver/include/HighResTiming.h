/**
 * File: HighResTiming.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * HighResTiming.java
 * for the Java class
 * com/oceanoptics/highrestiming/HighResTiming
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HIGHRESTIMING_H
#define HIGHRESTIMING_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED HighResTiming : public BaseJavaClass // CPPClass.tag001
{
public: 
	long long getTicksPerSecond();
	double getTickPeriod();
	void setTimeZero();
	long long getTicks();
	double getTimeInSeconds();
	double getTimeInMilliSeconds();
	double getTimeInMicroSeconds();
	double getTimeInNanoSeconds();
	HighResTiming();
	~HighResTiming();
	// No public Java copy constructor; creating one:
	HighResTiming(const HighResTiming &that);
	// Creating assignment operator declaration:
	HighResTiming &operator=(const HighResTiming &that);

private:
	jmethodID mid_getTicksPerSecond6562;
	jmethodID mid_getTickPeriod6563;
	jmethodID mid_setTimeZero6564;
	jmethodID mid_getTicks6565;
	jmethodID mid_getTimeInSeconds6566;
	jmethodID mid_getTimeInMilliSeconds6567;
	jmethodID mid_getTimeInMicroSeconds6568;
	jmethodID mid_getTimeInNanoSeconds6569;
	jmethodID mid_HighResTiming6570;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_HIGHRESTIMING_T
#define EXTERN_TYPEDEF_HIGHRESTIMING_T
	typedef void* HIGHRESTIMING_T;
#endif /* EXTERN_TYPEDEF_HIGHRESTIMING_T */

	EXPORTED long long HighResTiming_getTicksPerSecond(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double HighResTiming_getTickPeriod(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED void HighResTiming_setTimeZero(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED long long HighResTiming_getTicks(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double HighResTiming_getTimeInSeconds(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double HighResTiming_getTimeInMilliSeconds(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double HighResTiming_getTimeInMicroSeconds(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double HighResTiming_getTimeInNanoSeconds(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED HIGHRESTIMING_T HighResTiming_Create();
	EXPORTED void HighResTiming_Destroy(HIGHRESTIMING_T high_res_timing);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED long long STDCALL HighResTiming_getTicksPerSecond_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double STDCALL HighResTiming_getTickPeriod_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED void STDCALL HighResTiming_setTimeZero_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED long long STDCALL HighResTiming_getTicks_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double STDCALL HighResTiming_getTimeInSeconds_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double STDCALL HighResTiming_getTimeInMilliSeconds_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double STDCALL HighResTiming_getTimeInMicroSeconds_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED double STDCALL HighResTiming_getTimeInNanoSeconds_stdcall(HIGHRESTIMING_T c_high_res_timing);
	EXPORTED HIGHRESTIMING_T STDCALL HighResTiming_Create_stdcall();
	EXPORTED void STDCALL HighResTiming_Destroy_stdcall(HIGHRESTIMING_T high_res_timing);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HIGHRESTIMING_H */
