/**
 * File: SpectrumProducer.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * SpectrumProducer.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/SpectrumProducer
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTRUMPRODUCER_H
#define SPECTRUMPRODUCER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrumListener.h"
#include "Spectrum.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrumListener;
class Spectrum;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SpectrumProducer : public BaseJavaClass // CPPClass.tag001
{
public: 
	void addSpectrumListener(SpectrumListener& param0);
	void removeSpectrumListener(SpectrumListener& param0);
	Spectrum getSpectrum(Spectrum& param0);
	Spectrum getSpectrumRaw(Spectrum& param0);
	int getNumberOfPixels();
	int getNumberOfDarkPixels();
	~SpectrumProducer();
	// No public default Java constructor; creating one:
	SpectrumProducer();
	// No public Java copy constructor; creating one:
	SpectrumProducer(const SpectrumProducer &that);
	// Creating assignment operator declaration:
	SpectrumProducer &operator=(const SpectrumProducer &that);

private:
	jmethodID mid_addSpectrumListener2565;
	jmethodID mid_removeSpectrumListener2566;
	jmethodID mid_getSpectrum2567;
	jmethodID mid_getSpectrumRaw2568;
	jmethodID mid_getNumberOfPixels2569;
	jmethodID mid_getNumberOfDarkPixels2570;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTRUMLISTENER_T
#define EXTERN_TYPEDEF_SPECTRUMLISTENER_T
	typedef void* SPECTRUMLISTENER_T;
#endif /* EXTERN_TYPEDEF_SPECTRUMLISTENER_T */
#ifndef EXTERN_TYPEDEF_SPECTRUM_T
#define EXTERN_TYPEDEF_SPECTRUM_T
	typedef void* SPECTRUM_T;
#endif /* EXTERN_TYPEDEF_SPECTRUM_T */
#ifndef EXTERN_TYPEDEF_SPECTRUMPRODUCER_T
#define EXTERN_TYPEDEF_SPECTRUMPRODUCER_T
	typedef void* SPECTRUMPRODUCER_T;
#endif /* EXTERN_TYPEDEF_SPECTRUMPRODUCER_T */

	// No public default Java constructor; creating one:
	EXPORTED SPECTRUMPRODUCER_T SpectrumProducer_Create();
	EXPORTED void SpectrumProducer_addSpectrumListener(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUMLISTENER_T param0);
	EXPORTED void SpectrumProducer_removeSpectrumListener(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUMLISTENER_T param0);
	EXPORTED void SpectrumProducer_getSpectrum(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUM_T param0, SPECTRUM_T retval);
	EXPORTED void SpectrumProducer_getSpectrumRaw(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUM_T param0, SPECTRUM_T retval);
	EXPORTED int SpectrumProducer_getNumberOfPixels(SPECTRUMPRODUCER_T c_spectrum_producer);
	EXPORTED int SpectrumProducer_getNumberOfDarkPixels(SPECTRUMPRODUCER_T c_spectrum_producer);
	EXPORTED void SpectrumProducer_Destroy(SPECTRUMPRODUCER_T spectrum_producer);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL SpectrumProducer_addSpectrumListener_stdcall(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUMLISTENER_T param0);
	EXPORTED void STDCALL SpectrumProducer_removeSpectrumListener_stdcall(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUMLISTENER_T param0);
	EXPORTED void STDCALL SpectrumProducer_getSpectrum_stdcall(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUM_T param0, SPECTRUM_T retval);
	EXPORTED void STDCALL SpectrumProducer_getSpectrumRaw_stdcall(SPECTRUMPRODUCER_T c_spectrum_producer, SPECTRUM_T param0, SPECTRUM_T retval);
	EXPORTED int STDCALL SpectrumProducer_getNumberOfPixels_stdcall(SPECTRUMPRODUCER_T c_spectrum_producer);
	EXPORTED int STDCALL SpectrumProducer_getNumberOfDarkPixels_stdcall(SPECTRUMPRODUCER_T c_spectrum_producer);
	EXPORTED void STDCALL SpectrumProducer_Destroy_stdcall(SPECTRUMPRODUCER_T spectrum_producer);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTRUMPRODUCER_H */
