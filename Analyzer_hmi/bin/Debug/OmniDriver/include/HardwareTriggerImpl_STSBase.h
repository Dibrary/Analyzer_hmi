/**
 * File: HardwareTriggerImpl_STSBase.h
 * Autogenerated on Fri Mar 23 13:38:35 EDT 2018 based on
 * HardwareTriggerImpl_STSBase.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/hardwaretrigger/HardwareTriggerImpl_STSBase
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef HARDWARETRIGGERIMPL_STSBASE_H
#define HARDWARETRIGGERIMPL_STSBASE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "HardwareTriggerImpl.h"
#include "STSBase.h"
#include "USBInterface.h"
#include "STSTriggerModeArray.h"
#include "ExternalTriggerModeArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class HardwareTriggerImpl;
class STSBase;
class USBInterface;
class STSTriggerModeArray;
class ExternalTriggerModeArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED HardwareTriggerImpl_STSBase : public HardwareTriggerImpl // CPPClass.tag001
{
public: 
	HardwareTriggerImpl_STSBase(STSBase& sts, USBInterface& usbInt, STSTriggerModeArray& modes);
	ExternalTriggerModeArray getExternalTriggerModes();
	void setExternalTriggerMode(int mode);
	void sendSimulatedTriggerSignal();
	~HardwareTriggerImpl_STSBase();
	// No public default Java constructor; creating one:
	HardwareTriggerImpl_STSBase();
	// No public Java copy constructor; creating one:
	HardwareTriggerImpl_STSBase(const HardwareTriggerImpl_STSBase &that);
	// Creating assignment operator declaration:
	HardwareTriggerImpl_STSBase &operator=(const HardwareTriggerImpl_STSBase &that);

private:
	jmethodID mid_HardwareTriggerImpl_STSBase1361;
	jmethodID mid_getExternalTriggerModes1362;
	jmethodID mid_setExternalTriggerMode1363;
	jmethodID mid_sendSimulatedTriggerSignal1364;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T
#define EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T
	typedef void* HARDWARETRIGGERIMPL_T;
#endif /* EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_T */
#ifndef EXTERN_TYPEDEF_STSBASE_T
#define EXTERN_TYPEDEF_STSBASE_T
	typedef void* STSBASE_T;
#endif /* EXTERN_TYPEDEF_STSBASE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_STSTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_STSTRIGGERMODEARRAY_T
	typedef void* STSTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_STSTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_STSBASE_T
#define EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_STSBASE_T
	typedef void* HARDWARETRIGGERIMPL_STSBASE_T;
#endif /* EXTERN_TYPEDEF_HARDWARETRIGGERIMPL_STSBASE_T */

	// No public default Java constructor; creating one:
	EXPORTED HARDWARETRIGGERIMPL_STSBASE_T HardwareTriggerImpl_STSBase_Create();
	EXPORTED HARDWARETRIGGERIMPL_STSBASE_T HardwareTriggerImpl_STSBase_Create_1(STSBASE_T sts, USBINTERFACE_T usbInt, STSTRIGGERMODEARRAY_T modes);
	EXPORTED void HardwareTriggerImpl_STSBase_getExternalTriggerModes(HARDWARETRIGGERIMPL_STSBASE_T c_hardware_trigger_impl_s_t_s_base, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void HardwareTriggerImpl_STSBase_setExternalTriggerMode(HARDWARETRIGGERIMPL_STSBASE_T c_hardware_trigger_impl_s_t_s_base, int mode);
	EXPORTED void HardwareTriggerImpl_STSBase_sendSimulatedTriggerSignal(HARDWARETRIGGERIMPL_STSBASE_T c_hardware_trigger_impl_s_t_s_base);
	EXPORTED void HardwareTriggerImpl_STSBase_Destroy(HARDWARETRIGGERIMPL_STSBASE_T hardware_trigger_impl_s_t_s_base);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED HARDWARETRIGGERIMPL_STSBASE_T STDCALL HardwareTriggerImpl_STSBase_Create_stdcall_1(STSBASE_T sts, USBINTERFACE_T usbInt, STSTRIGGERMODEARRAY_T modes);
	EXPORTED void STDCALL HardwareTriggerImpl_STSBase_getExternalTriggerModes_stdcall(HARDWARETRIGGERIMPL_STSBASE_T c_hardware_trigger_impl_s_t_s_base, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void STDCALL HardwareTriggerImpl_STSBase_setExternalTriggerMode_stdcall(HARDWARETRIGGERIMPL_STSBASE_T c_hardware_trigger_impl_s_t_s_base, int mode);
	EXPORTED void STDCALL HardwareTriggerImpl_STSBase_sendSimulatedTriggerSignal_stdcall(HARDWARETRIGGERIMPL_STSBASE_T c_hardware_trigger_impl_s_t_s_base);
	EXPORTED void STDCALL HardwareTriggerImpl_STSBase_Destroy_stdcall(HARDWARETRIGGERIMPL_STSBASE_T hardware_trigger_impl_s_t_s_base);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* HARDWARETRIGGERIMPL_STSBASE_H */
