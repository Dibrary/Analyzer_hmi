/**
 * File: FluxData.h
 * Autogenerated on Fri Mar 23 13:39:12 EDT 2018 based on
 * FluxData.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/sts/FluxData
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef FLUXDATA_H
#define FLUXDATA_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "STSBase.h"
#include "USBInterface.h"
#include "GUIProviderArray.h"
#include "BitSet.h"
#include "ExternalTriggerModeArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class STSBase;
class USBInterface;
class GUIProviderArray;
class BitSet;
class ExternalTriggerModeArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED FluxData : public STSBase // CPPClass.tag001
{
public: 
	FluxData();
	FluxData(int i);
	void initFeatures(USBInterface& usb);
	void openSpectrometer(int index);
	GUIProviderArray getGUIFeatures();
	double getSingleStrobeCountsToMicros(int counts);
	int getSingleStrobeHigh();
	int getSingleStrobeIncrement();
	int getSingleStrobeLow();
	int getSingleStrobeMaximum();
	int getSingleStrobeMinimum();
	void setSingleStrobeHigh(int counts);
	void setSingleStrobeLow(int counts);
	double continuousStrobeCountsToMicros(int counts);
	int getContinuousStrobeDelayIncrement(int magnitude);
	int getContinuousStrobeDelayMaximum();
	int getContinuousStrobeDelayMinimum();
	void setContinuousStrobeDelay(int durationOfPhase);
	void setContinuousModeType(short mode);
	void setDelayAfterIntegration(int delay);
	short getContinuousModeType();
	int getDelayAfterIntegration();
	void setContinuousEnable(short value);
	short getContinuousEnable();
	BitSet getDirectionBits();
	BitSet getMuxBits();
	int getNumberOfPins();
	int getTotalGPIOBits();
	int getValueBit(int bitNumber);
	BitSet getValueBits();
	void setDirectionAllBits(BitSet& bitSet);
	void setDirectionBit(int bit, short value);
	void setDirectionBitmask(short bitmask);
	void setMuxAllBits(BitSet& bitSet);
	void setMuxBit(int bit, short value);
	void setMuxBitmask(short bitmask);
	void setValueAllBits(BitSet& bitSet);
	void setValueBit(int bit, short value);
	void setValueBitmask(short bitmask);
	int getExternalTriggerDelayIncrement();
	int getExternalTriggerDelayMaximum();
	int getExternalTriggerDelayMinimum();
	void setExternalTriggerDelay(int counts);
	double triggerDelayCountsToMicroseconds(int counts);
	ExternalTriggerModeArray getExternalTriggerModes();
	void setExternalTriggerMode(int mode);
	void sendSimulatedTriggerSignal();
	~FluxData();
	// No public Java copy constructor; creating one:
	FluxData(const FluxData &that);
	// Creating assignment operator declaration:
	FluxData &operator=(const FluxData &that);

private:
	jmethodID mid_FluxData5643;
	jmethodID mid_FluxData5644;
	jmethodID mid_initFeatures5645;
	jmethodID mid_openSpectrometer5646;
	jmethodID mid_getGUIFeatures5647;
	jmethodID mid_getSingleStrobeCountsToMicros5648;
	jmethodID mid_getSingleStrobeHigh5649;
	jmethodID mid_getSingleStrobeIncrement5650;
	jmethodID mid_getSingleStrobeLow5651;
	jmethodID mid_getSingleStrobeMaximum5652;
	jmethodID mid_getSingleStrobeMinimum5653;
	jmethodID mid_setSingleStrobeHigh5654;
	jmethodID mid_setSingleStrobeLow5655;
	jmethodID mid_continuousStrobeCountsToMicros5656;
	jmethodID mid_getContinuousStrobeDelayIncrement5657;
	jmethodID mid_getContinuousStrobeDelayMaximum5658;
	jmethodID mid_getContinuousStrobeDelayMinimum5659;
	jmethodID mid_setContinuousStrobeDelay5660;
	jmethodID mid_setContinuousModeType5661;
	jmethodID mid_setDelayAfterIntegration5662;
	jmethodID mid_getContinuousModeType5663;
	jmethodID mid_getDelayAfterIntegration5664;
	jmethodID mid_setContinuousEnable5665;
	jmethodID mid_getContinuousEnable5666;
	jmethodID mid_getDirectionBits5667;
	jmethodID mid_getMuxBits5668;
	jmethodID mid_getNumberOfPins5669;
	jmethodID mid_getTotalGPIOBits5670;
	jmethodID mid_getValueBit5671;
	jmethodID mid_getValueBits5672;
	jmethodID mid_setDirectionAllBits5673;
	jmethodID mid_setDirectionBit5674;
	jmethodID mid_setDirectionBitmask5675;
	jmethodID mid_setMuxAllBits5676;
	jmethodID mid_setMuxBit5677;
	jmethodID mid_setMuxBitmask5678;
	jmethodID mid_setValueAllBits5679;
	jmethodID mid_setValueBit5680;
	jmethodID mid_setValueBitmask5681;
	jmethodID mid_getExternalTriggerDelayIncrement5682;
	jmethodID mid_getExternalTriggerDelayMaximum5683;
	jmethodID mid_getExternalTriggerDelayMinimum5684;
	jmethodID mid_setExternalTriggerDelay5685;
	jmethodID mid_triggerDelayCountsToMicroseconds5686;
	jmethodID mid_getExternalTriggerModes5687;
	jmethodID mid_setExternalTriggerMode5688;
	jmethodID mid_sendSimulatedTriggerSignal5689;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_STSBASE_T
#define EXTERN_TYPEDEF_STSBASE_T
	typedef void* STSBASE_T;
#endif /* EXTERN_TYPEDEF_STSBASE_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_BITSET_T
#define EXTERN_TYPEDEF_BITSET_T
	typedef void* BITSET_T;
#endif /* EXTERN_TYPEDEF_BITSET_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_FLUXDATA_T
#define EXTERN_TYPEDEF_FLUXDATA_T
	typedef void* FLUXDATA_T;
#endif /* EXTERN_TYPEDEF_FLUXDATA_T */

	EXPORTED FLUXDATA_T FluxData_Create();
	EXPORTED FLUXDATA_T FluxData_Create_1(int i);
	EXPORTED void FluxData_initFeatures(FLUXDATA_T c_flux_data, USBINTERFACE_T usb);
	EXPORTED void FluxData_openSpectrometer(FLUXDATA_T c_flux_data, int index);
	EXPORTED void FluxData_getGUIFeatures(FLUXDATA_T c_flux_data, GUIPROVIDERARRAY_T retval);
	EXPORTED double FluxData_getSingleStrobeCountsToMicros(FLUXDATA_T c_flux_data, int counts);
	EXPORTED int FluxData_getSingleStrobeHigh(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getSingleStrobeIncrement(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getSingleStrobeLow(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getSingleStrobeMaximum(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getSingleStrobeMinimum(FLUXDATA_T c_flux_data);
	EXPORTED void FluxData_setSingleStrobeHigh(FLUXDATA_T c_flux_data, int counts);
	EXPORTED void FluxData_setSingleStrobeLow(FLUXDATA_T c_flux_data, int counts);
	EXPORTED double FluxData_continuousStrobeCountsToMicros(FLUXDATA_T c_flux_data, int counts);
	EXPORTED int FluxData_getContinuousStrobeDelayIncrement(FLUXDATA_T c_flux_data, int magnitude);
	EXPORTED int FluxData_getContinuousStrobeDelayMaximum(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getContinuousStrobeDelayMinimum(FLUXDATA_T c_flux_data);
	EXPORTED void FluxData_setContinuousStrobeDelay(FLUXDATA_T c_flux_data, int durationOfPhase);
	EXPORTED void FluxData_setContinuousModeType(FLUXDATA_T c_flux_data, short mode);
	EXPORTED void FluxData_setDelayAfterIntegration(FLUXDATA_T c_flux_data, int delay);
	EXPORTED short FluxData_getContinuousModeType(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getDelayAfterIntegration(FLUXDATA_T c_flux_data);
	EXPORTED void FluxData_setContinuousEnable(FLUXDATA_T c_flux_data, short value);
	EXPORTED short FluxData_getContinuousEnable(FLUXDATA_T c_flux_data);
	EXPORTED void FluxData_getDirectionBits(FLUXDATA_T c_flux_data, BITSET_T retval);
	EXPORTED void FluxData_getMuxBits(FLUXDATA_T c_flux_data, BITSET_T retval);
	EXPORTED int FluxData_getNumberOfPins(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getTotalGPIOBits(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getValueBit(FLUXDATA_T c_flux_data, int bitNumber);
	EXPORTED void FluxData_getValueBits(FLUXDATA_T c_flux_data, BITSET_T retval);
	EXPORTED void FluxData_setDirectionAllBits(FLUXDATA_T c_flux_data, BITSET_T bitSet);
	EXPORTED void FluxData_setDirectionBit(FLUXDATA_T c_flux_data, int bit, short value);
	EXPORTED void FluxData_setDirectionBitmask(FLUXDATA_T c_flux_data, short bitmask);
	EXPORTED void FluxData_setMuxAllBits(FLUXDATA_T c_flux_data, BITSET_T bitSet);
	EXPORTED void FluxData_setMuxBit(FLUXDATA_T c_flux_data, int bit, short value);
	EXPORTED void FluxData_setMuxBitmask(FLUXDATA_T c_flux_data, short bitmask);
	EXPORTED void FluxData_setValueAllBits(FLUXDATA_T c_flux_data, BITSET_T bitSet);
	EXPORTED void FluxData_setValueBit(FLUXDATA_T c_flux_data, int bit, short value);
	EXPORTED void FluxData_setValueBitmask(FLUXDATA_T c_flux_data, short bitmask);
	EXPORTED int FluxData_getExternalTriggerDelayIncrement(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getExternalTriggerDelayMaximum(FLUXDATA_T c_flux_data);
	EXPORTED int FluxData_getExternalTriggerDelayMinimum(FLUXDATA_T c_flux_data);
	EXPORTED void FluxData_setExternalTriggerDelay(FLUXDATA_T c_flux_data, int counts);
	EXPORTED double FluxData_triggerDelayCountsToMicroseconds(FLUXDATA_T c_flux_data, int counts);
	EXPORTED void FluxData_getExternalTriggerModes(FLUXDATA_T c_flux_data, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void FluxData_setExternalTriggerMode(FLUXDATA_T c_flux_data, int mode);
	EXPORTED void FluxData_sendSimulatedTriggerSignal(FLUXDATA_T c_flux_data);
	EXPORTED void FluxData_Destroy(FLUXDATA_T flux_data);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED FLUXDATA_T STDCALL FluxData_Create_stdcall();
	EXPORTED FLUXDATA_T STDCALL FluxData_Create_stdcall_1(int i);
	EXPORTED void STDCALL FluxData_initFeatures_stdcall(FLUXDATA_T c_flux_data, USBINTERFACE_T usb);
	EXPORTED void STDCALL FluxData_openSpectrometer_stdcall(FLUXDATA_T c_flux_data, int index);
	EXPORTED void STDCALL FluxData_getGUIFeatures_stdcall(FLUXDATA_T c_flux_data, GUIPROVIDERARRAY_T retval);
	EXPORTED double STDCALL FluxData_getSingleStrobeCountsToMicros_stdcall(FLUXDATA_T c_flux_data, int counts);
	EXPORTED int STDCALL FluxData_getSingleStrobeHigh_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getSingleStrobeIncrement_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getSingleStrobeLow_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getSingleStrobeMaximum_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getSingleStrobeMinimum_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED void STDCALL FluxData_setSingleStrobeHigh_stdcall(FLUXDATA_T c_flux_data, int counts);
	EXPORTED void STDCALL FluxData_setSingleStrobeLow_stdcall(FLUXDATA_T c_flux_data, int counts);
	EXPORTED double STDCALL FluxData_continuousStrobeCountsToMicros_stdcall(FLUXDATA_T c_flux_data, int counts);
	EXPORTED int STDCALL FluxData_getContinuousStrobeDelayIncrement_stdcall(FLUXDATA_T c_flux_data, int magnitude);
	EXPORTED int STDCALL FluxData_getContinuousStrobeDelayMaximum_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getContinuousStrobeDelayMinimum_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED void STDCALL FluxData_setContinuousStrobeDelay_stdcall(FLUXDATA_T c_flux_data, int durationOfPhase);
	EXPORTED void STDCALL FluxData_setContinuousModeType_stdcall(FLUXDATA_T c_flux_data, short mode);
	EXPORTED void STDCALL FluxData_setDelayAfterIntegration_stdcall(FLUXDATA_T c_flux_data, int delay);
	EXPORTED short STDCALL FluxData_getContinuousModeType_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getDelayAfterIntegration_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED void STDCALL FluxData_setContinuousEnable_stdcall(FLUXDATA_T c_flux_data, short value);
	EXPORTED short STDCALL FluxData_getContinuousEnable_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED void STDCALL FluxData_getDirectionBits_stdcall(FLUXDATA_T c_flux_data, BITSET_T retval);
	EXPORTED void STDCALL FluxData_getMuxBits_stdcall(FLUXDATA_T c_flux_data, BITSET_T retval);
	EXPORTED int STDCALL FluxData_getNumberOfPins_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getTotalGPIOBits_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getValueBit_stdcall(FLUXDATA_T c_flux_data, int bitNumber);
	EXPORTED void STDCALL FluxData_getValueBits_stdcall(FLUXDATA_T c_flux_data, BITSET_T retval);
	EXPORTED void STDCALL FluxData_setDirectionAllBits_stdcall(FLUXDATA_T c_flux_data, BITSET_T bitSet);
	EXPORTED void STDCALL FluxData_setDirectionBit_stdcall(FLUXDATA_T c_flux_data, int bit, short value);
	EXPORTED void STDCALL FluxData_setDirectionBitmask_stdcall(FLUXDATA_T c_flux_data, short bitmask);
	EXPORTED void STDCALL FluxData_setMuxAllBits_stdcall(FLUXDATA_T c_flux_data, BITSET_T bitSet);
	EXPORTED void STDCALL FluxData_setMuxBit_stdcall(FLUXDATA_T c_flux_data, int bit, short value);
	EXPORTED void STDCALL FluxData_setMuxBitmask_stdcall(FLUXDATA_T c_flux_data, short bitmask);
	EXPORTED void STDCALL FluxData_setValueAllBits_stdcall(FLUXDATA_T c_flux_data, BITSET_T bitSet);
	EXPORTED void STDCALL FluxData_setValueBit_stdcall(FLUXDATA_T c_flux_data, int bit, short value);
	EXPORTED void STDCALL FluxData_setValueBitmask_stdcall(FLUXDATA_T c_flux_data, short bitmask);
	EXPORTED int STDCALL FluxData_getExternalTriggerDelayIncrement_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getExternalTriggerDelayMaximum_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED int STDCALL FluxData_getExternalTriggerDelayMinimum_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED void STDCALL FluxData_setExternalTriggerDelay_stdcall(FLUXDATA_T c_flux_data, int counts);
	EXPORTED double STDCALL FluxData_triggerDelayCountsToMicroseconds_stdcall(FLUXDATA_T c_flux_data, int counts);
	EXPORTED void STDCALL FluxData_getExternalTriggerModes_stdcall(FLUXDATA_T c_flux_data, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED void STDCALL FluxData_setExternalTriggerMode_stdcall(FLUXDATA_T c_flux_data, int mode);
	EXPORTED void STDCALL FluxData_sendSimulatedTriggerSignal_stdcall(FLUXDATA_T c_flux_data);
	EXPORTED void STDCALL FluxData_Destroy_stdcall(FLUXDATA_T flux_data);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* FLUXDATA_H */
