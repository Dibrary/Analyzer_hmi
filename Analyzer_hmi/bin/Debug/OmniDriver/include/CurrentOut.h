/**
 * File: CurrentOut.h
 * Autogenerated on Fri Mar 23 13:38:32 EDT 2018 based on
 * CurrentOut.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/currentout/CurrentOut
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef CURRENTOUT_H
#define CURRENTOUT_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED CurrentOut : public BaseJavaClass // CPPClass.tag001
{
public: 
	void setDACCounts(int param0);
	int getDACMinimum();
	int getDACMaximum();
	int getDACIncrement();
	double analogOutCountsToMilliamps(int param0);
	~CurrentOut();
	// No public default Java constructor; creating one:
	CurrentOut();
	// No public Java copy constructor; creating one:
	CurrentOut(const CurrentOut &that);
	// Creating assignment operator declaration:
	CurrentOut &operator=(const CurrentOut &that);

private:
	jmethodID mid_setDACCounts1114;
	jmethodID mid_getDACMinimum1115;
	jmethodID mid_getDACMaximum1116;
	jmethodID mid_getDACIncrement1117;
	jmethodID mid_analogOutCountsToMilliamps1118;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_CURRENTOUT_T
#define EXTERN_TYPEDEF_CURRENTOUT_T
	typedef void* CURRENTOUT_T;
#endif /* EXTERN_TYPEDEF_CURRENTOUT_T */

	// No public default Java constructor; creating one:
	EXPORTED CURRENTOUT_T CurrentOut_Create();
	EXPORTED void CurrentOut_setDACCounts(CURRENTOUT_T c_current_out, int param0);
	EXPORTED int CurrentOut_getDACMinimum(CURRENTOUT_T c_current_out);
	EXPORTED int CurrentOut_getDACMaximum(CURRENTOUT_T c_current_out);
	EXPORTED int CurrentOut_getDACIncrement(CURRENTOUT_T c_current_out);
	EXPORTED double CurrentOut_analogOutCountsToMilliamps(CURRENTOUT_T c_current_out, int param0);
	EXPORTED void CurrentOut_Destroy(CURRENTOUT_T current_out);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL CurrentOut_setDACCounts_stdcall(CURRENTOUT_T c_current_out, int param0);
	EXPORTED int STDCALL CurrentOut_getDACMinimum_stdcall(CURRENTOUT_T c_current_out);
	EXPORTED int STDCALL CurrentOut_getDACMaximum_stdcall(CURRENTOUT_T c_current_out);
	EXPORTED int STDCALL CurrentOut_getDACIncrement_stdcall(CURRENTOUT_T c_current_out);
	EXPORTED double STDCALL CurrentOut_analogOutCountsToMilliamps_stdcall(CURRENTOUT_T c_current_out, int param0);
	EXPORTED void STDCALL CurrentOut_Destroy_stdcall(CURRENTOUT_T current_out);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* CURRENTOUT_H */
