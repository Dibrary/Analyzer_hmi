/**
 * File: USB650.h
 * Autogenerated on Fri Mar 23 13:39:17 EDT 2018 based on
 * USB650.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/usb650/USB650
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USB650_H
#define USB650_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBSpectrometer.h"
#include "USBEndpointDescriptor.h"
#include "SpectrometerChannelArray.h"
#include "GUIProviderArray.h"
#include "SpectrometerStatus.h"
#include "ExternalTriggerModeArray.h"
#include "SpectrometerPlugInArray.h"
#include "CoefficientsArray.h"
#include "AcquisitionListener.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBSpectrometer;
class USBEndpointDescriptor;
class SpectrometerChannelArray;
class GUIProviderArray;
class SpectrometerStatus;
class ExternalTriggerModeArray;
class SpectrometerPlugInArray;
class CoefficientsArray;
class AcquisitionListener;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USB650 : public USBSpectrometer // CPPClass.tag001
{
public: 
	USB650();
	USB650(int i);
	int getNumberOfPixels();
	int getNumberOfDarkPixels();
	void setEndpoints();
	USBEndpointDescriptor getEndpoint(int endPoint);
	void openSpectrometer(int index);
	SpectrometerChannelArray getChannels();
	GUIProviderArray getGUIFeatures();
	SpectrometerStatus getStatus();
	int readIntegrationTime();
	void setMasterClock(int freq);
	DoubleArray getIrradianceCalibrationFactors();
	void setIrradianceCalibrationFactors(DoubleArray& data);
	double getCollectionArea();
	short hasCollectionArea();
	void setCollectionArea(double area);
	int getActualIntegrationTime();
	CharArray getSPIBytes(CharArray& message, int length);
	void setExternalTriggerMode(int mode);
	ExternalTriggerModeArray getExternalTriggerModes();
	short isPlugInDetected(int id);
	SpectrometerPlugInArray getPlugIns();
	int getNumberOfPlugIns();
	CharArray initializePlugIns();
	void detectPlugIns();
	CoefficientsArray readNonlinearityCoefficientsFromSpectrometer();
	void writeNonlinearityCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getNonlinearityCoefficients();
	void setNonlinearityCoefficients(CoefficientsArray& coefficients);
	DoubleArray getNonlinearityCoefficientsSingleChannel(int index);
	void setNonlinearityCoefficientsSingleChannel(DoubleArray& nl, int index);
	CoefficientsArray readWavelengthCalibrationCoefficientsFromSpectrometer();
	void writeWavelengthCoefficientsToSpectrometer(CoefficientsArray& coefficients);
	CoefficientsArray getWavelengthCalibrationCoefficients();
	void setWavelengthCalibrationCoefficients(CoefficientsArray& coefficients);
	DoubleArray getWavelengths(int index);
	void setWavelengths(DoubleArray& wl, int index);
	CoefficientsArray readStrayLightCorrectionCoefficientFromSpectrometer();
	void writeStrayLightCoefficientToSpectrometer(CoefficientsArray& coefficients);
	void setStrayLightCorrectionCoefficient(CoefficientsArray& coefficients);
	CoefficientsArray getStrayLightCorrectionCoefficient();
	void setStrayLight(double strayLight, int index);
	double getStrayLight(int index);
	short isAdvancedVersion();
	void addAcquisitionListener(AcquisitionListener& listener);
	void removeAcquisitionListener(AcquisitionListener& listener);
	JString toString();
	~USB650();
	// No public Java copy constructor; creating one:
	USB650(const USB650 &that);
	// Creating assignment operator declaration:
	USB650 &operator=(const USB650 &that);

private:
	jmethodID mid_USB6506277;
	jmethodID mid_USB6506278;
	jmethodID mid_getNumberOfPixels6279;
	jmethodID mid_getNumberOfDarkPixels6280;
	jmethodID mid_setEndpoints6281;
	jmethodID mid_getEndpoint6282;
	jmethodID mid_openSpectrometer6283;
	jmethodID mid_getChannels6284;
	jmethodID mid_getGUIFeatures6285;
	jmethodID mid_getStatus6286;
	jmethodID mid_readIntegrationTime6287;
	jmethodID mid_setMasterClock6288;
	jmethodID mid_getIrradianceCalibrationFactors6289;
	jmethodID mid_setIrradianceCalibrationFactors6290;
	jmethodID mid_getCollectionArea6291;
	jmethodID mid_hasCollectionArea6292;
	jmethodID mid_setCollectionArea6293;
	jmethodID mid_getActualIntegrationTime6294;
	jmethodID mid_getSPIBytes6295;
	jmethodID mid_setExternalTriggerMode6296;
	jmethodID mid_getExternalTriggerModes6297;
	jmethodID mid_isPlugInDetected6298;
	jmethodID mid_getPlugIns6299;
	jmethodID mid_getNumberOfPlugIns6300;
	jmethodID mid_initializePlugIns6301;
	jmethodID mid_detectPlugIns6302;
	jmethodID mid_readNonlinearityCoefficientsFromSpectrometer6303;
	jmethodID mid_writeNonlinearityCoefficientsToSpectrometer6304;
	jmethodID mid_getNonlinearityCoefficients6305;
	jmethodID mid_setNonlinearityCoefficients6306;
	jmethodID mid_getNonlinearityCoefficientsSingleChannel6307;
	jmethodID mid_setNonlinearityCoefficientsSingleChannel6308;
	jmethodID mid_readWavelengthCalibrationCoefficientsFromSpectrometer6309;
	jmethodID mid_writeWavelengthCoefficientsToSpectrometer6310;
	jmethodID mid_getWavelengthCalibrationCoefficients6311;
	jmethodID mid_setWavelengthCalibrationCoefficients6312;
	jmethodID mid_getWavelengths6313;
	jmethodID mid_setWavelengths6314;
	jmethodID mid_readStrayLightCorrectionCoefficientFromSpectrometer6315;
	jmethodID mid_writeStrayLightCoefficientToSpectrometer6316;
	jmethodID mid_setStrayLightCorrectionCoefficient6317;
	jmethodID mid_getStrayLightCorrectionCoefficient6318;
	jmethodID mid_setStrayLight6319;
	jmethodID mid_getStrayLight6320;
	jmethodID mid_isAdvancedVersion6321;
	jmethodID mid_addAcquisitionListener6322;
	jmethodID mid_removeAcquisitionListener6323;
	jmethodID mid_toString6324;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBSPECTROMETER_T
#define EXTERN_TYPEDEF_USBSPECTROMETER_T
	typedef void* USBSPECTROMETER_T;
#endif /* EXTERN_TYPEDEF_USBSPECTROMETER_T */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T
	typedef void* SPECTROMETERCHANNELARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELARRAY_T */
#ifndef EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
#define EXTERN_TYPEDEF_GUIPROVIDERARRAY_T
	typedef void* GUIPROVIDERARRAY_T;
#endif /* EXTERN_TYPEDEF_GUIPROVIDERARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
#define EXTERN_TYPEDEF_SPECTROMETERSTATUS_T
	typedef void* SPECTROMETERSTATUS_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERSTATUS_T */
#ifndef EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
#define EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T
	typedef void* EXTERNALTRIGGERMODEARRAY_T;
#endif /* EXTERN_TYPEDEF_EXTERNALTRIGGERMODEARRAY_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
#define EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T
	typedef void* SPECTROMETERPLUGINARRAY_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERPLUGINARRAY_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
#define EXTERN_TYPEDEF_COEFFICIENTSARRAY_T
	typedef void* COEFFICIENTSARRAY_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTSARRAY_T */
#ifndef EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
#define EXTERN_TYPEDEF_ACQUISITIONLISTENER_T
	typedef void* ACQUISITIONLISTENER_T;
#endif /* EXTERN_TYPEDEF_ACQUISITIONLISTENER_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USB650_T
#define EXTERN_TYPEDEF_USB650_T
	typedef void* USB650_T;
#endif /* EXTERN_TYPEDEF_USB650_T */

	EXPORTED USB650_T USB650_Create();
	EXPORTED USB650_T USB650_Create_1(int i);
	EXPORTED int USB650_getNumberOfPixels(USB650_T c_usb650);
	EXPORTED int USB650_getNumberOfDarkPixels(USB650_T c_usb650);
	EXPORTED void USB650_setEndpoints(USB650_T c_usb650);
	EXPORTED void USB650_getEndpoint(USB650_T c_usb650, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED void USB650_openSpectrometer(USB650_T c_usb650, int index);
	EXPORTED void USB650_getChannels(USB650_T c_usb650, SPECTROMETERCHANNELARRAY_T retval);
	EXPORTED void USB650_getGUIFeatures(USB650_T c_usb650, GUIPROVIDERARRAY_T retval);
	EXPORTED void USB650_getStatus(USB650_T c_usb650, SPECTROMETERSTATUS_T retval);
	EXPORTED int USB650_readIntegrationTime(USB650_T c_usb650);
	EXPORTED void USB650_setMasterClock(USB650_T c_usb650, int freq);
	EXPORTED void USB650_getIrradianceCalibrationFactors(USB650_T c_usb650, DOUBLEARRAY_T retval);
	EXPORTED void USB650_setIrradianceCalibrationFactors(USB650_T c_usb650, DOUBLEARRAY_T data);
	EXPORTED double USB650_getCollectionArea(USB650_T c_usb650);
	EXPORTED short USB650_hasCollectionArea(USB650_T c_usb650);
	EXPORTED void USB650_setCollectionArea(USB650_T c_usb650, double area);
	EXPORTED int USB650_getActualIntegrationTime(USB650_T c_usb650);
	EXPORTED void USB650_getSPIBytes(USB650_T c_usb650, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void USB650_setExternalTriggerMode(USB650_T c_usb650, int mode);
	EXPORTED void USB650_getExternalTriggerModes(USB650_T c_usb650, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED short USB650_isPlugInDetected(USB650_T c_usb650, int id);
	EXPORTED void USB650_getPlugIns(USB650_T c_usb650, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int USB650_getNumberOfPlugIns(USB650_T c_usb650);
	EXPORTED void USB650_initializePlugIns(USB650_T c_usb650, CHARARRAY_T retval);
	EXPORTED void USB650_detectPlugIns(USB650_T c_usb650);
	EXPORTED void USB650_readNonlinearityCoefficientsFromSpectrometer(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB650_writeNonlinearityCoefficientsToSpectrometer(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB650_getNonlinearityCoefficients(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB650_setNonlinearityCoefficients(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB650_getNonlinearityCoefficientsSingleChannel(USB650_T c_usb650, int index, DOUBLEARRAY_T retval);
	EXPORTED void USB650_setNonlinearityCoefficientsSingleChannel(USB650_T c_usb650, DOUBLEARRAY_T nl, int index);
	EXPORTED void USB650_readWavelengthCalibrationCoefficientsFromSpectrometer(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB650_writeWavelengthCoefficientsToSpectrometer(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB650_getWavelengthCalibrationCoefficients(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB650_setWavelengthCalibrationCoefficients(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB650_getWavelengths(USB650_T c_usb650, int index, DOUBLEARRAY_T retval);
	EXPORTED void USB650_setWavelengths(USB650_T c_usb650, DOUBLEARRAY_T wl, int index);
	EXPORTED void USB650_readStrayLightCorrectionCoefficientFromSpectrometer(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB650_writeStrayLightCoefficientToSpectrometer(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB650_setStrayLightCorrectionCoefficient(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void USB650_getStrayLightCorrectionCoefficient(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void USB650_setStrayLight(USB650_T c_usb650, double strayLight, int index);
	EXPORTED double USB650_getStrayLight(USB650_T c_usb650, int index);
	EXPORTED short USB650_isAdvancedVersion(USB650_T c_usb650);
	EXPORTED void USB650_addAcquisitionListener(USB650_T c_usb650, ACQUISITIONLISTENER_T listener);
	EXPORTED void USB650_removeAcquisitionListener(USB650_T c_usb650, ACQUISITIONLISTENER_T listener);
	EXPORTED void USB650_toString(USB650_T c_usb650, JSTRING_T retval);
	EXPORTED void USB650_Destroy(USB650_T usb650);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED USB650_T STDCALL USB650_Create_stdcall();
	EXPORTED USB650_T STDCALL USB650_Create_stdcall_1(int i);
	EXPORTED int STDCALL USB650_getNumberOfPixels_stdcall(USB650_T c_usb650);
	EXPORTED int STDCALL USB650_getNumberOfDarkPixels_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_setEndpoints_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_getEndpoint_stdcall(USB650_T c_usb650, int endPoint, USBENDPOINTDESCRIPTOR_T retval);
	EXPORTED void STDCALL USB650_openSpectrometer_stdcall(USB650_T c_usb650, int index);
	EXPORTED void STDCALL USB650_getChannels_stdcall(USB650_T c_usb650, SPECTROMETERCHANNELARRAY_T retval);
	EXPORTED void STDCALL USB650_getGUIFeatures_stdcall(USB650_T c_usb650, GUIPROVIDERARRAY_T retval);
	EXPORTED void STDCALL USB650_getStatus_stdcall(USB650_T c_usb650, SPECTROMETERSTATUS_T retval);
	EXPORTED int STDCALL USB650_readIntegrationTime_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_setMasterClock_stdcall(USB650_T c_usb650, int freq);
	EXPORTED void STDCALL USB650_getIrradianceCalibrationFactors_stdcall(USB650_T c_usb650, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB650_setIrradianceCalibrationFactors_stdcall(USB650_T c_usb650, DOUBLEARRAY_T data);
	EXPORTED double STDCALL USB650_getCollectionArea_stdcall(USB650_T c_usb650);
	EXPORTED short STDCALL USB650_hasCollectionArea_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_setCollectionArea_stdcall(USB650_T c_usb650, double area);
	EXPORTED int STDCALL USB650_getActualIntegrationTime_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_getSPIBytes_stdcall(USB650_T c_usb650, CHARARRAY_T message, int length, CHARARRAY_T retval);
	EXPORTED void STDCALL USB650_setExternalTriggerMode_stdcall(USB650_T c_usb650, int mode);
	EXPORTED void STDCALL USB650_getExternalTriggerModes_stdcall(USB650_T c_usb650, EXTERNALTRIGGERMODEARRAY_T retval);
	EXPORTED short STDCALL USB650_isPlugInDetected_stdcall(USB650_T c_usb650, int id);
	EXPORTED void STDCALL USB650_getPlugIns_stdcall(USB650_T c_usb650, SPECTROMETERPLUGINARRAY_T retval);
	EXPORTED int STDCALL USB650_getNumberOfPlugIns_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_initializePlugIns_stdcall(USB650_T c_usb650, CHARARRAY_T retval);
	EXPORTED void STDCALL USB650_detectPlugIns_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_readNonlinearityCoefficientsFromSpectrometer_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB650_writeNonlinearityCoefficientsToSpectrometer_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB650_getNonlinearityCoefficients_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB650_setNonlinearityCoefficients_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB650_getNonlinearityCoefficientsSingleChannel_stdcall(USB650_T c_usb650, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB650_setNonlinearityCoefficientsSingleChannel_stdcall(USB650_T c_usb650, DOUBLEARRAY_T nl, int index);
	EXPORTED void STDCALL USB650_readWavelengthCalibrationCoefficientsFromSpectrometer_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB650_writeWavelengthCoefficientsToSpectrometer_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB650_getWavelengthCalibrationCoefficients_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB650_setWavelengthCalibrationCoefficients_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB650_getWavelengths_stdcall(USB650_T c_usb650, int index, DOUBLEARRAY_T retval);
	EXPORTED void STDCALL USB650_setWavelengths_stdcall(USB650_T c_usb650, DOUBLEARRAY_T wl, int index);
	EXPORTED void STDCALL USB650_readStrayLightCorrectionCoefficientFromSpectrometer_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB650_writeStrayLightCoefficientToSpectrometer_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB650_setStrayLightCorrectionCoefficient_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T coefficients);
	EXPORTED void STDCALL USB650_getStrayLightCorrectionCoefficient_stdcall(USB650_T c_usb650, COEFFICIENTSARRAY_T retval);
	EXPORTED void STDCALL USB650_setStrayLight_stdcall(USB650_T c_usb650, double strayLight, int index);
	EXPORTED double STDCALL USB650_getStrayLight_stdcall(USB650_T c_usb650, int index);
	EXPORTED short STDCALL USB650_isAdvancedVersion_stdcall(USB650_T c_usb650);
	EXPORTED void STDCALL USB650_addAcquisitionListener_stdcall(USB650_T c_usb650, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL USB650_removeAcquisitionListener_stdcall(USB650_T c_usb650, ACQUISITIONLISTENER_T listener);
	EXPORTED void STDCALL USB650_toString_stdcall(USB650_T c_usb650, JSTRING_T retval);
	EXPORTED void STDCALL USB650_Destroy_stdcall(USB650_T usb650);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USB650_H */
