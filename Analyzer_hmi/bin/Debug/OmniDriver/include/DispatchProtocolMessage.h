/**
 * File: DispatchProtocolMessage.h
 * Autogenerated on Fri Mar 23 13:38:53 EDT 2018 based on
 * DispatchProtocolMessage.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/jaz/DispatchProtocolMessage
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef DISPATCHPROTOCOLMESSAGE_H
#define DISPATCHPROTOCOLMESSAGE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED DispatchProtocolMessage : public BaseJavaClass // CPPClass.tag001
{
public: 
	DispatchProtocolMessage();
	DispatchProtocolMessage(CharArray& message);
	CharArray toByteStream();
	int parseByteStream(CharArray& message);
	long long getBytesRemaining();
	short getChecksum();
	signed char getFlags();
	long long getFrom();
	long long getMessageType();
	CharArray getPayload();
	long long getRegarding();
	long long getSequelPointer();
	long long getSequenceNumber();
	long long getTo();
	void setBytesRemaining(long long bytesRemaining);
	void setFlags(signed char flags);
	void setFrom(long long from);
	void setMessageType(long long messageType);
	void setPayload(CharArray& data);
	void setRegarding(long long regarding);
	void setSequelPointer(long long sequelPointer);
	void setSequenceNumber(long long sequenceNumber);
	void setTo(long long to);
	JString toString();
	~DispatchProtocolMessage();
	// No public Java copy constructor; creating one:
	DispatchProtocolMessage(const DispatchProtocolMessage &that);
	// Creating assignment operator declaration:
	DispatchProtocolMessage &operator=(const DispatchProtocolMessage &that);

private:
	jmethodID mid_DispatchProtocolMessage3651;
	jmethodID mid_DispatchProtocolMessage3652;
	jmethodID mid_toByteStream3653;
	jmethodID mid_parseByteStream3654;
	jmethodID mid_getBytesRemaining3655;
	jmethodID mid_getChecksum3656;
	jmethodID mid_getFlags3657;
	jmethodID mid_getFrom3658;
	jmethodID mid_getMessageType3659;
	jmethodID mid_getPayload3660;
	jmethodID mid_getRegarding3661;
	jmethodID mid_getSequelPointer3662;
	jmethodID mid_getSequenceNumber3663;
	jmethodID mid_getTo3664;
	jmethodID mid_setBytesRemaining3665;
	jmethodID mid_setFlags3666;
	jmethodID mid_setFrom3667;
	jmethodID mid_setMessageType3668;
	jmethodID mid_setPayload3669;
	jmethodID mid_setRegarding3670;
	jmethodID mid_setSequelPointer3671;
	jmethodID mid_setSequenceNumber3672;
	jmethodID mid_setTo3673;
	jmethodID mid_toString3674;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
#define EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T
	typedef void* DISPATCHPROTOCOLMESSAGE_T;
#endif /* EXTERN_TYPEDEF_DISPATCHPROTOCOLMESSAGE_T */

	EXPORTED DISPATCHPROTOCOLMESSAGE_T DispatchProtocolMessage_Create();
	EXPORTED DISPATCHPROTOCOLMESSAGE_T DispatchProtocolMessage_Create_1(CHARARRAY_T message);
	EXPORTED void DispatchProtocolMessage_toByteStream(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T retval);
	EXPORTED int DispatchProtocolMessage_parseByteStream(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T message);
	EXPORTED long long DispatchProtocolMessage_getBytesRemaining(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED short DispatchProtocolMessage_getChecksum(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED signed char DispatchProtocolMessage_getFlags(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long DispatchProtocolMessage_getFrom(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long DispatchProtocolMessage_getMessageType(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED void DispatchProtocolMessage_getPayload(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T retval);
	EXPORTED long long DispatchProtocolMessage_getRegarding(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long DispatchProtocolMessage_getSequelPointer(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long DispatchProtocolMessage_getSequenceNumber(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long DispatchProtocolMessage_getTo(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED void DispatchProtocolMessage_setBytesRemaining(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long bytesRemaining);
	EXPORTED void DispatchProtocolMessage_setFlags(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, signed char flags);
	EXPORTED void DispatchProtocolMessage_setFrom(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long from);
	EXPORTED void DispatchProtocolMessage_setMessageType(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long messageType);
	EXPORTED void DispatchProtocolMessage_setPayload(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T data);
	EXPORTED void DispatchProtocolMessage_setRegarding(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long regarding);
	EXPORTED void DispatchProtocolMessage_setSequelPointer(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long sequelPointer);
	EXPORTED void DispatchProtocolMessage_setSequenceNumber(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long sequenceNumber);
	EXPORTED void DispatchProtocolMessage_setTo(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long to);
	EXPORTED void DispatchProtocolMessage_toString(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, JSTRING_T retval);
	EXPORTED void DispatchProtocolMessage_Destroy(DISPATCHPROTOCOLMESSAGE_T dispatch_protocol_message);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED DISPATCHPROTOCOLMESSAGE_T STDCALL DispatchProtocolMessage_Create_stdcall();
	EXPORTED DISPATCHPROTOCOLMESSAGE_T STDCALL DispatchProtocolMessage_Create_stdcall_1(CHARARRAY_T message);
	EXPORTED void STDCALL DispatchProtocolMessage_toByteStream_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T retval);
	EXPORTED int STDCALL DispatchProtocolMessage_parseByteStream_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T message);
	EXPORTED long long STDCALL DispatchProtocolMessage_getBytesRemaining_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED short STDCALL DispatchProtocolMessage_getChecksum_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED signed char STDCALL DispatchProtocolMessage_getFlags_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long STDCALL DispatchProtocolMessage_getFrom_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long STDCALL DispatchProtocolMessage_getMessageType_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED void STDCALL DispatchProtocolMessage_getPayload_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T retval);
	EXPORTED long long STDCALL DispatchProtocolMessage_getRegarding_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long STDCALL DispatchProtocolMessage_getSequelPointer_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long STDCALL DispatchProtocolMessage_getSequenceNumber_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED long long STDCALL DispatchProtocolMessage_getTo_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message);
	EXPORTED void STDCALL DispatchProtocolMessage_setBytesRemaining_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long bytesRemaining);
	EXPORTED void STDCALL DispatchProtocolMessage_setFlags_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, signed char flags);
	EXPORTED void STDCALL DispatchProtocolMessage_setFrom_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long from);
	EXPORTED void STDCALL DispatchProtocolMessage_setMessageType_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long messageType);
	EXPORTED void STDCALL DispatchProtocolMessage_setPayload_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, CHARARRAY_T data);
	EXPORTED void STDCALL DispatchProtocolMessage_setRegarding_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long regarding);
	EXPORTED void STDCALL DispatchProtocolMessage_setSequelPointer_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long sequelPointer);
	EXPORTED void STDCALL DispatchProtocolMessage_setSequenceNumber_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long sequenceNumber);
	EXPORTED void STDCALL DispatchProtocolMessage_setTo_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, long long to);
	EXPORTED void STDCALL DispatchProtocolMessage_toString_stdcall(DISPATCHPROTOCOLMESSAGE_T c_dispatch_protocol_message, JSTRING_T retval);
	EXPORTED void STDCALL DispatchProtocolMessage_Destroy_stdcall(DISPATCHPROTOCOLMESSAGE_T dispatch_protocol_message);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* DISPATCHPROTOCOLMESSAGE_H */
