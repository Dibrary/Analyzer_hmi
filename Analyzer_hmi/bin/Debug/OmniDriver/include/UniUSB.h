/**
 * File: UniUSB.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * UniUSB.java
 * for the Java class
 * com/oceanoptics/uniusb/UniUSB
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef UNIUSB_H
#define UNIUSB_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBEndpointDescriptor.h"
#include "USBConfigurationDescriptor.h"
#include "USBDeviceDescriptor.h"
#include "USBInterfaceDescriptor.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBEndpointDescriptor;
class USBConfigurationDescriptor;
class USBDeviceDescriptor;
class USBInterfaceDescriptor;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED UniUSB : public BaseJavaClass // CPPClass.tag001
{
public: 
	UniUSB();
	short isUSB2Mode();
	signed char USBBuildEndpointAddress(int address, int direction);
	long long openDevice(int vendID, int prodID, int number);
	void closeDevice(long long devID);
	int setTimeout(long long devID, USBEndpointDescriptor& endPointDescriptor, int timeoutMilliseconds);
	int bulkIn(long long devID, USBEndpointDescriptor& endPointDescriptor, CharArray& data, int size);
	int bulkOut(long long devID, USBEndpointDescriptor& endPointDescriptor, CharArray& data, int size);
	void resetPipe(long long devID, USBEndpointDescriptor& endPointDescriptor);
	void abortPipe(long long devID, USBEndpointDescriptor& endPointDescriptor);
	USBConfigurationDescriptor getUSBConfigurationDescriptor(long long devID, int configNum);
	USBDeviceDescriptor getUSBDeviceDescriptor(long long devID);
	USBInterfaceDescriptor getUSBInterfaceDescriptor(long long devID);
	JString getUSBStringDescriptor(long long devID, int index);
	~UniUSB();
	// No public Java copy constructor; creating one:
	UniUSB(const UniUSB &that);
	// Creating assignment operator declaration:
	UniUSB &operator=(const UniUSB &that);

private:
	jmethodID mid_UniUSB6658;
	jmethodID mid_isUSB2Mode6659;
	jmethodID mid_USBBuildEndpointAddress6660;
	jmethodID mid_openDevice6661;
	jmethodID mid_closeDevice6662;
	jmethodID mid_setTimeout6663;
	jmethodID mid_bulkIn6664;
	jmethodID mid_bulkOut6665;
	jmethodID mid_resetPipe6666;
	jmethodID mid_abortPipe6667;
	jmethodID mid_getUSBConfigurationDescriptor6668;
	jmethodID mid_getUSBDeviceDescriptor6669;
	jmethodID mid_getUSBInterfaceDescriptor6670;
	jmethodID mid_getUSBStringDescriptor6671;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T
	typedef void* USBCONFIGURATIONDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
	typedef void* USBDEVICEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
	typedef void* USBINTERFACEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_UNIUSB_T
#define EXTERN_TYPEDEF_UNIUSB_T
	typedef void* UNIUSB_T;
#endif /* EXTERN_TYPEDEF_UNIUSB_T */

	EXPORTED UNIUSB_T UniUSB_Create();
	EXPORTED short UniUSB_isUSB2Mode(UNIUSB_T c_uni_u_s_b);
	EXPORTED signed char UniUSB_USBBuildEndpointAddress(UNIUSB_T c_uni_u_s_b, int address, int direction);
	EXPORTED long long UniUSB_openDevice(UNIUSB_T c_uni_u_s_b, int vendID, int prodID, int number);
	EXPORTED void UniUSB_closeDevice(UNIUSB_T c_uni_u_s_b, long long devID);
	EXPORTED int UniUSB_setTimeout(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, int timeoutMilliseconds);
	EXPORTED int UniUSB_bulkIn(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED int UniUSB_bulkOut(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED void UniUSB_resetPipe(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void UniUSB_abortPipe(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void UniUSB_getUSBConfigurationDescriptor(UNIUSB_T c_uni_u_s_b, long long devID, int configNum, USBCONFIGURATIONDESCRIPTOR_T retval);
	EXPORTED void UniUSB_getUSBDeviceDescriptor(UNIUSB_T c_uni_u_s_b, long long devID, USBDEVICEDESCRIPTOR_T retval);
	EXPORTED void UniUSB_getUSBInterfaceDescriptor(UNIUSB_T c_uni_u_s_b, long long devID, USBINTERFACEDESCRIPTOR_T retval);
	EXPORTED void UniUSB_getUSBStringDescriptor(UNIUSB_T c_uni_u_s_b, long long devID, int index, JSTRING_T retval);
	EXPORTED void UniUSB_Destroy(UNIUSB_T uni_u_s_b);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED UNIUSB_T STDCALL UniUSB_Create_stdcall();
	EXPORTED short STDCALL UniUSB_isUSB2Mode_stdcall(UNIUSB_T c_uni_u_s_b);
	EXPORTED signed char STDCALL UniUSB_USBBuildEndpointAddress_stdcall(UNIUSB_T c_uni_u_s_b, int address, int direction);
	EXPORTED long long STDCALL UniUSB_openDevice_stdcall(UNIUSB_T c_uni_u_s_b, int vendID, int prodID, int number);
	EXPORTED void STDCALL UniUSB_closeDevice_stdcall(UNIUSB_T c_uni_u_s_b, long long devID);
	EXPORTED int STDCALL UniUSB_setTimeout_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, int timeoutMilliseconds);
	EXPORTED int STDCALL UniUSB_bulkIn_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED int STDCALL UniUSB_bulkOut_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor, CHARARRAY_T data, int size);
	EXPORTED void STDCALL UniUSB_resetPipe_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void STDCALL UniUSB_abortPipe_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBENDPOINTDESCRIPTOR_T endPointDescriptor);
	EXPORTED void STDCALL UniUSB_getUSBConfigurationDescriptor_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, int configNum, USBCONFIGURATIONDESCRIPTOR_T retval);
	EXPORTED void STDCALL UniUSB_getUSBDeviceDescriptor_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBDEVICEDESCRIPTOR_T retval);
	EXPORTED void STDCALL UniUSB_getUSBInterfaceDescriptor_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, USBINTERFACEDESCRIPTOR_T retval);
	EXPORTED void STDCALL UniUSB_getUSBStringDescriptor_stdcall(UNIUSB_T c_uni_u_s_b, long long devID, int index, JSTRING_T retval);
	EXPORTED void STDCALL UniUSB_Destroy_stdcall(UNIUSB_T uni_u_s_b);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* UNIUSB_H */
