/**
 * File: SpectrometerChannelSTSBase.h
 * Autogenerated on Fri Mar 23 13:39:14 EDT 2018 based on
 * SpectrometerChannelSTSBase.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/sts/SpectrometerChannelSTSBase
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef SPECTROMETERCHANNELSTSBASE_H
#define SPECTROMETERCHANNELSTSBASE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "SpectrometerChannel.h"
#include "STSBase.h"
#include "Coefficients.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class SpectrometerChannel;
class STSBase;
class Coefficients;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED SpectrometerChannelSTSBase : public SpectrometerChannel // CPPClass.tag001
{
public: 
	SpectrometerChannelSTSBase(STSBase& spectrometer, Coefficients& coefficients, int index);
	DoubleArray getAllWavelengths();
	int getNumberOfPixels();
	void updateWavelengths();
	~SpectrometerChannelSTSBase();
	// No public default Java constructor; creating one:
	SpectrometerChannelSTSBase();
	// No public Java copy constructor; creating one:
	SpectrometerChannelSTSBase(const SpectrometerChannelSTSBase &that);
	// Creating assignment operator declaration:
	SpectrometerChannelSTSBase &operator=(const SpectrometerChannelSTSBase &that);

private:
	jmethodID mid_SpectrometerChannelSTSBase5821;
	jmethodID mid_getAllWavelengths5822;
	jmethodID mid_getNumberOfPixels5823;
	jmethodID mid_updateWavelengths5824;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T
	typedef void* SPECTROMETERCHANNEL_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNEL_T */
#ifndef EXTERN_TYPEDEF_STSBASE_T
#define EXTERN_TYPEDEF_STSBASE_T
	typedef void* STSBASE_T;
#endif /* EXTERN_TYPEDEF_STSBASE_T */
#ifndef EXTERN_TYPEDEF_COEFFICIENTS_T
#define EXTERN_TYPEDEF_COEFFICIENTS_T
	typedef void* COEFFICIENTS_T;
#endif /* EXTERN_TYPEDEF_COEFFICIENTS_T */
#ifndef EXTERN_TYPEDEF_SPECTROMETERCHANNELSTSBASE_T
#define EXTERN_TYPEDEF_SPECTROMETERCHANNELSTSBASE_T
	typedef void* SPECTROMETERCHANNELSTSBASE_T;
#endif /* EXTERN_TYPEDEF_SPECTROMETERCHANNELSTSBASE_T */

	// No public default Java constructor; creating one:
	EXPORTED SPECTROMETERCHANNELSTSBASE_T SpectrometerChannelSTSBase_Create();
	EXPORTED SPECTROMETERCHANNELSTSBASE_T SpectrometerChannelSTSBase_Create_1(STSBASE_T spectrometer, COEFFICIENTS_T coefficients, int index);
	EXPORTED void SpectrometerChannelSTSBase_getAllWavelengths(SPECTROMETERCHANNELSTSBASE_T c_spectrometer_channel_s_t_s_base, DOUBLEARRAY_T retval);
	EXPORTED int SpectrometerChannelSTSBase_getNumberOfPixels(SPECTROMETERCHANNELSTSBASE_T c_spectrometer_channel_s_t_s_base);
	EXPORTED void SpectrometerChannelSTSBase_updateWavelengths(SPECTROMETERCHANNELSTSBASE_T c_spectrometer_channel_s_t_s_base);
	EXPORTED void SpectrometerChannelSTSBase_Destroy(SPECTROMETERCHANNELSTSBASE_T spectrometer_channel_s_t_s_base);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED SPECTROMETERCHANNELSTSBASE_T STDCALL SpectrometerChannelSTSBase_Create_stdcall_1(STSBASE_T spectrometer, COEFFICIENTS_T coefficients, int index);
	EXPORTED void STDCALL SpectrometerChannelSTSBase_getAllWavelengths_stdcall(SPECTROMETERCHANNELSTSBASE_T c_spectrometer_channel_s_t_s_base, DOUBLEARRAY_T retval);
	EXPORTED int STDCALL SpectrometerChannelSTSBase_getNumberOfPixels_stdcall(SPECTROMETERCHANNELSTSBASE_T c_spectrometer_channel_s_t_s_base);
	EXPORTED void STDCALL SpectrometerChannelSTSBase_updateWavelengths_stdcall(SPECTROMETERCHANNELSTSBASE_T c_spectrometer_channel_s_t_s_base);
	EXPORTED void STDCALL SpectrometerChannelSTSBase_Destroy_stdcall(SPECTROMETERCHANNELSTSBASE_T spectrometer_channel_s_t_s_base);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* SPECTROMETERCHANNELSTSBASE_H */
