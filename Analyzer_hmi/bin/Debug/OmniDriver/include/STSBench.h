/**
 * File: STSBench.h
 * Autogenerated on Fri Mar 23 13:39:14 EDT 2018 based on
 * STSBench.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/sts/STSBench
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef STSBENCH_H
#define STSBENCH_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Bench.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Bench;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED STSBench : public Bench // CPPClass.tag001
{
public: 
	STSBench();
	short isDefined();
	JString getFiberDiameter();
	JString getID();
	void setFiberDiameter(JString& fiberDiameter);
	void setID(JString& id);
	void setUsableShutter(short shutter);
	short hasShutter();
	~STSBench();
	// No public Java copy constructor; creating one:
	STSBench(const STSBench &that);
	// Creating assignment operator declaration:
	STSBench &operator=(const STSBench &that);

private:
	jmethodID mid_STSBench5804;
	jmethodID mid_isDefined5805;
	jmethodID mid_getFiberDiameter5806;
	jmethodID mid_getID5807;
	jmethodID mid_setFiberDiameter5808;
	jmethodID mid_setID5809;
	jmethodID mid_setUsableShutter5810;
	jmethodID mid_hasShutter5811;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_BENCH_T
#define EXTERN_TYPEDEF_BENCH_T
	typedef void* BENCH_T;
#endif /* EXTERN_TYPEDEF_BENCH_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_STSBENCH_T
#define EXTERN_TYPEDEF_STSBENCH_T
	typedef void* STSBENCH_T;
#endif /* EXTERN_TYPEDEF_STSBENCH_T */

	EXPORTED STSBENCH_T STSBench_Create();
	EXPORTED short STSBench_isDefined(STSBENCH_T c_stsbench);
	EXPORTED void STSBench_getFiberDiameter(STSBENCH_T c_stsbench, JSTRING_T retval);
	EXPORTED void STSBench_getID(STSBENCH_T c_stsbench, JSTRING_T retval);
	EXPORTED void STSBench_setFiberDiameter(STSBENCH_T c_stsbench, JSTRING_T fiberDiameter);
	EXPORTED void STSBench_setID(STSBENCH_T c_stsbench, JSTRING_T id);
	EXPORTED void STSBench_setUsableShutter(STSBENCH_T c_stsbench, short shutter);
	EXPORTED short STSBench_hasShutter(STSBENCH_T c_stsbench);
	EXPORTED void STSBench_Destroy(STSBENCH_T stsbench);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED STSBENCH_T STDCALL STSBench_Create_stdcall();
	EXPORTED short STDCALL STSBench_isDefined_stdcall(STSBENCH_T c_stsbench);
	EXPORTED void STDCALL STSBench_getFiberDiameter_stdcall(STSBENCH_T c_stsbench, JSTRING_T retval);
	EXPORTED void STDCALL STSBench_getID_stdcall(STSBENCH_T c_stsbench, JSTRING_T retval);
	EXPORTED void STDCALL STSBench_setFiberDiameter_stdcall(STSBENCH_T c_stsbench, JSTRING_T fiberDiameter);
	EXPORTED void STDCALL STSBench_setID_stdcall(STSBENCH_T c_stsbench, JSTRING_T id);
	EXPORTED void STDCALL STSBench_setUsableShutter_stdcall(STSBENCH_T c_stsbench, short shutter);
	EXPORTED short STDCALL STSBench_hasShutter_stdcall(STSBENCH_T c_stsbench);
	EXPORTED void STDCALL STSBench_Destroy_stdcall(STSBENCH_T stsbench);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* STSBENCH_H */
