/**
 * File: GateDelayListener.h
 * Autogenerated on Fri Mar 23 13:38:34 EDT 2018 based on
 * GateDelayListener.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/flgated/GateDelayListener
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GATEDELAYLISTENER_H
#define GATEDELAYLISTENER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED GateDelayListener : public BaseJavaClass // CPPClass.tag001
{
public: 
	void gateDelayValueChanged(int param0);
	~GateDelayListener();
	// No public default Java constructor; creating one:
	GateDelayListener();
	// No public Java copy constructor; creating one:
	GateDelayListener(const GateDelayListener &that);
	// Creating assignment operator declaration:
	GateDelayListener &operator=(const GateDelayListener &that);

private:
	jmethodID mid_gateDelayValueChanged1266;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_GATEDELAYLISTENER_T
#define EXTERN_TYPEDEF_GATEDELAYLISTENER_T
	typedef void* GATEDELAYLISTENER_T;
#endif /* EXTERN_TYPEDEF_GATEDELAYLISTENER_T */

	// No public default Java constructor; creating one:
	EXPORTED GATEDELAYLISTENER_T GateDelayListener_Create();
	EXPORTED void GateDelayListener_gateDelayValueChanged(GATEDELAYLISTENER_T c_gate_delay_listener, int param0);
	EXPORTED void GateDelayListener_Destroy(GATEDELAYLISTENER_T gate_delay_listener);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL GateDelayListener_gateDelayValueChanged_stdcall(GATEDELAYLISTENER_T c_gate_delay_listener, int param0);
	EXPORTED void STDCALL GateDelayListener_Destroy_stdcall(GATEDELAYLISTENER_T gate_delay_listener);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GATEDELAYLISTENER_H */
