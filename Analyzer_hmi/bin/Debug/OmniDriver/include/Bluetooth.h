/**
 * File: Bluetooth.h
 * Autogenerated on Fri Mar 23 13:38:30 EDT 2018 based on
 * Bluetooth.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/bluetooth/Bluetooth
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef BLUETOOTH_H
#define BLUETOOTH_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "BluetoothPin.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class BluetoothPin;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Bluetooth : public BaseJavaClass // CPPClass.tag001
{
public: 
	short isEnabled();
	void setEnable(short param0);
	void setDiscoveryMode();
	void setPin(BluetoothPin& param0);
	void persist();
	JString getDeviceName();
	int getChannelNumber();
	JString readDeviceAddress();
	~Bluetooth();
	// No public default Java constructor; creating one:
	Bluetooth();
	// No public Java copy constructor; creating one:
	Bluetooth(const Bluetooth &that);
	// Creating assignment operator declaration:
	Bluetooth &operator=(const Bluetooth &that);

private:
	jmethodID mid_isEnabled904;
	jmethodID mid_setEnable905;
	jmethodID mid_setDiscoveryMode906;
	jmethodID mid_setPin907;
	jmethodID mid_persist908;
	jmethodID mid_getDeviceName909;
	jmethodID mid_getChannelNumber910;
	jmethodID mid_readDeviceAddress911;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_BLUETOOTHPIN_T
#define EXTERN_TYPEDEF_BLUETOOTHPIN_T
	typedef void* BLUETOOTHPIN_T;
#endif /* EXTERN_TYPEDEF_BLUETOOTHPIN_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_BLUETOOTH_T
#define EXTERN_TYPEDEF_BLUETOOTH_T
	typedef void* BLUETOOTH_T;
#endif /* EXTERN_TYPEDEF_BLUETOOTH_T */

	// No public default Java constructor; creating one:
	EXPORTED BLUETOOTH_T Bluetooth_Create();
	EXPORTED short Bluetooth_isEnabled(BLUETOOTH_T c_bluetooth);
	EXPORTED void Bluetooth_setEnable(BLUETOOTH_T c_bluetooth, short param0);
	EXPORTED void Bluetooth_setDiscoveryMode(BLUETOOTH_T c_bluetooth);
	EXPORTED void Bluetooth_setPin(BLUETOOTH_T c_bluetooth, BLUETOOTHPIN_T param0);
	EXPORTED void Bluetooth_persist(BLUETOOTH_T c_bluetooth);
	EXPORTED void Bluetooth_getDeviceName(BLUETOOTH_T c_bluetooth, JSTRING_T retval);
	EXPORTED int Bluetooth_getChannelNumber(BLUETOOTH_T c_bluetooth);
	EXPORTED void Bluetooth_readDeviceAddress(BLUETOOTH_T c_bluetooth, JSTRING_T retval);
	EXPORTED void Bluetooth_Destroy(BLUETOOTH_T bluetooth);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED short STDCALL Bluetooth_isEnabled_stdcall(BLUETOOTH_T c_bluetooth);
	EXPORTED void STDCALL Bluetooth_setEnable_stdcall(BLUETOOTH_T c_bluetooth, short param0);
	EXPORTED void STDCALL Bluetooth_setDiscoveryMode_stdcall(BLUETOOTH_T c_bluetooth);
	EXPORTED void STDCALL Bluetooth_setPin_stdcall(BLUETOOTH_T c_bluetooth, BLUETOOTHPIN_T param0);
	EXPORTED void STDCALL Bluetooth_persist_stdcall(BLUETOOTH_T c_bluetooth);
	EXPORTED void STDCALL Bluetooth_getDeviceName_stdcall(BLUETOOTH_T c_bluetooth, JSTRING_T retval);
	EXPORTED int STDCALL Bluetooth_getChannelNumber_stdcall(BLUETOOTH_T c_bluetooth);
	EXPORTED void STDCALL Bluetooth_readDeviceAddress_stdcall(BLUETOOTH_T c_bluetooth, JSTRING_T retval);
	EXPORTED void STDCALL Bluetooth_Destroy_stdcall(BLUETOOTH_T bluetooth);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* BLUETOOTH_H */
