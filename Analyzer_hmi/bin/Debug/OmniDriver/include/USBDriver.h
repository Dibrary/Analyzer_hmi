/**
 * File: USBDriver.h
 * Autogenerated on Fri Mar 23 13:39:20 EDT 2018 based on
 * USBDriver.java
 * for the Java class
 * com/oceanoptics/uniusb/USBDriver
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef USBDRIVER_H
#define USBDRIVER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "USBEndpointDescriptor.h"
#include "USBConfigurationDescriptor.h"
#include "USBDeviceDescriptor.h"
#include "USBInterfaceDescriptor.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class USBEndpointDescriptor;
class USBConfigurationDescriptor;
class USBDeviceDescriptor;
class USBInterfaceDescriptor;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED USBDriver : public BaseJavaClass // CPPClass.tag001
{
public: 
	short isUSB2Mode();
	signed char USBBuildEndpointAddress(int param0, int param1);
	long long openDevice(int param0, int param1, int param2);
	void closeDevice(long long param0);
	int setTimeout(long long param0, USBEndpointDescriptor& param1, int param2);
	int bulkIn(long long param0, USBEndpointDescriptor& param1, CharArray& param2, int param3);
	int bulkOut(long long param0, USBEndpointDescriptor& param1, CharArray& param2, int param3);
	void resetPipe(long long param0, USBEndpointDescriptor& param1);
	void abortPipe(long long param0, USBEndpointDescriptor& param1);
	USBConfigurationDescriptor getUSBConfigurationDescriptor(long long param0, int param1);
	USBDeviceDescriptor getUSBDeviceDescriptor(long long param0);
	USBInterfaceDescriptor getUSBInterfaceDescriptor(long long param0);
	JString getUSBStringDescriptor(long long param0, int param1);
	~USBDriver();
	// No public default Java constructor; creating one:
	USBDriver();
	// No public Java copy constructor; creating one:
	USBDriver(const USBDriver &that);
	// Creating assignment operator declaration:
	USBDriver &operator=(const USBDriver &that);

private:
	jmethodID mid_isUSB2Mode6618;
	jmethodID mid_USBBuildEndpointAddress6619;
	jmethodID mid_openDevice6620;
	jmethodID mid_closeDevice6621;
	jmethodID mid_setTimeout6622;
	jmethodID mid_bulkIn6623;
	jmethodID mid_bulkOut6624;
	jmethodID mid_resetPipe6625;
	jmethodID mid_abortPipe6626;
	jmethodID mid_getUSBConfigurationDescriptor6627;
	jmethodID mid_getUSBDeviceDescriptor6628;
	jmethodID mid_getUSBInterfaceDescriptor6629;
	jmethodID mid_getUSBStringDescriptor6630;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T
	typedef void* USBENDPOINTDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBENDPOINTDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T
	typedef void* USBCONFIGURATIONDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBCONFIGURATIONDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T
	typedef void* USBDEVICEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBDEVICEDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
#define EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T
	typedef void* USBINTERFACEDESCRIPTOR_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACEDESCRIPTOR_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_USBDRIVER_T
#define EXTERN_TYPEDEF_USBDRIVER_T
	typedef void* USBDRIVER_T;
#endif /* EXTERN_TYPEDEF_USBDRIVER_T */

	// No public default Java constructor; creating one:
	EXPORTED USBDRIVER_T USBDriver_Create();
	EXPORTED short USBDriver_isUSB2Mode(USBDRIVER_T c_usbdriver);
	EXPORTED signed char USBDriver_USBBuildEndpointAddress(USBDRIVER_T c_usbdriver, int param0, int param1);
	EXPORTED long long USBDriver_openDevice(USBDRIVER_T c_usbdriver, int param0, int param1, int param2);
	EXPORTED void USBDriver_closeDevice(USBDRIVER_T c_usbdriver, long long param0);
	EXPORTED int USBDriver_setTimeout(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1, int param2);
	EXPORTED int USBDriver_bulkIn(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1, CHARARRAY_T param2, int param3);
	EXPORTED int USBDriver_bulkOut(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1, CHARARRAY_T param2, int param3);
	EXPORTED void USBDriver_resetPipe(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1);
	EXPORTED void USBDriver_abortPipe(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1);
	EXPORTED void USBDriver_getUSBConfigurationDescriptor(USBDRIVER_T c_usbdriver, long long param0, int param1, USBCONFIGURATIONDESCRIPTOR_T retval);
	EXPORTED void USBDriver_getUSBDeviceDescriptor(USBDRIVER_T c_usbdriver, long long param0, USBDEVICEDESCRIPTOR_T retval);
	EXPORTED void USBDriver_getUSBInterfaceDescriptor(USBDRIVER_T c_usbdriver, long long param0, USBINTERFACEDESCRIPTOR_T retval);
	EXPORTED void USBDriver_getUSBStringDescriptor(USBDRIVER_T c_usbdriver, long long param0, int param1, JSTRING_T retval);
	EXPORTED void USBDriver_Destroy(USBDRIVER_T usbdriver);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED short STDCALL USBDriver_isUSB2Mode_stdcall(USBDRIVER_T c_usbdriver);
	EXPORTED signed char STDCALL USBDriver_USBBuildEndpointAddress_stdcall(USBDRIVER_T c_usbdriver, int param0, int param1);
	EXPORTED long long STDCALL USBDriver_openDevice_stdcall(USBDRIVER_T c_usbdriver, int param0, int param1, int param2);
	EXPORTED void STDCALL USBDriver_closeDevice_stdcall(USBDRIVER_T c_usbdriver, long long param0);
	EXPORTED int STDCALL USBDriver_setTimeout_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1, int param2);
	EXPORTED int STDCALL USBDriver_bulkIn_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1, CHARARRAY_T param2, int param3);
	EXPORTED int STDCALL USBDriver_bulkOut_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1, CHARARRAY_T param2, int param3);
	EXPORTED void STDCALL USBDriver_resetPipe_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1);
	EXPORTED void STDCALL USBDriver_abortPipe_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBENDPOINTDESCRIPTOR_T param1);
	EXPORTED void STDCALL USBDriver_getUSBConfigurationDescriptor_stdcall(USBDRIVER_T c_usbdriver, long long param0, int param1, USBCONFIGURATIONDESCRIPTOR_T retval);
	EXPORTED void STDCALL USBDriver_getUSBDeviceDescriptor_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBDEVICEDESCRIPTOR_T retval);
	EXPORTED void STDCALL USBDriver_getUSBInterfaceDescriptor_stdcall(USBDRIVER_T c_usbdriver, long long param0, USBINTERFACEDESCRIPTOR_T retval);
	EXPORTED void STDCALL USBDriver_getUSBStringDescriptor_stdcall(USBDRIVER_T c_usbdriver, long long param0, int param1, JSTRING_T retval);
	EXPORTED void STDCALL USBDriver_Destroy_stdcall(USBDRIVER_T usbdriver);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* USBDRIVER_H */
