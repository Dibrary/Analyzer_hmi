/**
 * File: TakesStringParameter.h
 * Autogenerated on Fri Mar 23 13:38:22 EDT 2018 based on
 * TakesStringParameter.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/TakesStringParameter
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef TAKESSTRINGPARAMETER_H
#define TAKESSTRINGPARAMETER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED TakesStringParameter : public BaseJavaClass // CPPClass.tag001
{
public: 
	JString getParameterValue();
	void setParameterValue(JString& param0);
	~TakesStringParameter();
	// No public default Java constructor; creating one:
	TakesStringParameter();
	// No public Java copy constructor; creating one:
	TakesStringParameter(const TakesStringParameter &that);
	// Creating assignment operator declaration:
	TakesStringParameter &operator=(const TakesStringParameter &that);

private:
	jmethodID mid_getParameterValue35;
	jmethodID mid_setParameterValue36;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_TAKESSTRINGPARAMETER_T
#define EXTERN_TYPEDEF_TAKESSTRINGPARAMETER_T
	typedef void* TAKESSTRINGPARAMETER_T;
#endif /* EXTERN_TYPEDEF_TAKESSTRINGPARAMETER_T */

	// No public default Java constructor; creating one:
	EXPORTED TAKESSTRINGPARAMETER_T TakesStringParameter_Create();
	EXPORTED void TakesStringParameter_getParameterValue(TAKESSTRINGPARAMETER_T c_takes_string_parameter, JSTRING_T retval);
	EXPORTED void TakesStringParameter_setParameterValue(TAKESSTRINGPARAMETER_T c_takes_string_parameter, JSTRING_T param0);
	EXPORTED void TakesStringParameter_Destroy(TAKESSTRINGPARAMETER_T takes_string_parameter);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL TakesStringParameter_getParameterValue_stdcall(TAKESSTRINGPARAMETER_T c_takes_string_parameter, JSTRING_T retval);
	EXPORTED void STDCALL TakesStringParameter_setParameterValue_stdcall(TAKESSTRINGPARAMETER_T c_takes_string_parameter, JSTRING_T param0);
	EXPORTED void STDCALL TakesStringParameter_Destroy_stdcall(TAKESSTRINGPARAMETER_T takes_string_parameter);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* TAKESSTRINGPARAMETER_H */
