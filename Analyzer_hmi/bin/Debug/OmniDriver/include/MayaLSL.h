/**
 * File: MayaLSL.h
 * Autogenerated on Fri Mar 23 13:38:56 EDT 2018 based on
 * MayaLSL.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/mayalsl/MayaLSL
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MAYALSL_H
#define MAYALSL_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "MayaPro.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class MayaPro;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED MayaLSL : public MayaPro // CPPClass.tag001
{
public: 
	MayaLSL();
	MayaLSL(int i);
	void openSpectrometer(int index);
	~MayaLSL();
	// No public Java copy constructor; creating one:
	MayaLSL(const MayaLSL &that);
	// Creating assignment operator declaration:
	MayaLSL &operator=(const MayaLSL &that);

private:
	jmethodID mid_MayaLSL4064;
	jmethodID mid_MayaLSL4065;
	jmethodID mid_openSpectrometer4066;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_MAYAPRO_T
#define EXTERN_TYPEDEF_MAYAPRO_T
	typedef void* MAYAPRO_T;
#endif /* EXTERN_TYPEDEF_MAYAPRO_T */
#ifndef EXTERN_TYPEDEF_MAYALSL_T
#define EXTERN_TYPEDEF_MAYALSL_T
	typedef void* MAYALSL_T;
#endif /* EXTERN_TYPEDEF_MAYALSL_T */

	EXPORTED MAYALSL_T MayaLSL_Create();
	EXPORTED MAYALSL_T MayaLSL_Create_1(int i);
	EXPORTED void MayaLSL_openSpectrometer(MAYALSL_T c_maya_l_s_l, int index);
	EXPORTED void MayaLSL_Destroy(MAYALSL_T maya_l_s_l);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED MAYALSL_T STDCALL MayaLSL_Create_stdcall();
	EXPORTED MAYALSL_T STDCALL MayaLSL_Create_stdcall_1(int i);
	EXPORTED void STDCALL MayaLSL_openSpectrometer_stdcall(MAYALSL_T c_maya_l_s_l, int index);
	EXPORTED void STDCALL MayaLSL_Destroy_stdcall(MAYALSL_T maya_l_s_l);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MAYALSL_H */
