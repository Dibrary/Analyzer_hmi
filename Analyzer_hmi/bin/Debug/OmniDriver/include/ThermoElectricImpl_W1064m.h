/**
 * File: ThermoElectricImpl_W1064m.h
 * Autogenerated on Fri Mar 23 13:38:41 EDT 2018 based on
 * ThermoElectricImpl_W1064m.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/thermoelectric/ThermoElectricImpl_W1064m
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef THERMOELECTRICIMPL_W1064M_H
#define THERMOELECTRICIMPL_W1064M_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "ThermoElectricImpl.h"
#include "W1064m.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class ThermoElectricImpl;
class W1064m;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED ThermoElectricImpl_W1064m : public ThermoElectricImpl // CPPClass.tag001
{
public: 
	ThermoElectricImpl_W1064m(W1064m& w1064m, USBInterface& usbInt, double min, double max, double step);
	void setTECEnable(short enable);
	void setFanEnable(short enable);
	double getDetectorTemperatureCelsius();
	double getDetectorTemperatureSetPointCelsius();
	void setDetectorSetPointCelsius(double point);
	double getSetPointMinimumCelsius();
	double getSetPointMaximumCelsius();
	double getSetPointIncrementCelsius();
	short isSaveTECStateEnabled();
	void saveTECState();
	JStringArray getFeatureGUIClassnames();
	~ThermoElectricImpl_W1064m();
	// No public default Java constructor; creating one:
	ThermoElectricImpl_W1064m();
	// No public Java copy constructor; creating one:
	ThermoElectricImpl_W1064m(const ThermoElectricImpl_W1064m &that);
	// Creating assignment operator declaration:
	ThermoElectricImpl_W1064m &operator=(const ThermoElectricImpl_W1064m &that);

private:
	jmethodID mid_ThermoElectricImpl_W1064m2213;
	jmethodID mid_setTECEnable2214;
	jmethodID mid_setFanEnable2215;
	jmethodID mid_getDetectorTemperatureCelsius2216;
	jmethodID mid_getDetectorTemperatureSetPointCelsius2217;
	jmethodID mid_setDetectorSetPointCelsius2218;
	jmethodID mid_getSetPointMinimumCelsius2219;
	jmethodID mid_getSetPointMaximumCelsius2220;
	jmethodID mid_getSetPointIncrementCelsius2221;
	jmethodID mid_isSaveTECStateEnabled2222;
	jmethodID mid_saveTECState2223;
	jmethodID mid_getFeatureGUIClassnames2224;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_THERMOELECTRICIMPL_T
#define EXTERN_TYPEDEF_THERMOELECTRICIMPL_T
	typedef void* THERMOELECTRICIMPL_T;
#endif /* EXTERN_TYPEDEF_THERMOELECTRICIMPL_T */
#ifndef EXTERN_TYPEDEF_W1064M_T
#define EXTERN_TYPEDEF_W1064M_T
	typedef void* W1064M_T;
#endif /* EXTERN_TYPEDEF_W1064M_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_THERMOELECTRICIMPL_W1064M_T
#define EXTERN_TYPEDEF_THERMOELECTRICIMPL_W1064M_T
	typedef void* THERMOELECTRICIMPL_W1064M_T;
#endif /* EXTERN_TYPEDEF_THERMOELECTRICIMPL_W1064M_T */

	// No public default Java constructor; creating one:
	EXPORTED THERMOELECTRICIMPL_W1064M_T ThermoElectricImpl_W1064m_Create();
	EXPORTED THERMOELECTRICIMPL_W1064M_T ThermoElectricImpl_W1064m_Create_1(W1064M_T w1064m, USBINTERFACE_T usbInt, double min, double max, double step);
	EXPORTED void ThermoElectricImpl_W1064m_setTECEnable(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, short enable);
	EXPORTED void ThermoElectricImpl_W1064m_setFanEnable(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, short enable);
	EXPORTED double ThermoElectricImpl_W1064m_getDetectorTemperatureCelsius(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED double ThermoElectricImpl_W1064m_getDetectorTemperatureSetPointCelsius(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED void ThermoElectricImpl_W1064m_setDetectorSetPointCelsius(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, double point);
	EXPORTED double ThermoElectricImpl_W1064m_getSetPointMinimumCelsius(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED double ThermoElectricImpl_W1064m_getSetPointMaximumCelsius(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED double ThermoElectricImpl_W1064m_getSetPointIncrementCelsius(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED short ThermoElectricImpl_W1064m_isSaveTECStateEnabled(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED void ThermoElectricImpl_W1064m_saveTECState(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED void ThermoElectricImpl_W1064m_getFeatureGUIClassnames(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, JSTRINGARRAY_T retval);
	EXPORTED void ThermoElectricImpl_W1064m_Destroy(THERMOELECTRICIMPL_W1064M_T thermo_electric_impl_w1064m);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED THERMOELECTRICIMPL_W1064M_T STDCALL ThermoElectricImpl_W1064m_Create_stdcall_1(W1064M_T w1064m, USBINTERFACE_T usbInt, double min, double max, double step);
	EXPORTED void STDCALL ThermoElectricImpl_W1064m_setTECEnable_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, short enable);
	EXPORTED void STDCALL ThermoElectricImpl_W1064m_setFanEnable_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, short enable);
	EXPORTED double STDCALL ThermoElectricImpl_W1064m_getDetectorTemperatureCelsius_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED double STDCALL ThermoElectricImpl_W1064m_getDetectorTemperatureSetPointCelsius_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED void STDCALL ThermoElectricImpl_W1064m_setDetectorSetPointCelsius_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, double point);
	EXPORTED double STDCALL ThermoElectricImpl_W1064m_getSetPointMinimumCelsius_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED double STDCALL ThermoElectricImpl_W1064m_getSetPointMaximumCelsius_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED double STDCALL ThermoElectricImpl_W1064m_getSetPointIncrementCelsius_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED short STDCALL ThermoElectricImpl_W1064m_isSaveTECStateEnabled_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED void STDCALL ThermoElectricImpl_W1064m_saveTECState_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m);
	EXPORTED void STDCALL ThermoElectricImpl_W1064m_getFeatureGUIClassnames_stdcall(THERMOELECTRICIMPL_W1064M_T c_thermo_electric_impl_w1064m, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL ThermoElectricImpl_W1064m_Destroy_stdcall(THERMOELECTRICIMPL_W1064M_T thermo_electric_impl_w1064m);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* THERMOELECTRICIMPL_W1064M_H */
