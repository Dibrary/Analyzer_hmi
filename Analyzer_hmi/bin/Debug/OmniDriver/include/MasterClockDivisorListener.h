/**
 * File: MasterClockDivisorListener.h
 * Autogenerated on Fri Mar 23 13:38:43 EDT 2018 based on
 * MasterClockDivisorListener.java
 * for the Java class
 * com/oceanoptics/omnidriver/interfaces/MasterClockDivisorListener
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef MASTERCLOCKDIVISORLISTENER_H
#define MASTERCLOCKDIVISORLISTENER_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#endif /* INCLUDES_IN_HEADER */


CLASS_TOKEN EXPORTED MasterClockDivisorListener : public BaseJavaClass // CPPClass.tag001
{
public: 
	void masterClockChanged(long long param0);
	~MasterClockDivisorListener();
	// No public default Java constructor; creating one:
	MasterClockDivisorListener();
	// No public Java copy constructor; creating one:
	MasterClockDivisorListener(const MasterClockDivisorListener &that);
	// Creating assignment operator declaration:
	MasterClockDivisorListener &operator=(const MasterClockDivisorListener &that);

private:
	jmethodID mid_masterClockChanged2559;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_MASTERCLOCKDIVISORLISTENER_T
#define EXTERN_TYPEDEF_MASTERCLOCKDIVISORLISTENER_T
	typedef void* MASTERCLOCKDIVISORLISTENER_T;
#endif /* EXTERN_TYPEDEF_MASTERCLOCKDIVISORLISTENER_T */

	// No public default Java constructor; creating one:
	EXPORTED MASTERCLOCKDIVISORLISTENER_T MasterClockDivisorListener_Create();
	EXPORTED void MasterClockDivisorListener_masterClockChanged(MASTERCLOCKDIVISORLISTENER_T c_master_clock_divisor_listener, long long param0);
	EXPORTED void MasterClockDivisorListener_Destroy(MASTERCLOCKDIVISORLISTENER_T master_clock_divisor_listener);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL MasterClockDivisorListener_masterClockChanged_stdcall(MASTERCLOCKDIVISORLISTENER_T c_master_clock_divisor_listener, long long param0);
	EXPORTED void STDCALL MasterClockDivisorListener_Destroy_stdcall(MASTERCLOCKDIVISORLISTENER_T master_clock_divisor_listener);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* MASTERCLOCKDIVISORLISTENER_H */
