/***
 * LaserArray.h
 * Autogenerated on Fri Mar 23 13:39:21 EDT 2018
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */

#ifndef LASERARRAY_H
#define LASERARRAY_H
#include "ArrayTypes.h"
#include "Laser.h"

#ifdef __cplusplus

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Laser;
#endif /* CLASS_PREDECLARATIONS */

class EXPORTED LaserArray : public AbstractArray {
public:
	/* Default constructor */
	LaserArray();

	/* Initialization constructor */
	LaserArray(Laser *objects, int length);

	/* Copy constructor */
	LaserArray(const LaserArray &that);

	/* Destructor */
	~LaserArray();

	/* Assignment operator */
	LaserArray &operator=(const LaserArray &that);

	/* Setter */
	void setObjects(Laser *objects, int length);

	/* Getter */
	Laser *getObjects();

	/* Getter for specific index */
	Laser getElementAt(int index);

	/* Utility method for internal use only */
	char *getClassDescriptor();

private:
	Laser *data;
	JNIBridge* jni;
	EnvWrapper* localenv;
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_LASERARRAY_T
#define EXTERN_TYPEDEF_LASERARRAY_T
	typedef void* LASERARRAY_T;
#endif /* EXTERN_TYPEDEF_LASERARRAY_T */

#ifndef EXTERN_TYPEDEF_LASER_T
#define EXTERN_TYPEDEF_LASER_T
	typedef void* LASER_T;
#endif /* EXTERN_TYPEDEF_LASER_T */

	EXPORTED LASERARRAY_T LaserArray_Create();
	EXPORTED LASERARRAY_T LaserArray_Create_1(LASER_T* objects, int length);
	EXPORTED void LaserArray_Destroy(LASERARRAY_T laser_array);
	EXPORTED int LaserArray_getLength(LASERARRAY_T laser_array);
	EXPORTED void LaserArray_setObjects(LASERARRAY_T laser_array, LASER_T* objects, int length);
	EXPORTED void LaserArray_getElementAt(LASERARRAY_T laser_array, int index, LASER_T target);
	EXPORTED int LaserArray_copyObjectsInto(LASERARRAY_T laser_array, LASER_T* target, int length);
#ifdef __cplusplus
};
#endif /* __cplusplus */

#endif /* LASERARRAY_H */
