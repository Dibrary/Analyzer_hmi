/**
 * File: AnalogOutImpl_PSOC.h
 * Autogenerated on Fri Mar 23 13:38:30 EDT 2018 based on
 * AnalogOutImpl_PSOC.java
 * for the Java class
 * com/oceanoptics/omnidriver/features/analogout/AnalogOutImpl_PSOC
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef ANALOGOUTIMPL_PSOC_H
#define ANALOGOUTIMPL_PSOC_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "AnalogOutImpl.h"
#include "USBInterface.h"
#include "JStringArray.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class AnalogOutImpl;
class USBInterface;
class JStringArray;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED AnalogOutImpl_PSOC : public AnalogOutImpl // CPPClass.tag001
{
public: 
	AnalogOutImpl_PSOC(USBInterface& usbInt);
	void setDACCounts(int counts, int channel);
	double analogOutCountsToVolts(int counts);
	int getDACMinimum();
	int getDACMaximum();
	int getDACIncrement();
	short isDACPresent();
	int getDACPins();
	JStringArray getFeatureGUIClassnames();
	~AnalogOutImpl_PSOC();
	// No public default Java constructor; creating one:
	AnalogOutImpl_PSOC();
	// No public Java copy constructor; creating one:
	AnalogOutImpl_PSOC(const AnalogOutImpl_PSOC &that);
	// Creating assignment operator declaration:
	AnalogOutImpl_PSOC &operator=(const AnalogOutImpl_PSOC &that);

private:
	jmethodID mid_AnalogOutImpl_PSOC819;
	jmethodID mid_setDACCounts820;
	jmethodID mid_analogOutCountsToVolts821;
	jmethodID mid_getDACMinimum822;
	jmethodID mid_getDACMaximum823;
	jmethodID mid_getDACIncrement824;
	jmethodID mid_isDACPresent825;
	jmethodID mid_getDACPins826;
	jmethodID mid_getFeatureGUIClassnames827;
	jfieldID fid_dataOutEndPoint;
	jfieldID fid_lowSpeedInEndPoint;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_ANALOGOUTIMPL_T
#define EXTERN_TYPEDEF_ANALOGOUTIMPL_T
	typedef void* ANALOGOUTIMPL_T;
#endif /* EXTERN_TYPEDEF_ANALOGOUTIMPL_T */
#ifndef EXTERN_TYPEDEF_USBINTERFACE_T
#define EXTERN_TYPEDEF_USBINTERFACE_T
	typedef void* USBINTERFACE_T;
#endif /* EXTERN_TYPEDEF_USBINTERFACE_T */
#ifndef EXTERN_TYPEDEF_JSTRINGARRAY_T
#define EXTERN_TYPEDEF_JSTRINGARRAY_T
	typedef void* JSTRINGARRAY_T;
#endif /* EXTERN_TYPEDEF_JSTRINGARRAY_T */
#ifndef EXTERN_TYPEDEF_ANALOGOUTIMPL_PSOC_T
#define EXTERN_TYPEDEF_ANALOGOUTIMPL_PSOC_T
	typedef void* ANALOGOUTIMPL_PSOC_T;
#endif /* EXTERN_TYPEDEF_ANALOGOUTIMPL_PSOC_T */

	// No public default Java constructor; creating one:
	EXPORTED ANALOGOUTIMPL_PSOC_T AnalogOutImpl_PSOC_Create();
	EXPORTED ANALOGOUTIMPL_PSOC_T AnalogOutImpl_PSOC_Create_1(USBINTERFACE_T usbInt);
	EXPORTED void AnalogOutImpl_PSOC_setDACCounts(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c, int counts, int channel);
	EXPORTED double AnalogOutImpl_PSOC_analogOutCountsToVolts(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c, int counts);
	EXPORTED int AnalogOutImpl_PSOC_getDACMinimum(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED int AnalogOutImpl_PSOC_getDACMaximum(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED int AnalogOutImpl_PSOC_getDACIncrement(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED short AnalogOutImpl_PSOC_isDACPresent(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED int AnalogOutImpl_PSOC_getDACPins(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED void AnalogOutImpl_PSOC_getFeatureGUIClassnames(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c, JSTRINGARRAY_T retval);
	EXPORTED void AnalogOutImpl_PSOC_Destroy(ANALOGOUTIMPL_PSOC_T analog_out_impl_p_s_o_c);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED ANALOGOUTIMPL_PSOC_T STDCALL AnalogOutImpl_PSOC_Create_stdcall_1(USBINTERFACE_T usbInt);
	EXPORTED void STDCALL AnalogOutImpl_PSOC_setDACCounts_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c, int counts, int channel);
	EXPORTED double STDCALL AnalogOutImpl_PSOC_analogOutCountsToVolts_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c, int counts);
	EXPORTED int STDCALL AnalogOutImpl_PSOC_getDACMinimum_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED int STDCALL AnalogOutImpl_PSOC_getDACMaximum_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED int STDCALL AnalogOutImpl_PSOC_getDACIncrement_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED short STDCALL AnalogOutImpl_PSOC_isDACPresent_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED int STDCALL AnalogOutImpl_PSOC_getDACPins_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c);
	EXPORTED void STDCALL AnalogOutImpl_PSOC_getFeatureGUIClassnames_stdcall(ANALOGOUTIMPL_PSOC_T c_analog_out_impl_p_s_o_c, JSTRINGARRAY_T retval);
	EXPORTED void STDCALL AnalogOutImpl_PSOC_Destroy_stdcall(ANALOGOUTIMPL_PSOC_T analog_out_impl_p_s_o_c);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* ANALOGOUTIMPL_PSOC_H */
