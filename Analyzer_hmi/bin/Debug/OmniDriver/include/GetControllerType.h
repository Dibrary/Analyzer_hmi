/**
 * File: GetControllerType.h
 * Autogenerated on Fri Mar 23 13:38:22 EDT 2018 based on
 * GetControllerType.java
 * for the Java class
 * com/oceanoptics/omnidriver/accessories/mikropack/commands/getcontrollertype/GetControllerType
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef GETCONTROLLERTYPE_H
#define GETCONTROLLERTYPE_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "Node.h"
#include "JString.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class Node;
class JString;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED GetControllerType : public BaseJavaClass // CPPClass.tag001
{
public: 
	JString getControllerType(Node& param0);
	~GetControllerType();
	// No public default Java constructor; creating one:
	GetControllerType();
	// No public Java copy constructor; creating one:
	GetControllerType(const GetControllerType &that);
	// Creating assignment operator declaration:
	GetControllerType &operator=(const GetControllerType &that);

private:
	jmethodID mid_getControllerType67;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_NODE_T
#define EXTERN_TYPEDEF_NODE_T
	typedef void* NODE_T;
#endif /* EXTERN_TYPEDEF_NODE_T */
#ifndef EXTERN_TYPEDEF_JSTRING_T
#define EXTERN_TYPEDEF_JSTRING_T
	typedef void* JSTRING_T;
#endif /* EXTERN_TYPEDEF_JSTRING_T */
#ifndef EXTERN_TYPEDEF_GETCONTROLLERTYPE_T
#define EXTERN_TYPEDEF_GETCONTROLLERTYPE_T
	typedef void* GETCONTROLLERTYPE_T;
#endif /* EXTERN_TYPEDEF_GETCONTROLLERTYPE_T */

	// No public default Java constructor; creating one:
	EXPORTED GETCONTROLLERTYPE_T GetControllerType_Create();
	EXPORTED void GetControllerType_getControllerType(GETCONTROLLERTYPE_T c_get_controller_type, NODE_T param0, JSTRING_T retval);
	EXPORTED void GetControllerType_Destroy(GETCONTROLLERTYPE_T get_controller_type);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL GetControllerType_getControllerType_stdcall(GETCONTROLLERTYPE_T c_get_controller_type, NODE_T param0, JSTRING_T retval);
	EXPORTED void STDCALL GetControllerType_Destroy_stdcall(GETCONTROLLERTYPE_T get_controller_type);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* GETCONTROLLERTYPE_H */
