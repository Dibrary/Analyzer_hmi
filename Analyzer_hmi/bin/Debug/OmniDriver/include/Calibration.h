/**
 * File: Calibration.h
 * Autogenerated on Fri Mar 23 13:38:56 EDT 2018 based on
 * Calibration.java
 * for the Java class
 * com/oceanoptics/omnidriver/spectrometer/mmsraman/features/calibration/Calibration
 * Copyright (C) 2006 - 2008 Ocean Optics, Inc.  All rights reserved.
 */


#ifndef CALIBRATION_H
#define CALIBRATION_H
#include "BaseJavaClass.h"

#ifdef __cplusplus

#ifdef INCLUDES_IN_HEADER
#include "MMSRamanCalibration.h"
#endif /* INCLUDES_IN_HEADER */

/* Pre-declarations for circular dependencies in header files */
#ifdef CLASS_PREDECLARATIONS
class MMSRamanCalibration;
#endif /* CLASS_PREDECLARATIONS */

CLASS_TOKEN EXPORTED Calibration : public BaseJavaClass // CPPClass.tag001
{
public: 
	void readCalibrationFromSpectrometer();
	void writeCalibrationToSpectrometer(MMSRamanCalibration& param0);
	MMSRamanCalibration getCalibration();
	~Calibration();
	// No public default Java constructor; creating one:
	Calibration();
	// No public Java copy constructor; creating one:
	Calibration(const Calibration &that);
	// Creating assignment operator declaration:
	Calibration &operator=(const Calibration &that);

private:
	jmethodID mid_readCalibrationFromSpectrometer4177;
	jmethodID mid_writeCalibrationToSpectrometer4178;
	jmethodID mid_getCalibration4179;
	void init_ids(JNIEnv* pJNIEnv);
};

extern "C" {
#endif /* __cplusplus */
#ifndef EXTERN_TYPEDEF_MMSRAMANCALIBRATION_T
#define EXTERN_TYPEDEF_MMSRAMANCALIBRATION_T
	typedef void* MMSRAMANCALIBRATION_T;
#endif /* EXTERN_TYPEDEF_MMSRAMANCALIBRATION_T */
#ifndef EXTERN_TYPEDEF_CALIBRATION_T
#define EXTERN_TYPEDEF_CALIBRATION_T
	typedef void* CALIBRATION_T;
#endif /* EXTERN_TYPEDEF_CALIBRATION_T */

	// No public default Java constructor; creating one:
	EXPORTED CALIBRATION_T Calibration_Create();
	EXPORTED void Calibration_readCalibrationFromSpectrometer(CALIBRATION_T c_calibration);
	EXPORTED void Calibration_writeCalibrationToSpectrometer(CALIBRATION_T c_calibration, MMSRAMANCALIBRATION_T param0);
	EXPORTED void Calibration_getCalibration(CALIBRATION_T c_calibration, MMSRAMANCALIBRATION_T retval);
	EXPORTED void Calibration_Destroy(CALIBRATION_T calibration);

#ifdef WIN32
	// Use the following function prototypes when calling functions from Visual Basic 6
	EXPORTED void STDCALL Calibration_readCalibrationFromSpectrometer_stdcall(CALIBRATION_T c_calibration);
	EXPORTED void STDCALL Calibration_writeCalibrationToSpectrometer_stdcall(CALIBRATION_T c_calibration, MMSRAMANCALIBRATION_T param0);
	EXPORTED void STDCALL Calibration_getCalibration_stdcall(CALIBRATION_T c_calibration, MMSRAMANCALIBRATION_T retval);
	EXPORTED void STDCALL Calibration_Destroy_stdcall(CALIBRATION_T calibration);
#endif /* WIN32 */
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif /* CALIBRATION_H */
